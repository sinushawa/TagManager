{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment TagManager }TagManager}
{\comment Generated by doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TagManager}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b TagManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagPan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Autodesk.Max.Plugins.ClassDesc2
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.TagCenter.Descriptor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CuiActionCommandAdapter
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.Actions.ApplyEntityFromLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ApplyLastEntity\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ContainingEntity\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ContainingEntityGrow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ContainingEntityShrink\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.CopyEntity\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.CreateSelectionSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.FastTag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.OpenClose\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.RemoveObjectsFromEntities\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ToggleAutoCloneTag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.Actions.ToggleAutoRename\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
TagManager.DDNode< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.DDNode< TagNode >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.TagNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IComponentConnector
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.FastWPFTag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
TagManager.IConsoleSelElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.ConsoleElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.ConsoleContainerElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.ConsoleStringSelElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
IMultiValueConverter
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.NodesToBoolConverter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
INotifyPropertyChanged
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.TagNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IPlugin
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.TagCenter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ISerializable
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.ConsoleContainerElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.ConsoleElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.TagNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IValueConverter
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.ItemToContextMenuConverter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MarkupExtension
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.NodesToBoolConverter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
TagManager.ObjectDataChunk\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ObservableCollection
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.SortableObservableCollection< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
System.Collections.ObjectModel.ObservableCollection
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagPan.ObservableCollection< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ReferenceMaker
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.TagCenter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagManager.TagReferenceMaker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
TagManager.SortableObservableCollection< uint >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
System.Windows.Controls.UserControl
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.FastWPFTag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
UserControl
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TagManager.EditableTextBlock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TagPan.FastHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b TagManager.Actions.ApplyEntityFromLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ApplyLastEntity} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.ConsoleContainerElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.ConsoleElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.ConsoleStringSelElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ContainingEntity} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ContainingEntityGrow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ContainingEntityShrink} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.CopyEntity} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.CreateSelectionSet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.DDNode< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DDNode is a tree-like container base, it handles hierarchy changes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.TagCenter.Descriptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.EditableTextBlock} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interaction logic for EditableTextBlock.xaml })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagPan.FastHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.FastTag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.FastWPFTag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.IConsoleSelElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.ItemToContextMenuConverter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.NodesToBoolConverter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.ObjectDataChunk} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagPan.ObservableCollection< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.OpenClose} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.RemoveObjectsFromEntities} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.SortableObservableCollection< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed and allows sorting })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.TagCenter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.TagNode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TagNode is the container for entities it inehrites from DDNode })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.TagReferenceMaker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ToggleAutoCloneTag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TagManager.Actions.ToggleAutoRename} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/GitHub/TagManager/TagManager/{\b ConsoleContainerElement.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b ConsoleElement.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b ConsoleStringSelElement.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b CustomExtension.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b DDNode.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b DependencyObjExtensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b EditableTextBlock.xaml.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b EntityVisibility.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b EnumHelper.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b ExtensionObservableCollection.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b FastHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b FastWPFTag.xaml.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b IConsoleSelElement.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b ItemToContextMenuConverter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b Layer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b MaxPluginUtilities.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b NodesToBoolConverter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b ObjectDataChunk.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b SortableObservableCollection.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagCenter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagCenterAction.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagGlobals.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagHelperMethods.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagMethods.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagNode.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b TagReferenceMaker.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/GitHub/TagManager/TagManager/{\b WindowExtensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager Namespace Reference\par \pard\plain 
{\tc\tcl2 \v TagManager}
{\xe \v TagManager}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssemblyFunctions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleContainerElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleStringSelElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CustomExtension}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DDNode}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DDNode is a tree-like container base, it handles hierarchy changes. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DependencyObjExtensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EditableTextBlock}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interaction logic for EditableTextBlock.xaml. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EnumHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FastWPFTag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IConsoleSelElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ItemToContextMenuConverter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LayerManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MaxPluginUtilities}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NodesToBoolConverter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObjectDataChunk}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObjectDataChunkExtensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SortableObservableCollection}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed and allows sorting. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SortableObservableCollectionExtension}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagCenter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagGlobals}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagHelperMethods}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagMethods}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagNode}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TagNode is the container for entities it inehrites from DDNode. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReferenceMaker}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WindowExtensions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b concat} \{ {\b addition}
, {\b substraction}
, {\b intersection}
, {\b except}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ConsoleElementModifier} \{ {\b None}
, {\b Selection}
, {\b Containing}
, {\b Children}
, {\b Not}
, {\b Visible}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EntityVisibility} \{ {\b Vsible}
, {\b Hidden}
, {\b Mixed}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v concat\:TagManager}
{\xe \v TagManager\:concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum TagManager.concat}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v ConsoleElementModifier\:TagManager}
{\xe \v TagManager\:ConsoleElementModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum TagManager.ConsoleElementModifier}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\xe \v EntityVisibility\:TagManager}
{\xe \v TagManager\:EntityVisibility}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum TagManager.EntityVisibility}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b EntityVisibility.cs}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions Namespace Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions}
{\xe \v TagManager.Actions}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ApplyEntityFromLayer}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ApplyLastEntity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContainingEntity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContainingEntityGrow}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ContainingEntityShrink}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CopyEntity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CreateSelectionSet}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FastTag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OpenClose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RemoveObjectsFromEntities}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ToggleAutoCloneTag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ToggleAutoRename}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagPan Namespace Reference\par \pard\plain 
{\tc\tcl2 \v TagPan}
{\xe \v TagPan}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FastHost}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObservableCollection}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. }}\par}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ApplyEntityFromLayer Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
Inheritance diagram for TagManager.Actions.ApplyEntityFromLayer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_apply_entity_from_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 343} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ApplyEntityFromLayer.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 373} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyEntityFromLayer.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 345} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyEntityFromLayer.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 352} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyEntityFromLayer.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 359} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ApplyEntityFromLayer}
{\xe \v TagManager.Actions.ApplyEntityFromLayer\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyEntityFromLayer.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 366} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ApplyLastEntity Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
Inheritance diagram for TagManager.Actions.ApplyLastEntity:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_apply_last_entity__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 386} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ApplyLastEntity.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 416} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyLastEntity.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 388} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyLastEntity.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 395} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyLastEntity.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 402} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ApplyLastEntity}
{\xe \v TagManager.Actions.ApplyLastEntity\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ApplyLastEntity.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 409} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.ConsoleContainerElement Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Inheritance diagram for TagManager.ConsoleContainerElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_console_container_element__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleContainerElement} ({\b ConsoleContainerElement} _parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override List< uint > {\b getCorrespondingSel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b getCorrespondingStr} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b TagManager.ConsoleElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract List< uint > {\b getCorrespondingSel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b getCorrespondingStr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetObjectData} (SerializationInfo info, StreamingContext context)\par
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

List< uint > {\b getCorrespondingSel} (){\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getCorrespondingStr} (){\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleContainerElement} {\b parent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ConsoleElement} > {\b content} = new List<{\b ConsoleElement}>()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< concat > {\b ops} = new List<concat>()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b open} = true\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleContainerElement} (SerializationInfo info, StreamingContext context)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b TagManager.ConsoleElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} (List< uint > c1, {\b ConsoleElement} c2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b ConsoleContainerElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleContainerElement\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:ConsoleContainerElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleContainerElement.ConsoleContainerElement ()}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v ConsoleContainerElement\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:ConsoleContainerElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleContainerElement.ConsoleContainerElement ({\b ConsoleContainerElement}  {\i _parent})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v ConsoleContainerElement\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:ConsoleContainerElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleContainerElement.ConsoleContainerElement (SerializationInfo  {\i info}, StreamingContext  {\i context}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b ConsoleContainerElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCorrespondingSel\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:getCorrespondingSel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override List< uint > TagManager.ConsoleContainerElement.getCorrespondingSel (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.ConsoleElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 28} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v getCorrespondingStr\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:getCorrespondingStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.ConsoleContainerElement.getCorrespondingStr (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.ConsoleElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 63} of file {\b ConsoleContainerElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v content\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b ConsoleElement}> TagManager.ConsoleContainerElement.content = new List<{\b ConsoleElement}>()}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v open\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.ConsoleContainerElement.open = true}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v ops\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:ops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<concat> TagManager.ConsoleContainerElement.ops = new List<concat>()}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b ConsoleContainerElement.cs}.}\par
}
{\xe \v parent\:TagManager.ConsoleContainerElement}
{\xe \v TagManager.ConsoleContainerElement\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ConsoleContainerElement} TagManager.ConsoleContainerElement.parent}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b ConsoleContainerElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleContainerElement.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.ConsoleElement Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Inheritance diagram for TagManager.ConsoleElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_console_element__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract List< uint > {\b getCorrespondingSel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b getCorrespondingStr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetObjectData} (SerializationInfo info, StreamingContext context)\par
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

List< uint > {\b getCorrespondingSel} (){\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getCorrespondingStr} (){\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} (List< uint > c1, {\b ConsoleElement} c2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 26} of file {\b ConsoleElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleElement\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:ConsoleElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleElement.ConsoleElement ()}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b ConsoleElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCorrespondingSel\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:getCorrespondingSel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract List< uint > TagManager.ConsoleElement.getCorrespondingSel (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.IConsoleSelElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getCorrespondingStr\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:getCorrespondingStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string TagManager.ConsoleElement.getCorrespondingStr (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.IConsoleSelElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetObjectData\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:GetObjectData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.ConsoleElement.GetObjectData (SerializationInfo  {\i info}, StreamingContext  {\i context})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator*\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator* ({\b ConsoleElement}  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator*\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator* (List< uint >  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator+\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator+ ({\b ConsoleElement}  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator+\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator+ (List< uint >  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator-\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator- ({\b ConsoleElement}  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator-\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator- (List< uint >  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator/\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator/ ({\b ConsoleElement}  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b ConsoleElement.cs}.}\par
}
{\xe \v operator/\:TagManager.ConsoleElement}
{\xe \v TagManager.ConsoleElement\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static List< uint > TagManager.ConsoleElement.operator/ (List< uint >  {\i c1}, {\b ConsoleElement}  {\i c2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 86} of file {\b ConsoleElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleElement.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.ConsoleStringSelElement Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
Inheritance diagram for TagManager.ConsoleStringSelElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_console_string_sel_element__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleStringSelElement} (string _name, ConsoleElementModifier _modifier)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override List< uint > {\b getCorrespondingSel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b getCorrespondingStr} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b TagManager.ConsoleElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract List< uint > {\b getCorrespondingSel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b getCorrespondingStr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetObjectData} (SerializationInfo info, StreamingContext context)\par
}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

List< uint > {\b getCorrespondingSel} (){\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getCorrespondingStr} (){\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleElementModifier {\b modifier}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleStringSelElement} (SerializationInfo info, StreamingContext context)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b TagManager.ConsoleElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator+} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator-} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator*} (List< uint > c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} ({\b ConsoleElement} c1, {\b ConsoleElement} c2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static List< uint > {\b operator/} (List< uint > c1, {\b ConsoleElement} c2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 23} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleStringSelElement\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:ConsoleStringSelElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleStringSelElement.ConsoleStringSelElement (string  {\i _name}, ConsoleElementModifier  {\i _modifier})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\xe \v ConsoleStringSelElement\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:ConsoleStringSelElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ConsoleStringSelElement.ConsoleStringSelElement (SerializationInfo  {\i info}, StreamingContext  {\i context}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCorrespondingSel\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:getCorrespondingSel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override List< uint > TagManager.ConsoleStringSelElement.getCorrespondingSel (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.ConsoleElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 34} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\xe \v getCorrespondingStr\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:getCorrespondingStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.ConsoleStringSelElement.getCorrespondingStr (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b TagManager.ConsoleElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 80} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v modifier\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:modifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ConsoleElementModifier TagManager.ConsoleStringSelElement.modifier}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\xe \v name\:TagManager.ConsoleStringSelElement}
{\xe \v TagManager.ConsoleStringSelElement\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.ConsoleStringSelElement.name}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b ConsoleStringSelElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleStringSelElement.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ContainingEntity Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
Inheritance diagram for TagManager.Actions.ContainingEntity:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_containing_entity__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 91} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ContainingEntity.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntity.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntity.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntity.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 107} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ContainingEntity}
{\xe \v TagManager.Actions.ContainingEntity\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntity.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ContainingEntityGrow Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
Inheritance diagram for TagManager.Actions.ContainingEntityGrow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_containing_entity_grow__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 133} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ContainingEntityGrow.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 163} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityGrow.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityGrow.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityGrow.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ContainingEntityGrow}
{\xe \v TagManager.Actions.ContainingEntityGrow\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityGrow.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 156} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ContainingEntityShrink Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
Inheritance diagram for TagManager.Actions.ContainingEntityShrink:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_containing_entity_shrink__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 175} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ContainingEntityShrink.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 205} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityShrink.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 177} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityShrink.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityShrink.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ContainingEntityShrink}
{\xe \v TagManager.Actions.ContainingEntityShrink\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ContainingEntityShrink.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.CopyEntity Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
Inheritance diagram for TagManager.Actions.CopyEntity:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_copy_entity__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 429} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.CopyEntity.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 459} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CopyEntity.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 431} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CopyEntity.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 438} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CopyEntity.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 445} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.CopyEntity}
{\xe \v TagManager.Actions.CopyEntity\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CopyEntity.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 452} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.CreateSelectionSet Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
Inheritance diagram for TagManager.Actions.CreateSelectionSet:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_create_selection_set__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 301} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.CreateSelectionSet.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 331} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CreateSelectionSet.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 303} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CreateSelectionSet.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 310} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CreateSelectionSet.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 317} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.CreateSelectionSet}
{\xe \v TagManager.Actions.CreateSelectionSet\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.CreateSelectionSet.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 324} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.DDNode< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DDNode is a tree-like container base, it handles hierarchy changes. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DDNode_ChangedParent} (object sender, EventArgs e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Children_CollectionChanged} (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnInsert} (int index, object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanInsertFormat} (int index, string format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanInsert} (int index, object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDropFormat} (string arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDrop} (object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnDrop} (object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDrag} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b OnDrag} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NotifyPropertyChanged} ([CallerMemberName] String propertyName="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< T > {\b GetNodeBranch} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< T > {\b GetNodeBranch} (bool _rootIncluded)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b GetNodeBranchElementsNames} (bool _toRemove)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b BranchName} (List< T > _entities, string _delimiter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetNodeBranchName} (string _delimiter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetNodeBranchName} (string _delimiter, List< string > _toRemove)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SortableObservableCollection}< T > {\b Children}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b LongName}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b Parent}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowDrop}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowDrag}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowInsert}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedParent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedLongName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PropertyChangedEventHandler {\b PropertyChanged}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DDNode is a tree-like container base, it handles hierarchy changes. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{The type of elements contained as children.\cell }
{\row }
}
}{{{\b Type Constraints}}\par
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\i T} : {\i {\b DDNode}<T>} \par
{\i T} : {\i INotifyPropertyChanged} \par
\par
}{
Definition at line {\b 19} of file {\b DDNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DDNode\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:DDNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagManager.DDNode}< T >.{\b DDNode} ()}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b DDNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BranchName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:BranchName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b TagManager.DDNode}< T >.BranchName (List< T >  {\i _entities}, string  {\i _delimiter})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b DDNode.cs}.}\par
}
{\xe \v CanDrag\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:CanDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.CanDrag ()}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b DDNode.cs}.}\par
}
{\xe \v CanDrop\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:CanDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.CanDrop (object  {\i obj})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 155} of file {\b DDNode.cs}.}\par
}
{\xe \v CanDropFormat\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:CanDropFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.CanDropFormat (string  {\i arg})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b DDNode.cs}.}\par
}
{\xe \v CanInsert\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:CanInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.CanInsert (int  {\i index}, object  {\i obj})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b DDNode.cs}.}\par
}
{\xe \v CanInsertFormat\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:CanInsertFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.CanInsertFormat (int  {\i index}, string  {\i format})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b DDNode.cs}.}\par
}
{\xe \v Children_CollectionChanged\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:Children_CollectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.DDNode}< T >.Children_CollectionChanged (object  {\i sender}, System::Collections::Specialized::NotifyCollectionChangedEventArgs  {\i e})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b DDNode.cs}.}\par
}
{\xe \v DDNode_ChangedParent\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:DDNode_ChangedParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.DDNode}< T >.DDNode_ChangedParent (object  {\i sender}, EventArgs  {\i e})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b DDNode.cs}.}\par
}
{\xe \v GetNodeBranch\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:GetNodeBranch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List< T > {\b TagManager.DDNode}< T >.GetNodeBranch ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 193} of file {\b DDNode.cs}.}\par
}
{\xe \v GetNodeBranch\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:GetNodeBranch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List< T > {\b TagManager.DDNode}< T >.GetNodeBranch (bool  {\i _rootIncluded})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b DDNode.cs}.}\par
}
{\xe \v GetNodeBranchElementsNames\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:GetNodeBranchElementsNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List< string > {\b TagManager.DDNode}< T >.GetNodeBranchElementsNames (bool  {\i _toRemove})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 215} of file {\b DDNode.cs}.}\par
}
{\xe \v GetNodeBranchName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:GetNodeBranchName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b TagManager.DDNode}< T >.GetNodeBranchName (string  {\i _delimiter})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 246} of file {\b DDNode.cs}.}\par
}
{\xe \v GetNodeBranchName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:GetNodeBranchName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b TagManager.DDNode}< T >.GetNodeBranchName (string  {\i _delimiter}, List< string >  {\i _toRemove})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 251} of file {\b DDNode.cs}.}\par
}
{\xe \v NotifyPropertyChanged\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:NotifyPropertyChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.DDNode}< T >.NotifyPropertyChanged ([CallerMemberName] String  {\i propertyName} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b DDNode.cs}.}\par
}
{\xe \v OnDrag\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:OnDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object {\b TagManager.DDNode}< T >.OnDrag ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 170} of file {\b DDNode.cs}.}\par
}
{\xe \v OnDrop\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:OnDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void {\b TagManager.DDNode}< T >.OnDrop (object  {\i obj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b DDNode.cs}.}\par
}
{\xe \v OnInsert\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:OnInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.DDNode}< T >.OnInsert (int  {\i index}, object  {\i obj})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 117} of file {\b DDNode.cs}.}\par
}
{\xe \v ToString\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string {\b TagManager.DDNode}< T >.ToString ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b DDNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v AllowDrag\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:AllowDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.AllowDrag{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 151} of file {\b DDNode.cs}.}\par
}
{\xe \v AllowDrop\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:AllowDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.AllowDrop{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b DDNode.cs}.}\par
}
{\xe \v AllowInsert\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:AllowInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b TagManager.DDNode}< T >.AllowInsert{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 153} of file {\b DDNode.cs}.}\par
}
{\xe \v Children\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:Children}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SortableObservableCollection}<T> {\b TagManager.DDNode}< T >.Children{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b DDNode.cs}.}\par
}
{\xe \v LongName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:LongName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b TagManager.DDNode}< T >.LongName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b DDNode.cs}.}\par
}
{\xe \v Name\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b TagManager.DDNode}< T >.Name{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b DDNode.cs}.}\par
}
{\xe \v Parent\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:Parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
T {\b TagManager.DDNode}< T >.Parent{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b DDNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ChangedLongName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:ChangedLongName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler {\b TagManager.DDNode}< T >.ChangedLongName}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b DDNode.cs}.}\par
}
{\xe \v ChangedName\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:ChangedName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler {\b TagManager.DDNode}< T >.ChangedName}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b DDNode.cs}.}\par
}
{\xe \v ChangedParent\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:ChangedParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler {\b TagManager.DDNode}< T >.ChangedParent}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b DDNode.cs}.}\par
}
{\xe \v PropertyChanged\:TagManager.DDNode< T >}
{\xe \v TagManager.DDNode< T >\:PropertyChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PropertyChangedEventHandler {\b TagManager.DDNode}< T >.PropertyChanged}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 174} of file {\b DDNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/DDNode.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.TagCenter.Descriptor Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
Inheritance diagram for TagManager.TagCenter.Descriptor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_tag_center_1_1_descriptor__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PostLoadCallback}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Descriptor} (IGlobal global)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override object {\b Create} (bool loading)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IOResult {\b Save} (IISave isave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IOResult {\b Load} (IILoad iload)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveIsNeeded} = true\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IClass_ID {\b _classID}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IGlobal {\b _global}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IGlobal {\b Global}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IClass_ID {\b ClassID}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ClassName}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsPublic}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override SClass_ID {\b SuperClassID}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b NeedsToSave}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b NonLocalizedClassName}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 54} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Descriptor\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Descriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagCenter.Descriptor.Descriptor (IGlobal  {\i global})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override object TagManager.TagCenter.Descriptor.Create (bool  {\i loading})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b TagCenter.cs}.}\par
}
{\xe \v Load\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IOResult TagManager.TagCenter.Descriptor.Load (IILoad  {\i iload})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 161} of file {\b TagCenter.cs}.}\par
}
{\xe \v Save\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IOResult TagManager.TagCenter.Descriptor.Save (IISave  {\i isave})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 156} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _classID\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:_classID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IClass_ID TagManager.TagCenter.Descriptor._classID{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b TagCenter.cs}.}\par
}
{\xe \v _global\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:_global}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IGlobal TagManager.TagCenter.Descriptor._global{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b TagCenter.cs}.}\par
}
{\xe \v saveIsNeeded\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:saveIsNeeded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.TagCenter.Descriptor.saveIsNeeded = true}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Category\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.TagCenter.Descriptor.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 117} of file {\b TagCenter.cs}.}\par
}
{\xe \v ClassID\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:ClassID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IClass_ID TagManager.TagCenter.Descriptor.ClassID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 122} of file {\b TagCenter.cs}.}\par
}
{\xe \v ClassName\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:ClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.TagCenter.Descriptor.ClassName{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b TagCenter.cs}.}\par
}
{\xe \v Global\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:Global}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IGlobal TagManager.TagCenter.Descriptor.Global{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b TagCenter.cs}.}\par
}
{\xe \v IsPublic\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:IsPublic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool TagManager.TagCenter.Descriptor.IsPublic{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 137} of file {\b TagCenter.cs}.}\par
}
{\xe \v NeedsToSave\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:NeedsToSave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool TagManager.TagCenter.Descriptor.NeedsToSave{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b TagCenter.cs}.}\par
}
{\xe \v NonLocalizedClassName\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:NonLocalizedClassName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.TagCenter.Descriptor.NonLocalizedClassName{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 154} of file {\b TagCenter.cs}.}\par
}
{\xe \v SuperClassID\:TagManager.TagCenter.Descriptor}
{\xe \v TagManager.TagCenter.Descriptor\:SuperClassID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override SClass_ID TagManager.TagCenter.Descriptor.SuperClassID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenter.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.EditableTextBlock Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interaction logic for EditableTextBlock.xaml. }}\par
Inheritance diagram for TagManager.EditableTextBlock:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_editable_text_block__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b oldText}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly DependencyProperty {\b TextProperty} = DependencyProperty.Register( "Text", typeof(string), typeof({\b EditableTextBlock}), new PropertyMetadata(""))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly DependencyProperty {\b IsEditableProperty} = DependencyProperty.Register( "IsEditable", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(true))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly DependencyProperty {\b IsInEditModeProperty} = DependencyProperty.Register( "IsInEditMode", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(false))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly DependencyProperty {\b TextFormatProperty} = DependencyProperty.Register( "TextFormat", typeof(string), typeof({\b EditableTextBlock}), new PropertyMetadata("\{0\}"))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly DependencyProperty {\b IsShortcutProperty} = DependencyProperty.Register("IsShortcut", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(false))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Text}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsEditable}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsInEditMode}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TextFormat}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FormattedText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsShortcut}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b NotifyTextEditionCompleted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interaction logic for EditableTextBlock.xaml. \par
}{
Definition at line {\b 21} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EditableTextBlock\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:EditableTextBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.EditableTextBlock.EditableTextBlock ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v IsEditableProperty\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsEditableProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly DependencyProperty TagManager.EditableTextBlock.IsEditableProperty = DependencyProperty.Register( "IsEditable", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(true)){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v IsInEditModeProperty\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsInEditModeProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly DependencyProperty TagManager.EditableTextBlock.IsInEditModeProperty = DependencyProperty.Register( "IsInEditMode", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(false)){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v IsShortcutProperty\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsShortcutProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly DependencyProperty TagManager.EditableTextBlock.IsShortcutProperty = DependencyProperty.Register("IsShortcut", typeof(bool), typeof({\b EditableTextBlock}), new PropertyMetadata(false)){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v oldText\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:oldText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.EditableTextBlock.oldText}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v TextFormatProperty\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:TextFormatProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly DependencyProperty TagManager.EditableTextBlock.TextFormatProperty = DependencyProperty.Register( "TextFormat", typeof(string), typeof({\b EditableTextBlock}), new PropertyMetadata("\{0\}")){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v TextProperty\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:TextProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly DependencyProperty TagManager.EditableTextBlock.TextProperty = DependencyProperty.Register( "Text", typeof(string), typeof({\b EditableTextBlock}), new PropertyMetadata("")){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v FormattedText\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:FormattedText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.EditableTextBlock.FormattedText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v IsEditable\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsEditable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.EditableTextBlock.IsEditable{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v IsInEditMode\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsInEditMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.EditableTextBlock.IsInEditMode{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v IsShortcut\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:IsShortcut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.EditableTextBlock.IsShortcut{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 90} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v Text\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:Text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.EditableTextBlock.Text{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\xe \v TextFormat\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:TextFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.EditableTextBlock.TextFormat{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v NotifyTextEditionCompleted\:TagManager.EditableTextBlock}
{\xe \v TagManager.EditableTextBlock\:NotifyTextEditionCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler TagManager.EditableTextBlock.NotifyTextEditionCompleted}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b EditableTextBlock.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/EditableTextBlock.xaml.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagPan.FastHost Class Reference\par \pard\plain 
{\tc\tcl2 \v TagPan.FastHost}
{\xe \v TagPan.FastHost}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
Inheritance diagram for TagPan.FastHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_pan_1_1_fast_host__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateAutoCompleteSource} (TagPanel _tagPan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LinkParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Dispose} (bool disposing)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
System.EventHandler {\b ForceRedraw}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b FastHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FastHost\:TagPan.FastHost}
{\xe \v TagPan.FastHost\:FastHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagPan.FastHost.FastHost ()}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b FastHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateAutoCompleteSource\:TagPan.FastHost}
{\xe \v TagPan.FastHost\:CreateAutoCompleteSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagPan.FastHost.CreateAutoCompleteSource (TagPanel  {\i _tagPan})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b FastHost.cs}.}\par
}
{\xe \v Dispose\:TagPan.FastHost}
{\xe \v TagPan.FastHost\:Dispose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagPan.FastHost.Dispose (bool  {\i disposing}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b FastHost.cs}.}\par
}
{\xe \v LinkParent\:TagPan.FastHost}
{\xe \v TagPan.FastHost\:LinkParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagPan.FastHost.LinkParent ()}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b FastHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ForceRedraw\:TagPan.FastHost}
{\xe \v TagPan.FastHost\:ForceRedraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
System.EventHandler TagPan.FastHost.ForceRedraw}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b FastHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/FastHost.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.FastTag Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
Inheritance diagram for TagManager.Actions.FastTag:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_fast_tag__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 49} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.FastTag.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.FastTag.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.FastTag.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.FastTag.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.FastTag}
{\xe \v TagManager.Actions.FastTag\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.FastTag.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.FastWPFTag Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.FastWPFTag}
{\xe \v TagManager.FastWPFTag}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
Inheritance diagram for TagManager.FastWPFTag:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_fast_w_p_f_tag__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateAutoCompleteSource} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Window {\b winParent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 18} of file {\b FastWPFTag.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FastWPFTag\:TagManager.FastWPFTag}
{\xe \v TagManager.FastWPFTag\:FastWPFTag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.FastWPFTag.FastWPFTag ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b FastWPFTag.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateAutoCompleteSource\:TagManager.FastWPFTag}
{\xe \v TagManager.FastWPFTag\:CreateAutoCompleteSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.FastWPFTag.CreateAutoCompleteSource ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b FastWPFTag.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v winParent\:TagManager.FastWPFTag}
{\xe \v TagManager.FastWPFTag\:winParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Window TagManager.FastWPFTag.winParent}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b FastWPFTag.xaml.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/FastWPFTag.xaml.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.IConsoleSelElement Interface Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.IConsoleSelElement}
{\xe \v TagManager.IConsoleSelElement}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Inheritance diagram for TagManager.IConsoleSelElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_tag_manager_1_1_i_console_sel_element__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

List< uint > {\b getCorrespondingSel} (){\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getCorrespondingStr} (){\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b IConsoleSelElement.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/IConsoleSelElement.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.ItemToContextMenuConverter Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.ItemToContextMenuConverter}
{\xe \v TagManager.ItemToContextMenuConverter}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
Inheritance diagram for TagManager.ItemToContextMenuConverter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_item_to_context_menu_converter__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Convert} (object value, Type targetType, object parameter, CultureInfo culture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b ConvertBack} (object value, Type targetType, object parameter, CultureInfo culture)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ContextMenu {\b StdContextMenu}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ContextMenu {\b RootContextMenu}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 14} of file {\b ItemToContextMenuConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Convert\:TagManager.ItemToContextMenuConverter}
{\xe \v TagManager.ItemToContextMenuConverter\:Convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object TagManager.ItemToContextMenuConverter.Convert (object  {\i value}, Type  {\i targetType}, object  {\i parameter}, CultureInfo  {\i culture})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b ItemToContextMenuConverter.cs}.}\par
}
{\xe \v ConvertBack\:TagManager.ItemToContextMenuConverter}
{\xe \v TagManager.ItemToContextMenuConverter\:ConvertBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object TagManager.ItemToContextMenuConverter.ConvertBack (object  {\i value}, Type  {\i targetType}, object  {\i parameter}, CultureInfo  {\i culture})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b ItemToContextMenuConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v RootContextMenu\:TagManager.ItemToContextMenuConverter}
{\xe \v TagManager.ItemToContextMenuConverter\:RootContextMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ContextMenu TagManager.ItemToContextMenuConverter.RootContextMenu{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b ItemToContextMenuConverter.cs}.}\par
}
{\xe \v StdContextMenu\:TagManager.ItemToContextMenuConverter}
{\xe \v TagManager.ItemToContextMenuConverter\:StdContextMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ContextMenu TagManager.ItemToContextMenuConverter.StdContextMenu{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b ItemToContextMenuConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ItemToContextMenuConverter.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.NodesToBoolConverter Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.NodesToBoolConverter}
{\xe \v TagManager.NodesToBoolConverter}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
Inheritance diagram for TagManager.NodesToBoolConverter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_nodes_to_bool_converter__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override object {\b ProvideValue} (IServiceProvider serviceProvider)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Convert} (object[] values, Type targetType, object parameter, CultureInfo culture)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object[] {\b ConvertBack} (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 14} of file {\b NodesToBoolConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Convert\:TagManager.NodesToBoolConverter}
{\xe \v TagManager.NodesToBoolConverter\:Convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object TagManager.NodesToBoolConverter.Convert (object[]  {\i values}, Type  {\i targetType}, object  {\i parameter}, CultureInfo  {\i culture})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b NodesToBoolConverter.cs}.}\par
}
{\xe \v ConvertBack\:TagManager.NodesToBoolConverter}
{\xe \v TagManager.NodesToBoolConverter\:ConvertBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object[] TagManager.NodesToBoolConverter.ConvertBack (object  {\i value}, Type[]  {\i targetTypes}, object  {\i parameter}, System::Globalization::CultureInfo  {\i culture})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b NodesToBoolConverter.cs}.}\par
}
{\xe \v ProvideValue\:TagManager.NodesToBoolConverter}
{\xe \v TagManager.NodesToBoolConverter\:ProvideValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override object TagManager.NodesToBoolConverter.ProvideValue (IServiceProvider  {\i serviceProvider})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b NodesToBoolConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/NodesToBoolConverter.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.ObjectDataChunk Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.ObjectDataChunk}
{\xe \v TagManager.ObjectDataChunk}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObjectDataChunk} (List< {\b TagNode} > _entities)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObjectDataChunk} (List< Guid > list)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b ObjectDataChunk} {\b ByteArrayToObjectDataChunk} (byte[] arrBytes)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b entitiesIDs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b ObjectDataChunk.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ObjectDataChunk\:TagManager.ObjectDataChunk}
{\xe \v TagManager.ObjectDataChunk\:ObjectDataChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ObjectDataChunk.ObjectDataChunk (List< {\b TagNode} >  {\i _entities})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b ObjectDataChunk.cs}.}\par
}
{\xe \v ObjectDataChunk\:TagManager.ObjectDataChunk}
{\xe \v TagManager.ObjectDataChunk\:ObjectDataChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.ObjectDataChunk.ObjectDataChunk (List< Guid >  {\i list})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b ObjectDataChunk.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ByteArrayToObjectDataChunk\:TagManager.ObjectDataChunk}
{\xe \v TagManager.ObjectDataChunk\:ByteArrayToObjectDataChunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b ObjectDataChunk} TagManager.ObjectDataChunk.ByteArrayToObjectDataChunk (byte[]  {\i arrBytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b ObjectDataChunk.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v entitiesIDs\:TagManager.ObjectDataChunk}
{\xe \v TagManager.ObjectDataChunk\:entitiesIDs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<string> TagManager.ObjectDataChunk.entitiesIDs}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b ObjectDataChunk.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ObjectDataChunk.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagPan.ObservableCollection< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. }}\par
Inheritance diagram for TagPan.ObservableCollection< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_pan_1_1_observable_collection__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddRange} (IEnumerable< T > collection)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the elements of the specified collection to the end of the ObservableCollection(Of T). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveRange} (IEnumerable< T > collection)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the first occurence of each item in the specified collection from ObservableCollection(Of T). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Replace} (T item)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the current collection and replaces it with the specified item. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReplaceRange} (IEnumerable< T > collection)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the current collection and replaces it with the specified collection. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RaiseCollectionChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObservableCollection} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObservableCollection} (IEnumerable< T > collection)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class that contains elements copied from the specified collection. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{\cell }
{\row }
}
\par
 \par
}{
Definition at line {\b 12} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ObservableCollection\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:ObservableCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagPan.ObservableCollection}< T >.{\b ObservableCollection} ()}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{
Definition at line {\b 58} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\xe \v ObservableCollection\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:ObservableCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagPan.ObservableCollection}< T >.{\b ObservableCollection} (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class that contains elements copied from the specified collection. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i collection} \cell }{collection: The collection from which the elements are copied.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i System.ArgumentNullException} \cell }{The collection parameter cannot be null.\cell }
{\row }
}
\par
 \par
}{
Definition at line {\b 66} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddRange\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:AddRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagPan.ObservableCollection}< T >.AddRange (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the elements of the specified collection to the end of the ObservableCollection(Of T). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{
Definition at line {\b 18} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\xe \v RaiseCollectionChanged\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:RaiseCollectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagPan.ObservableCollection}< T >.RaiseCollectionChanged ()}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\xe \v RemoveRange\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:RemoveRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagPan.ObservableCollection}< T >.RemoveRange (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes the first occurence of each item in the specified collection from ObservableCollection(Of T). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{
Definition at line {\b 27} of file {\b ExtensionObservableCollection.cs}.}\par
}
{\xe \v Replace\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:Replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagPan.ObservableCollection}< T >.Replace (T  {\i item})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the current collection and replaces it with the specified item. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{
Definition at line {\b 36} of file {\b ExtensionObservableCollection.cs}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_pan_1_1_observable_collection_af86654767806ccd0d9ad41bd37161a3e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReplaceRange\:TagPan.ObservableCollection< T >}
{\xe \v TagPan.ObservableCollection< T >\:ReplaceRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagPan.ObservableCollection}< T >.ReplaceRange (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the current collection and replaces it with the specified collection. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
 \par
}{
Definition at line {\b 43} of file {\b ExtensionObservableCollection.cs}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_pan_1_1_observable_collection_ab15a542fbf149efb02878568cd6b92e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/ExtensionObservableCollection.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.OpenClose Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
Inheritance diagram for TagManager.Actions.OpenClose:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_open_close__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.OpenClose.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.OpenClose.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.OpenClose.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.OpenClose.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.OpenClose}
{\xe \v TagManager.Actions.OpenClose\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.OpenClose.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.RemoveObjectsFromEntities Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
Inheritance diagram for TagManager.Actions.RemoveObjectsFromEntities:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_remove_objects_from_entities__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 217} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.RemoveObjectsFromEntities.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 247} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.RemoveObjectsFromEntities.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 219} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.RemoveObjectsFromEntities.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 226} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.RemoveObjectsFromEntities.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.RemoveObjectsFromEntities}
{\xe \v TagManager.Actions.RemoveObjectsFromEntities\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.RemoveObjectsFromEntities.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 240} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.SortableObservableCollection< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed and allows sorting. }}\par
Inheritance diagram for TagManager.SortableObservableCollection< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_sortable_observable_collection__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
new void {\b Add} (T _val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddRange} (IEnumerable< T > collection)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddRange} (IEnumerable< T > collection, bool _unique)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveRange} (IEnumerable< T > collection)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sort< TKey >} (Func< T, TKey > keySelector)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sorts the items of the collection in ascending order according to a key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sort< TKey >} (Func< T, TKey > keySelector, IComparer< TKey > comparer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sorts the items of the collection in ascending order according to a key. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed and allows sorting. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{The type of elements in the collection.\cell }
{\row }
}
}{
Definition at line {\b 15} of file {\b SortableObservableCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
new void {\b TagManager.SortableObservableCollection}< T >.Add (T  {\i _val})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b SortableObservableCollection.cs}.}\par
}
{\xe \v AddRange\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:AddRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.SortableObservableCollection}< T >.AddRange (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b SortableObservableCollection.cs}.}\par
}
{\xe \v AddRange\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:AddRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.SortableObservableCollection}< T >.AddRange (IEnumerable< T >  {\i collection}, bool  {\i _unique})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b SortableObservableCollection.cs}.}\par
}
{\xe \v RemoveRange\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:RemoveRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.SortableObservableCollection}< T >.RemoveRange (IEnumerable< T >  {\i collection})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b SortableObservableCollection.cs}.}\par
}
{\xe \v Sort< TKey >\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:Sort< TKey >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.SortableObservableCollection}< T >.Sort< TKey > (Func< T, TKey >  {\i keySelector})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sorts the items of the collection in ascending order according to a key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TKey} \cell }{The type of the key returned by {\i keySelector}  .\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keySelector} \cell }{A function to extract a key from an item.\cell }
{\row }
}
}{
Definition at line {\b 65} of file {\b SortableObservableCollection.cs}.}\par
}
{\xe \v Sort< TKey >\:TagManager.SortableObservableCollection< T >}
{\xe \v TagManager.SortableObservableCollection< T >\:Sort< TKey >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b TagManager.SortableObservableCollection}< T >.Sort< TKey > (Func< T, TKey >  {\i keySelector}, IComparer< TKey >  {\i comparer})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sorts the items of the collection in ascending order according to a key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TKey} \cell }{The type of the key returned by {\i keySelector}  .\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keySelector} \cell }{A function to extract a key from an item.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i comparer} \cell }{An IComparer<T> to compare keys.\cell }
{\row }
}
}{
Definition at line {\b 76} of file {\b SortableObservableCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/SortableObservableCollection.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.TagCenter Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.TagCenter}
{\xe \v TagManager.TagCenter}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
Inheritance diagram for TagManager.TagCenter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_tag_center__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Descriptor}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagCenter} ({\b Descriptor} descriptor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cleanup} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Initialize} (IGlobal global, System.ComponentModel.ISynchronizeInvoke sync)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitializeTree} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateTagManagerWin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateFastTagWin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override RefResult {\b NotifyRefChanged} (IInterval changeInt, IReferenceTarget hTarget, ref UIntPtr partID, RefMessage message, bool propagate)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Descriptor} {\b _descriptor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EntityPan {\b fastPan}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FastWPFTag} {\b fastTag}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
System.ComponentModel.ISynchronizeInvoke {\b Sync}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TagCenter} {\b Instance}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 35} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagCenter\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:TagCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagCenter.TagCenter ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b TagCenter.cs}.}\par
}
{\xe \v TagCenter\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:TagCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagCenter.TagCenter ({\b Descriptor}  {\i descriptor})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 200} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Cleanup\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:Cleanup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagCenter.Cleanup ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 237} of file {\b TagCenter.cs}.}\par
}
{\xe \v CreateFastTagWin\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:CreateFastTagWin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagCenter.CreateFastTagWin ()}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 497} of file {\b TagCenter.cs}.}\par
}
{\xe \v CreateTagManagerWin\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:CreateTagManagerWin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagCenter.CreateTagManagerWin ()}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 404} of file {\b TagCenter.cs}.}\par
}
{\xe \v Initialize\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagCenter.Initialize (IGlobal  {\i global}, System::ComponentModel::ISynchronizeInvoke  {\i sync})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 242} of file {\b TagCenter.cs}.}\par
}
{\xe \v InitializeTree\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:InitializeTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagCenter.InitializeTree ()}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 272} of file {\b TagCenter.cs}.}\par
}
{\xe \v NotifyRefChanged\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:NotifyRefChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override RefResult TagManager.TagCenter.NotifyRefChanged (IInterval  {\i changeInt}, IReferenceTarget  {\i hTarget}, ref UIntPtr  {\i partID}, RefMessage  {\i message}, bool  {\i propagate})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 539} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _descriptor\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:_descriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Descriptor} TagManager.TagCenter._descriptor}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v fastPan\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:fastPan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EntityPan TagManager.TagCenter.fastPan{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b TagCenter.cs}.}\par
}
{\xe \v fastTag\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:fastTag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FastWPFTag} TagManager.TagCenter.fastTag{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b TagCenter.cs}.}\par
}
{\xe \v Instance\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:Instance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagCenter} TagManager.TagCenter.Instance{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 209} of file {\b TagCenter.cs}.}\par
}
{\xe \v Sync\:TagManager.TagCenter}
{\xe \v TagManager.TagCenter\:Sync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
System.ComponentModel.ISynchronizeInvoke TagManager.TagCenter.Sync{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 204} of file {\b TagCenter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenter.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.TagNode Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.TagNode}
{\xe \v TagManager.TagNode}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TagNode is the container for entities it inehrites from DDNode. }}\par
Inheritance diagram for TagManager.TagNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_tag_node__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (string _label)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (string _label, bool _nameable)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (string _label, List< uint > _objects)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (string _label, {\b ConsoleContainerElement} _shortcut)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (Guid _ID, string _label, List< uint > _objects, bool _isShortcut, {\b ConsoleContainerElement} _shortcut)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (Guid _ID, string _label, List< uint > _objects, bool _isNameable, bool _isShortcut, {\b ConsoleContainerElement} _shortcut)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Nodes_CollectionChanged} (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b OnDrop} (object obj)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b TagManager.DDNode< TagNode >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DDNode_ChangedParent} (object sender, EventArgs e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Children_CollectionChanged} (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnInsert} (int index, object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanInsertFormat} (int index, string format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanInsert} (int index, object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDropFormat} (string arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDrop} (object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnDrop} (object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CanDrag} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b OnDrag} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NotifyPropertyChanged} ([CallerMemberName] String propertyName="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< T > {\b GetNodeBranch} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< T > {\b GetNodeBranch} (bool _rootIncluded)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b GetNodeBranchElementsNames} (bool _toRemove)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b BranchName} (List< T > _entities, string _delimiter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetNodeBranchName} (string _delimiter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetNodeBranchName} (string _delimiter, List< string > _toRemove)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
System.Drawing.Color {\b wireColor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagNode} (SerializationInfo info, StreamingContext context)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Guid {\b ID}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsInEditMode}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SortableObservableCollection}< uint > {\b Nodes}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EntityVisibility {\b Visible}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsNameable}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsShortcut}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleContainerElement} {\b Shortcut}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b TagManager.DDNode< TagNode >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SortableObservableCollection}< T > {\b Children}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b LongName}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b Parent}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowDrop}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowDrag}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AllowInsert}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b TagManager.DDNode< TagNode >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedParent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler {\b ChangedLongName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PropertyChangedEventHandler {\b PropertyChanged}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TagNode is the container for entities it inehrites from DDNode. \par
}{
Definition at line {\b 18} of file {\b TagNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode ()}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (string  {\i _label})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (string  {\i _label}, bool  {\i _nameable})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (string  {\i _label}, List< uint >  {\i _objects})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (string  {\i _label}, {\b ConsoleContainerElement}  {\i _shortcut})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (Guid  {\i _ID}, string  {\i _label}, List< uint >  {\i _objects}, bool  {\i _isShortcut}, {\b ConsoleContainerElement}  {\i _shortcut})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (Guid  {\i _ID}, string  {\i _label}, List< uint >  {\i _objects}, bool  {\i _isNameable}, bool  {\i _isShortcut}, {\b ConsoleContainerElement}  {\i _shortcut})}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b TagNode.cs}.}\par
}
{\xe \v TagNode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:TagNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagNode.TagNode (SerializationInfo  {\i info}, StreamingContext  {\i context}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b TagNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Nodes_CollectionChanged\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:Nodes_CollectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TagManager.TagNode.Nodes_CollectionChanged (object  {\i sender}, System::Collections::Specialized::NotifyCollectionChangedEventArgs  {\i e})}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b TagNode.cs}.}\par
}
{\xe \v OnDrop\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:OnDrop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.TagNode.OnDrop (object  {\i obj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b TagManager.DDNode< TagNode >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 132} of file {\b TagNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v wireColor\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:wireColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
System.Drawing.Color TagManager.TagNode.wireColor}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b TagNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ID\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Guid TagManager.TagNode.ID{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b TagNode.cs}.}\par
}
{\xe \v IsInEditMode\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:IsInEditMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.TagNode.IsInEditMode{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b TagNode.cs}.}\par
}
{\xe \v IsNameable\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:IsNameable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.TagNode.IsNameable{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b TagNode.cs}.}\par
}
{\xe \v IsShortcut\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:IsShortcut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TagManager.TagNode.IsShortcut{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b TagNode.cs}.}\par
}
{\xe \v Nodes\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:Nodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SortableObservableCollection}<uint> TagManager.TagNode.Nodes{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b TagNode.cs}.}\par
}
{\xe \v Shortcut\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:Shortcut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ConsoleContainerElement} TagManager.TagNode.Shortcut{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b TagNode.cs}.}\par
}
{\xe \v Visible\:TagManager.TagNode}
{\xe \v TagManager.TagNode\:Visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EntityVisibility TagManager.TagNode.Visible{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b TagNode.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagNode.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.TagReferenceMaker Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
Inheritance diagram for TagManager.TagReferenceMaker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_tag_reference_maker__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReferenceMaker} ({\b TagCenter} _parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override RefResult {\b NotifyRefChanged} (IInterval changeInt, IReferenceTarget hTarget, ref UIntPtr partID, RefMessage message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IOResult {\b Save} (IISave isave)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IOResult {\b Load} (IILoad iload)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b remember} = ""\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b TagReferenceMaker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReferenceMaker\:TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker\:TagReferenceMaker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TagManager.TagReferenceMaker.TagReferenceMaker ({\b TagCenter}  {\i _parent})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b TagReferenceMaker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Load\:TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IOResult TagManager.TagReferenceMaker.Load (IILoad  {\i iload})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b TagReferenceMaker.cs}.}\par
}
{\xe \v NotifyRefChanged\:TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker\:NotifyRefChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override RefResult TagManager.TagReferenceMaker.NotifyRefChanged (IInterval  {\i changeInt}, IReferenceTarget  {\i hTarget}, ref UIntPtr  {\i partID}, RefMessage  {\i message})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b TagReferenceMaker.cs}.}\par
}
{\xe \v Save\:TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IOResult TagManager.TagReferenceMaker.Save (IISave  {\i isave})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b TagReferenceMaker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v remember\:TagManager.TagReferenceMaker}
{\xe \v TagManager.TagReferenceMaker\:remember}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string TagManager.TagReferenceMaker.remember = ""}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b TagReferenceMaker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagReferenceMaker.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ToggleAutoCloneTag Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
Inheritance diagram for TagManager.Actions.ToggleAutoCloneTag:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_toggle_auto_clone_tag__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 259} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ToggleAutoCloneTag.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 289} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoCloneTag.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 261} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoCloneTag.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 268} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoCloneTag.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 275} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ToggleAutoCloneTag}
{\xe \v TagManager.Actions.ToggleAutoCloneTag\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoCloneTag.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 282} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TagManager.Actions.ToggleAutoRename Class Reference\par \pard\plain 
{\tc\tcl2 \v TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
Inheritance diagram for TagManager.Actions.ToggleAutoRename:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tag_manager_1_1_actions_1_1_toggle_auto_rename__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Execute} (object parameter)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Category}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalActionText}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InternalCategory}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 471} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void TagManager.Actions.ToggleAutoRename.Execute (object  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 501} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ActionText\:TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename\:ActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoRename.ActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 473} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v Category\:TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename\:Category}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoRename.Category{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 480} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalActionText\:TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename\:InternalActionText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoRename.InternalActionText{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 487} of file {\b TagCenterAction.cs}.}\par
}
{\xe \v InternalCategory\:TagManager.Actions.ToggleAutoRename}
{\xe \v TagManager.Actions.ToggleAutoRename\:InternalCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string TagManager.Actions.ToggleAutoRename.InternalCategory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 494} of file {\b TagCenterAction.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleContainerElement.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Runtime.Serialization;\par
00006 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00007 {\cf17 using }System.IO;\par
00008 \par
00009 {\cf17 namespace }TagManager\par
00010 \{\par
00011     [Serializable]\par
00012     {\cf17 public} {\cf17 class }ConsoleContainerElement :ConsoleElement, ISerializable\par
00013     \{\par
00014         {\cf20 // only used during the creation of the container in FastWPFTag}\par
00015         {\cf17 public} ConsoleContainerElement parent;\par
00016         {\cf17 public} List<ConsoleElement> content = {\cf17 new} List<ConsoleElement>();\par
00017         {\cf17 public} List<concat> ops = {\cf17 new} List<concat>();\par
00018         {\cf17 public} {\cf18 bool} open = {\cf17 true};\par
00019 \par
00020         {\cf17 public} ConsoleContainerElement()\par
00021         \{\par
00022         \}\par
00023         {\cf17 public} ConsoleContainerElement(ConsoleContainerElement _parent)\par
00024         \{\par
00025             parent = _parent;\par
00026         \}\par
00027 \par
00028         {\cf17 public} {\cf17 override} List<uint> getCorrespondingSel()\par
00029         \{\par
00030             List<uint> result = {\cf17 new} List<uint>();\par
00031             {\cf19 try}\par
00032             \{\par
00033                 \par
00034                 {\cf20 // treat intersections first}\par
00035                 {\cf19 while} (ops.Contains(concat.intersection) && (ops.Contains(concat.addition) || ops.Contains(concat.substraction) || ops.Contains(concat.except)))\par
00036                 \{\par
00037                     {\cf18 int} _index = ops.FindIndex(y => y == concat.intersection);\par
00038                     ConsoleElement c1 = content[_index];\par
00039                     ConsoleElement c2 = content[_index + 1];\par
00040                     ConsoleContainerElement _brackElem = {\cf17 new} ConsoleContainerElement({\cf17 this});\par
00041                     _brackElem.content.Add(c1);\par
00042                     _brackElem.content.Add(c2);\par
00043                     _brackElem.ops.Add(ops[_index]);\par
00044                     content.Remove(c1);\par
00045                     content.Remove(c2);\par
00046                     ops.RemoveAt(_index);\par
00047                     content.Insert(_index, _brackElem);\par
00048                 \}\par
00049                 Queue<ConsoleElement> queuedContent = {\cf17 new} Queue<ConsoleElement>(content);\par
00050                 Queue<concat> queuedOps = {\cf17 new} Queue<concat>(ops);\par
00051                 result = queuedContent.Dequeue().getCorrespondingSel();\par
00052                 {\cf19 while} (queuedOps.Count > 0)\par
00053                 \{\par
00054                     result = Eval(result, queuedContent.Dequeue(), queuedOps.Dequeue());\par
00055                 \}\par
00056             \}\par
00057             {\cf19 catch}\par
00058             \{\par
00059             \}\par
00060             {\cf19 return} result;\par
00061         \}\par
00062 \par
00063         {\cf17 public} {\cf17 override} {\cf18 string} getCorrespondingStr()\par
00064         \{\par
00065             {\cf18 string} result = {\cf22 ""};\par
00066             {\cf19 try}\par
00067             \{\par
00068                 Queue<ConsoleElement> queuedContent = {\cf17 new} Queue<ConsoleElement>(content);\par
00069                 Queue<concat> queuedOps = {\cf17 new} Queue<concat>(ops);\par
00070                 result += {\cf22 "["};\par
00071                 result += queuedContent.Dequeue().getCorrespondingStr();\par
00072                 {\cf19 while} (queuedContent.Count > 0)\par
00073                 \{\par
00074                     result += queuedOps.Dequeue().GetEnumDescription();\par
00075                     result += queuedContent.Dequeue().getCorrespondingStr();\par
00076                 \}\par
00077                 {\cf19 while} (queuedOps.Count > 0)\par
00078                 \{\par
00079                     result += queuedOps.Dequeue().GetEnumDescription();\par
00080                 \}\par
00081                 result += {\cf22 "]"};\par
00082             \}\par
00083             {\cf19 catch}\par
00084             \{\par
00085             \}\par
00086             {\cf19 return} result;\par
00087         \}\par
00088 \par
00089         {\cf17 private} List<uint> Eval(List<uint> c1, ConsoleElement c2, concat _ops)\par
00090         \{\par
00091             List<uint> result = {\cf17 new} List<uint>();\par
00092             {\cf19 if} (_ops == concat.addition)\par
00093             \{\par
00094                 result = c1 + c2;\par
00095                 {\cf19 return} result;\par
00096             \}\par
00097             {\cf19 if} (_ops == concat.substraction)\par
00098             \{\par
00099                 result = c1 - c2;\par
00100                 {\cf19 return} result;\par
00101             \}\par
00102             {\cf19 if} (_ops == concat.intersection)\par
00103             \{\par
00104                 result = c1 * c2;\par
00105                 {\cf19 return} result;\par
00106             \}\par
00107             {\cf19 return} result;\par
00108         \}\par
00109 \par
00110         {\cf17 protected} ConsoleContainerElement(SerializationInfo info, StreamingContext context)\par
00111         \{\par
00112             content = (List<ConsoleElement>)info.GetValue({\cf22 "content"}, typeof(List<ConsoleElement>));\par
00113             ops = (List<concat>)info.GetValue({\cf22 "ops"}, typeof(List<concat>));\par
00114         \}\par
00115         {\cf18 void} ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)\par
00116         \{\par
00117             info.AddValue({\cf22 "content"}, content, typeof(List<ConsoleElement>));\par
00118             info.AddValue({\cf22 "ops"}, ops, typeof(List<concat>));\par
00119         \}\par
00120     \}\par
00121 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleElement.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.ComponentModel;\par
00006 {\cf17 using }System.Reflection;\par
00007 {\cf17 using }System.Runtime.Serialization;\par
00008 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00009 {\cf17 using }System.IO;\par
00010 \par
00011 {\cf17 namespace }TagManager\par
00012 \{\par
00013     {\cf17 public} {\cf17 enum} concat\par
00014     \{\par
00015         [Description({\cf22 "+"})]\par
00016         addition,\par
00017         [Description({\cf22 "-"})]\par
00018         substraction,\par
00019         [Description({\cf22 "*"})]\par
00020         intersection,\par
00021         [Description({\cf22 "/"})]\par
00022         except\par
00023     \}\par
00024 \par
00025     [Serializable]\par
00026     {\cf17 public} {\cf17 abstract} {\cf17 class }ConsoleElement : IConsoleSelElement, ISerializable\par
00027     \{\par
00028 \par
00029         {\cf17 public} ConsoleElement()\par
00030         \{\par
00031         \}\par
00032 \par
00033 \par
00034 \par
00035         {\cf17 public} {\cf17 abstract} List<uint> getCorrespondingSel();\par
00036         {\cf17 public} {\cf17 abstract} {\cf18 string} getCorrespondingStr();\par
00037 \par
00038         {\cf17 public} {\cf17 static} List<uint> operator +(ConsoleElement c1, ConsoleElement c2)\par
00039         \{\par
00040             List<uint> result = {\cf17 new} List<uint>();\par
00041             result.AddRange(c1.getCorrespondingSel());\par
00042             result.AddRange(c2.getCorrespondingSel());\par
00043             result=result.Distinct().ToList();\par
00044             {\cf19 return} result;\par
00045         \}\par
00046         {\cf17 public} {\cf17 static} List<uint> operator +(List<uint> c1, ConsoleElement c2)\par
00047         \{\par
00048             List<uint> result = {\cf17 new} List<uint>();\par
00049             result.AddRange(c1);\par
00050             result.AddRange(c2.getCorrespondingSel());\par
00051             result = result.Distinct().ToList();\par
00052             {\cf19 return} result;\par
00053         \}\par
00054         {\cf17 public} {\cf17 static} List<uint> operator -(ConsoleElement c1, ConsoleElement c2)\par
00055         \{\par
00056             List<uint> result = {\cf17 new} List<uint>();\par
00057             result.AddRange(c1.getCorrespondingSel().Where(x=> !c2.getCorrespondingSel().Any(y=> x==y)) );\par
00058             result = result.Distinct().ToList();\par
00059             {\cf19 return} result;\par
00060         \}\par
00061         {\cf17 public} {\cf17 static} List<uint> operator -(List<uint> c1, ConsoleElement c2)\par
00062         \{\par
00063             List<uint> result = {\cf17 new} List<uint>();\par
00064             result.AddRange(c1.Where(x => !c2.getCorrespondingSel().Any(y => x == y)));\par
00065             result = result.Distinct().ToList();\par
00066             {\cf19 return} result;\par
00067         \}\par
00068         {\cf17 public} {\cf17 static} List<uint> operator *(ConsoleElement c1, ConsoleElement c2)\par
00069         \{\par
00070             List<uint> result = {\cf17 new} List<uint>();\par
00071             result.AddRange(c1.getCorrespondingSel().Intersect(c2.getCorrespondingSel()));\par
00072             {\cf19 return} result;\par
00073         \}\par
00074         {\cf17 public} {\cf17 static} List<uint> operator *(List<uint> c1, ConsoleElement c2)\par
00075         \{\par
00076             List<uint> result = {\cf17 new} List<uint>();\par
00077             result.AddRange(c1.Intersect(c2.getCorrespondingSel()));\par
00078             {\cf19 return} result;\par
00079         \}\par
00080         {\cf17 public} {\cf17 static} List<uint> operator /(ConsoleElement c1, ConsoleElement c2)\par
00081         \{\par
00082             List<uint> result = {\cf17 new} List<uint>();\par
00083             result.AddRange(c1.getCorrespondingSel().Except(c2.getCorrespondingSel()));\par
00084             {\cf19 return} result;\par
00085         \}\par
00086         {\cf17 public} {\cf17 static} List<uint> operator /(List<uint> c1, ConsoleElement c2)\par
00087         \{\par
00088             List<uint> result = {\cf17 new} List<uint>();\par
00089             result.AddRange(c1.Except(c2.getCorrespondingSel()));\par
00090             {\cf19 return} result;\par
00091         \}\par
00092 \par
00093         {\cf17 public} {\cf18 void} GetObjectData(SerializationInfo info, StreamingContext context)\par
00094         \{\par
00095         \}\par
00096     \}\par
00097 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ConsoleStringSelElement.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Runtime.Serialization;\par
00006 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00007 {\cf17 using }System.IO;\par
00008 \par
00009 \par
00010 {\cf17 namespace }TagManager\par
00011 \{\par
00012     {\cf17 public} {\cf17 enum} ConsoleElementModifier\par
00013     \{\par
00014         None,\par
00015         Selection,\par
00016         Containing,\par
00017         Children,\par
00018         Not,\par
00019         Visible\par
00020     \}\par
00021 \par
00022     [Serializable]\par
00023     {\cf17 public} {\cf17 class }ConsoleStringSelElement : ConsoleElement, ISerializable\par
00024     \{\par
00025         {\cf17 public} {\cf18 string} name;\par
00026         {\cf17 public} ConsoleElementModifier modifier;\par
00027 \par
00028         {\cf17 public} ConsoleStringSelElement({\cf18 string} _name, ConsoleElementModifier _modifier)\par
00029         \{\par
00030             name = _name;\par
00031             modifier = _modifier;\par
00032         \}\par
00033 \par
00034         {\cf17 public} {\cf17 override} List<uint> getCorrespondingSel()\par
00035         \{\par
00036             List<uint> sel = {\cf17 new} List<uint>();\par
00037             {\cf19 if}(modifier == ConsoleElementModifier.None)\par
00038             \{\par
00039                 TagNode _entity = TagHelperMethods.RetrieveEntityFromTag(name);\par
00040                 {\cf19 if} (!_entity.IsShortcut)\par
00041                 \{\par
00042                     sel = _entity.Nodes.ToList();\par
00043                 \}\par
00044                 {\cf19 else}\par
00045                 \{\par
00046                     sel = _entity.Shortcut.getCorrespondingSel();\par
00047                 \}\par
00048             \}\par
00049             {\cf19 if}(modifier == ConsoleElementModifier.Selection)\par
00050             \{\par
00051                 sel = MaxPluginUtilities.Selection.ToListHandles();\par
00052             \}\par
00053             {\cf19 if} (modifier == ConsoleElementModifier.Containing)\par
00054             \{\par
00055                 List<uint> children = {\cf17 new} List<uint>();\par
00056                 List<TagNode> _entities = TagHelperMethods.RetrieveEntitiesContainsTag(name);\par
00057                 {\cf19 foreach}(TagNode tagNode {\cf19 in} _entities)\par
00058                 \{\par
00059                     sel.AddRange(TagHelperMethods.GetBranchObjects(tagNode));\par
00060                 \}\par
00061             \}\par
00062             {\cf19 if} (modifier == ConsoleElementModifier.Children)\par
00063             \{\par
00064                 TagNode _entity = TagHelperMethods.RetrieveEntityFromTag(name);\par
00065                 sel = TagHelperMethods.GetBranchObjects(_entity);\par
00066             \}\par
00067             {\cf19 if} (modifier == ConsoleElementModifier.Not)\par
00068             \{\par
00069 \par
00070                 sel = (TagHelperMethods.GetBranchObjects(TagGlobals.root).Except(TagHelperMethods.RetrieveEntityFromTag(name).Nodes.ToList())).ToList();\par
00071             \}\par
00072             {\cf19 if} (modifier == ConsoleElementModifier.Visible)\par
00073             \{\par
00074                 TagNode _entity = TagHelperMethods.RetrieveEntityFromTag(name);\par
00075                 List<uint> _objects = _entity.Nodes.ToList();\par
00076                 sel = MaxPluginUtilities.GetVisibleNodes(_objects);\par
00077             \}\par
00078             {\cf19 return} sel;\par
00079         \}\par
00080         {\cf17 public} {\cf17 override} {\cf18 string} getCorrespondingStr()\par
00081         \{\par
00082             {\cf19 return} name;\par
00083         \}\par
00084         {\cf17 protected} ConsoleStringSelElement(SerializationInfo info, StreamingContext context)\par
00085         \{\par
00086             name = (string)info.GetValue({\cf22 "name"}, typeof({\cf18 string}));\par
00087             modifier = (ConsoleElementModifier)info.GetValue({\cf22 "modifier"}, typeof(ConsoleElementModifier));\par
00088         \}\par
00089         {\cf18 void} ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)\par
00090         \{\par
00091             info.AddValue({\cf22 "name"}, name, typeof({\cf18 string}));\par
00092             info.AddValue({\cf22 "modifier"}, modifier, typeof(ConsoleElementModifier));\par
00093         \}\par
00094 \par
00095     \}\par
00096 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/CustomExtension.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Collections.ObjectModel;\par
00004 {\cf17 using }System.Linq;\par
00005 {\cf17 using }System.Text;\par
00006 {\cf17 using }System.Windows.Forms;\par
00007 \par
00008 {\cf17 namespace }TagManager\par
00009 \{\par
00010     {\cf17 public} {\cf17 static} {\cf17 class }CustomExtension\par
00011     \{\par
00012         {\cf17 public} {\cf17 static} List<TagNode> GetNodeList({\cf17 this} TagNode dnod)\par
00013         \{\par
00014             var ret = {\cf17 new} List<TagNode>();\par
00015             ret.Add(dnod);\par
00016             ret.AddRange(dnod.Children.ToList().GetNodeList());\par
00017             {\cf19 return} ret;\par
00018         \}\par
00019         {\cf17 public} {\cf17 static} List<TagNode> GetNodeList({\cf17 this} List<TagNode> dnodColl)\par
00020         \{\par
00021             var ret = {\cf17 new} List<TagNode>();\par
00022             {\cf19 foreach} (TagNode _dnode {\cf19 in} dnodColl)\par
00023             \{\par
00024                 ret.Add(_dnode);\par
00025                 ret.AddRange(_dnode.Children.ToList().GetNodeList());\par
00026             \}\par
00027             {\cf19 return} ret;\par
00028         \}\par
00029         {\cf17 public} {\cf17 static} IEnumerable<T> IntersectNonEmpty<T>({\cf17 this} IEnumerable<IEnumerable<T>> lists)\par
00030         \{\par
00031             var nonEmptyLists = lists.Where(l => l.Any());\par
00032             {\cf19 return} nonEmptyLists.Aggregate((l1, l2) => l1.Intersect(l2));\par
00033         \}\par
00034         {\cf17 public} {\cf17 static} Dictionary<TKey, List<TValue>> ToDictionary<TKey, TValue>({\cf17 this} IEnumerable<IGrouping<TKey, TValue>> groupings)\par
00035         \{\par
00036             {\cf19 return} groupings.ToDictionary(group => group.Key, group => group.ToList());\par
00037         \}\par
00038         \par
00039     \}\par
00040 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/DDNode.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.ObjectModel;\par
00003 {\cf17 using }System.Collections.Generic;\par
00004 {\cf17 using }System.Windows.Controls;\par
00005 {\cf17 using }System.Windows.Input;\par
00006 {\cf17 using }System.Windows.Controls.DragNDrop;\par
00007 {\cf17 using }System.Linq;\par
00008 {\cf17 using }System.ComponentModel;\par
00009 {\cf17 using }System.Runtime.CompilerServices;\par
00010 \par
00011 {\cf17 namespace }TagManager\par
00012 \{\par
00017 \par
00018     [Serializable]\par
00019     {\cf17 public} {\cf17 abstract} {\cf17 class }DDNode<T> where T : DDNode<T>, INotifyPropertyChanged\par
00020     \{\par
00021         {\cf17 public} {\cf17 event} EventHandler ChangedParent;\par
00022         {\cf17 public} {\cf17 event} EventHandler ChangedName;\par
00023         {\cf17 public} {\cf17 event} EventHandler ChangedLongName;\par
00024 {\cf21         #region Public Properties}\par
00025 \par
00026 \par
00027         {\cf17 public} SortableObservableCollection<T> Children\par
00028         \{\par
00029             {\cf17 get};\par
00030             {\cf17 set};\par
00031         \}\par
00032 \par
00033         {\cf17 private} {\cf18 string} name;\par
00034         {\cf17 public} {\cf18 string} Name\par
00035         \{\par
00036             {\cf17 get} \{ {\cf19 return} name; \}\par
00037             {\cf17 set} \par
00038             \{\par
00039                 name = value;\par
00040                 {\cf19 if} (ChangedName != {\cf17 null})\par
00041                 \{\par
00042                     ChangedName({\cf17 this}, {\cf17 null});\par
00043                 \}\par
00044             \}\par
00045         \}\par
00046         {\cf17 private} {\cf18 string} longName;\par
00047         {\cf17 public} {\cf18 string} LongName\par
00048         \{\par
00049             {\cf17 get} \{ {\cf19 return} longName; \}\par
00050             {\cf17 set} \par
00051             \{ \par
00052                 longName = value;\par
00053                 {\cf19 if} (ChangedLongName != {\cf17 null})\par
00054                 \{\par
00055                     ChangedLongName({\cf17 this}, {\cf17 null});\par
00056                 \}\par
00057             \}\par
00058         \}\par
00059 \par
00060         {\cf17 private} T parent;\par
00061         {\cf17 public} T Parent\par
00062         \{\par
00063             {\cf17 get} \{ {\cf19 return} parent; \}\par
00064             {\cf17 set} \par
00065             \{ \par
00066                 parent = value;\par
00067                 ChangedParent({\cf17 this}, {\cf17 null});\par
00068             \}\par
00069         \}\par
00070         \par
00071 {\cf21         #endregion}\par
00072 \par
00073 {\cf21         #region Public Methods}\par
00074 \par
00075 {\cf21         #region Constructors and Destructors}\par
00076 \par
00077         {\cf17 public} DDNode()\par
00078         \{\par
00079             Children = {\cf17 new} SortableObservableCollection<T>();\par
00080             \par
00081             Children.CollectionChanged += Children_CollectionChanged;\par
00082             \par
00083             ChangedParent += DDNode_ChangedParent;\par
00084             ChangedName += DDNode_ChangedName;\par
00085             \par
00086         \}\par
00087 \par
00088         {\cf18 void} DDNode_ChangedName({\cf18 object} sender, EventArgs e)\par
00089         \{\par
00090             LongName = TagHelperMethods.ConcateneNameFromElements(GetNodeBranchElementsNames({\cf17 true}));\par
00091         \}\par
00092 \par
00093         \par
00094 \par
00095         {\cf17 public} {\cf18 void} DDNode_ChangedParent({\cf18 object} sender, EventArgs e)\par
00096         \{\par
00097             LongName = TagHelperMethods.ConcateneNameFromElements(GetNodeBranchElementsNames({\cf17 true}));\par
00098             {\cf19 foreach} (DDNode<T> _child {\cf19 in} Children)\par
00099             \{\par
00100                 _child.ChangedParent.Invoke({\cf17 this}, {\cf17 null});\par
00101             \}\par
00102         \}\par
00103 \par
00104         {\cf17 public} {\cf18 void} Children_CollectionChanged({\cf18 object} sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)\par
00105         \{\par
00106             {\cf19 if} (e.Action == System.Collections.Specialized.NotifyCollectionChangedAction.Add)\par
00107             \{\par
00108                 {\cf19 foreach} (T _node {\cf19 in} e.NewItems)\par
00109                 \{\par
00110                     _node.Parent = (T){\cf17 this};\par
00111                 \}\par
00112             \}\par
00113             NotifyPropertyChanged({\cf22 "Children"});\par
00114         \}\par
00115         \par
00116 \par
00117         {\cf17 public} {\cf18 void} OnInsert({\cf18 int} index, {\cf18 object} obj)\par
00118         \{\par
00119             DragContent content = obj as DragContent;\par
00120             {\cf19 if} (content != {\cf17 null})\par
00121             \{\par
00122                 {\cf19 foreach} (var item {\cf19 in} content.Items.Reverse())\par
00123                 \{\par
00124                     T oldNode = (T)item;\par
00125                     {\cf19 if} (oldNode != {\cf17 this})\par
00126                     \{\par
00127                         oldNode.Parent.Children.Remove(oldNode);\par
00128                         Children.Insert(index, oldNode);\par
00129                     \}\par
00130                 \}\par
00131             \}\par
00132         \}\par
00133 \par
00134         {\cf17 public} {\cf18 bool} CanInsertFormat({\cf18 int} index, {\cf18 string} format)\par
00135         \{\par
00136             {\cf19 return} {\cf17 true};\par
00137         \}\par
00138 \par
00139         {\cf17 public} {\cf18 bool} CanInsert({\cf18 int} index, {\cf18 object} obj)\par
00140         \{\par
00141             {\cf19 return} AllowInsert;\par
00142         \}\par
00143 \par
00144         {\cf17 public} {\cf18 bool} CanDropFormat({\cf18 string} arg)\par
00145         \{\par
00146             {\cf19 return} {\cf17 true};\par
00147         \}\par
00148 \par
00149         {\cf17 public} {\cf18 bool} AllowDrop \{ {\cf17 get}; {\cf17 set}; \}\par
00150 \par
00151         {\cf17 public} {\cf18 bool} AllowDrag \{ {\cf17 get}; {\cf17 set}; \}\par
00152 \par
00153         {\cf17 public} {\cf18 bool} AllowInsert \{ {\cf17 get}; {\cf17 set}; \}\par
00154 \par
00155         {\cf17 public} {\cf18 bool} CanDrop({\cf18 object} obj)\par
00156         \{\par
00157             {\cf19 return} AllowDrop;\par
00158         \}\par
00159         {\cf20 // overidden by tagNode}\par
00160         {\cf17 public} {\cf17 virtual} {\cf18 void} OnDrop({\cf18 object} obj)\par
00161         \{\par
00162 \par
00163         \}\par
00164 \par
00165         {\cf17 public} {\cf18 bool} CanDrag()\par
00166         \{\par
00167             {\cf19 return} AllowDrag;\par
00168         \}\par
00169 \par
00170         {\cf17 public} {\cf18 object} OnDrag()\par
00171         \{\par
00172             {\cf19 return} {\cf17 this};\par
00173         \}\par
00174         {\cf17 public} {\cf17 event} PropertyChangedEventHandler PropertyChanged;\par
00175 \par
00176         {\cf20 // This method is called by the Set accessor of each property. }\par
00177         {\cf20 // The CallerMemberName attribute that is applied to the optional propertyName }\par
00178         {\cf20 // parameter causes the property name of the caller to be substituted as an argument. }\par
00179         {\cf17 public} {\cf18 void} NotifyPropertyChanged([CallerMemberName] String propertyName = {\cf22 ""})\par
00180         \{\par
00181             {\cf19 if} (PropertyChanged != {\cf17 null})\par
00182             \{\par
00183                 PropertyChanged({\cf17 this}, {\cf17 new} PropertyChangedEventArgs(propertyName));\par
00184             \}\par
00185         \}\par
00186 \par
00187 {\cf21         #endregion}\par
00188 \par
00189         {\cf17 public} {\cf17 override} {\cf18 string} ToString()\par
00190         \{\par
00191             {\cf19 return} Name;\par
00192         \}\par
00193         {\cf17 public} List<T> GetNodeBranch()\par
00194         \{\par
00195             {\cf19 return} GetNodeBranch({\cf17 true});\par
00196         \}\par
00197         {\cf17 public} List<T> GetNodeBranch({\cf18 bool} _rootIncluded)\par
00198         \{\par
00199             T _entity = (T){\cf17 this};\par
00200             List<T> _hierarchy = {\cf17 new} List<T>();\par
00201             _hierarchy.Add((T){\cf17 this});\par
00202             {\cf19 while} (_entity.Parent != {\cf17 null})\par
00203             \{\par
00204                 T _parentJoint = _entity.Parent;\par
00205                 _hierarchy.Add(_parentJoint);\par
00206                 _entity = _entity.Parent;\par
00207             \}\par
00208             {\cf19 if} (!_rootIncluded)\par
00209             \{\par
00210                 _hierarchy = _hierarchy.Where(x => x.LongName != {\cf22 ""}).ToList();\par
00211             \}\par
00212             _hierarchy.Reverse();\par
00213             {\cf19 return} _hierarchy;\par
00214         \}\par
00215         {\cf17 public} List<string> GetNodeBranchElementsNames({\cf18 bool} _toRemove)\par
00216         \{\par
00217             T _entity = (T){\cf17 this};\par
00218             List<string> _names = {\cf17 new} List<string>();\par
00219             _names.Add(this.Name);\par
00220             {\cf19 while} (_entity.Parent != {\cf17 null})\par
00221             \{\par
00222                 T _parentJoint = _entity.Parent;\par
00223                 _names.Add(_parentJoint.Name);\par
00224                 _entity = _entity.Parent;\par
00225             \}\par
00226             {\cf19 if} (_toRemove)\par
00227             \{\par
00228                 _names.RemoveAll(x => TagGlobals.baseNames.Contains(x));\par
00229             \}\par
00230             _names.Reverse();\par
00231             {\cf19 return} _names;\par
00232         \}\par
00233         {\cf17 public} {\cf18 string} BranchName(List<T> _entities, {\cf18 string} _delimiter)\par
00234         \{\par
00235             {\cf18 string} result = {\cf22 ""};\par
00236             {\cf19 foreach} (T _entity {\cf19 in} _entities)\par
00237             \{\par
00238                 {\cf19 if} (result != {\cf22 ""})\par
00239                 \{\par
00240                     result += _delimiter;\par
00241                 \}\par
00242                 result += _entity;\par
00243             \}\par
00244             {\cf19 return} result;\par
00245         \}\par
00246         {\cf17 public} {\cf18 string} GetNodeBranchName({\cf18 string} _delimiter)\par
00247         \{\par
00248             List<T> _entities = GetNodeBranch();\par
00249             {\cf19 return} BranchName(_entities, _delimiter);\par
00250         \}\par
00251         {\cf17 public} {\cf18 string} GetNodeBranchName({\cf18 string} _delimiter, List<string> _toRemove)\par
00252         \{\par
00253             List<T> _entities = GetNodeBranch();\par
00254             _entities.RemoveAll(x => _toRemove.Contains(x.Name));\par
00255             {\cf19 return} BranchName(_entities, _delimiter);\par
00256         \}\par
00257 \par
00258 {\cf21         #endregion}\par
00259     \}\par
00260 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/DependencyObjExtensions.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Windows;\par
00006 {\cf17 using }System.Windows.Media;\par
00007 {\cf17 using }System.Windows.Media.Media3D;\par
00008 \par
00009 {\cf17 namespace }TagManager\par
00010 \{\par
00011     {\cf17 public} {\cf17 static} {\cf17 class }DependencyObjExtensions\par
00012     \{\par
00022         {\cf17 public} {\cf17 static} T TryFindParent<T>({\cf17 this} DependencyObject child)\par
00023             where T : DependencyObject\par
00024         \{\par
00025             {\cf20 //get parent item}\par
00026             DependencyObject parentObject = GetParentObject(child);\par
00027 \par
00028             {\cf20 //we've reached the end of the tree}\par
00029             {\cf19 if} (parentObject == {\cf17 null}) {\cf19 return} {\cf17 null};\par
00030 \par
00031             {\cf20 //check if the parent matches the type we're looking for}\par
00032             T parent = parentObject as T;\par
00033             {\cf19 if} (parent != {\cf17 null})\par
00034             \{\par
00035                 {\cf19 return} parent;\par
00036             \}\par
00037             {\cf19 else}\par
00038             \{\par
00039                 {\cf20 //use recursion to proceed with next level}\par
00040                 {\cf19 return} TryFindParent<T>(parentObject);\par
00041             \}\par
00042         \}\par
00043         {\cf17 public} {\cf17 static} T FindVisualParent<T>(UIElement element) where T : UIElement\par
00044         \{\par
00045             UIElement parent = element;\par
00046             {\cf19 while} (parent != {\cf17 null})\par
00047             \{\par
00048                 T correctlyTyped = parent as T;\par
00049                 {\cf19 if} (correctlyTyped != {\cf17 null})\par
00050                 \{\par
00051                     {\cf19 return} correctlyTyped;\par
00052                 \}\par
00053 \par
00054                 parent = VisualTreeHelper.GetParent(parent) as UIElement;\par
00055             \}\par
00056             {\cf19 return} {\cf17 null};\par
00057         \}\par
00058 \par
00068         {\cf17 public} {\cf17 static} DependencyObject GetParentObject({\cf17 this} DependencyObject child)\par
00069         \{\par
00070             {\cf19 if} (child == {\cf17 null}) {\cf19 return} {\cf17 null};\par
00071 \par
00072             {\cf20 //handle content elements separately}\par
00073             ContentElement contentElement = child as ContentElement;\par
00074             {\cf19 if} (contentElement != {\cf17 null})\par
00075             \{\par
00076                 DependencyObject parent = ContentOperations.GetParent(contentElement);\par
00077                 {\cf19 if} (parent != {\cf17 null}) {\cf19 return} parent;\par
00078 \par
00079                 FrameworkContentElement fce = contentElement as FrameworkContentElement;\par
00080                 {\cf19 return} fce != {\cf17 null} ? fce.Parent : {\cf17 null};\par
00081             \}\par
00082 \par
00083             {\cf20 //also try searching for parent in framework elements (such as DockPanel, etc)}\par
00084             FrameworkElement frameworkElement = child as FrameworkElement;\par
00085             {\cf19 if} (frameworkElement != {\cf17 null})\par
00086             \{\par
00087                 DependencyObject parent = frameworkElement.Parent;\par
00088                 {\cf19 if} (parent != {\cf17 null}) {\cf19 return} parent;\par
00089             \}\par
00090 \par
00091             {\cf20 //if it's not a ContentElement/FrameworkElement, rely on VisualTreeHelper}\par
00092             {\cf19 return} VisualTreeHelper.GetParent(child);\par
00093         \}\par
00103         {\cf17 public} {\cf17 static} T FindChild<T>({\cf17 this} DependencyObject parent)\par
00104             where T : DependencyObject\par
00105         \{\par
00106             {\cf19 return} parent.FindChild<T>(child => {\cf17 true});\par
00107         \}\par
00108 \par
00119         {\cf17 public} {\cf17 static} T FindChild<T>({\cf17 this} DependencyObject parent, Func<T, bool> predicate)\par
00120             where T : DependencyObject\par
00121         \{\par
00122             {\cf19 return} parent.FindChildren<T>(predicate).First();\par
00123         \}\par
00124 \par
00132         {\cf17 public} {\cf17 static} {\cf18 bool} TryFindChild<T>({\cf17 this} DependencyObject parent, out T foundChild)\par
00133             where T : DependencyObject\par
00134         \{\par
00135             {\cf19 return} parent.TryFindChild<T>(child => {\cf17 true}, out foundChild);\par
00136         \}\par
00137 \par
00146         {\cf17 public} {\cf17 static} {\cf18 bool} TryFindChild<T>({\cf17 this} DependencyObject parent, Func<T, bool> predicate, out T foundChild)\par
00147             where T : DependencyObject\par
00148         \{\par
00149             foundChild = {\cf17 null};\par
00150             var results = parent.FindChildren<T>(predicate);\par
00151             {\cf19 if} (results.Count() == 0)\par
00152                 {\cf19 return} {\cf17 false};\par
00153 \par
00154             foundChild = results.First();\par
00155             {\cf19 return} {\cf17 true};\par
00156         \}\par
00157 \par
00167         {\cf17 public} {\cf17 static} IEnumerable<T> FindChildren<T>({\cf17 this} DependencyObject parent, Func<T, bool> predicate)\par
00168             where T : DependencyObject\par
00169         \{\par
00170             var children = {\cf17 new} List<DependencyObject>();\par
00171 \par
00172             {\cf19 if} ((parent is Visual) || (parent is Visual3D))\par
00173             \{\par
00174                 var visualChildrenCount = VisualTreeHelper.GetChildrenCount(parent);\par
00175                 {\cf19 for} ({\cf18 int} childIndex = 0; childIndex < visualChildrenCount; childIndex++)\par
00176                     children.Add(VisualTreeHelper.GetChild(parent, childIndex));\par
00177             \}\par
00178             {\cf19 foreach} (var logicalChild {\cf19 in} LogicalTreeHelper.GetChildren(parent).OfType<DependencyObject>())\par
00179                 {\cf19 if} (!children.Contains(logicalChild))\par
00180                     children.Add(logicalChild);\par
00181 \par
00182             {\cf19 foreach} (var child {\cf19 in} children)\par
00183             \{\par
00184                 var typedChild = child as T;\par
00185                 {\cf19 if} ((typedChild != {\cf17 null}) && predicate.Invoke(typedChild))\par
00186                     yield {\cf19 return} typedChild;\par
00187 \par
00188                 {\cf19 foreach} (var foundDescendant {\cf19 in} FindChildren(child, predicate))\par
00189                     yield {\cf19 return} foundDescendant;\par
00190             \}\par
00191             yield {\cf19 break};\par
00192         \}\par
00193 \par
00194     \}\par
00195 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/EditableTextBlock.xaml.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }System.Windows;\par
00007 {\cf17 using }System.Windows.Controls;\par
00008 {\cf17 using }System.Windows.Data;\par
00009 {\cf17 using }System.Windows.Documents;\par
00010 {\cf17 using }System.Windows.Input;\par
00011 {\cf17 using }System.Windows.Media;\par
00012 {\cf17 using }System.Windows.Media.Imaging;\par
00013 {\cf17 using }System.Windows.Navigation;\par
00014 {\cf17 using }System.Windows.Shapes;\par
00015 \par
00016 {\cf17 namespace }TagManager\par
00017 \{\par
00021     {\cf17 public} {\cf17 partial class }EditableTextBlock : UserControl\par
00022     \{\par
00023 \par
00024         {\cf17 public} {\cf17 event} EventHandler NotifyTextEditionCompleted;\par
00025 \par
00026 {\cf21         #region Constructor}\par
00027 \par
00028         {\cf17 public} EditableTextBlock()\par
00029         \{\par
00030             InitializeComponent();\par
00031             base.Focusable = {\cf17 true};\par
00032             base.FocusVisualStyle = {\cf17 null};\par
00033         \}\par
00034 \par
00035 {\cf21         #endregion Constructor}\par
00036 \par
00037 {\cf21         #region Member Variables}\par
00038 \par
00039         {\cf20 // We keep the old text when we go into editmode}\par
00040         {\cf20 // in case the user aborts with the escape key}\par
00041         {\cf17 public} {\cf18 string} oldText;\par
00042 \par
00043 {\cf21         #endregion Member Variables}\par
00044 \par
00045 {\cf21         #region Properties}\par
00046 \par
00047         {\cf17 public} {\cf18 string} Text\par
00048         \{\par
00049             {\cf17 get} \{ {\cf19 return} ({\cf18 string})GetValue(TextProperty); \}\par
00050             {\cf17 set} \{ SetValue(TextProperty, value); \}\par
00051         \}\par
00052         {\cf17 public} {\cf17 static} readonly DependencyProperty TextProperty = DependencyProperty.Register( {\cf22 "Text"}, typeof({\cf18 string}), typeof(EditableTextBlock), {\cf17 new} PropertyMetadata({\cf22 ""}));\par
00053 \par
00054         {\cf17 public} {\cf18 bool} IsEditable\par
00055         \{\par
00056             {\cf17 get} \{ {\cf19 return} ({\cf18 bool})GetValue(IsEditableProperty); \}\par
00057             {\cf17 set} \{ SetValue(IsEditableProperty, value); \}\par
00058         \}\par
00059         {\cf17 public} {\cf17 static} readonly DependencyProperty IsEditableProperty = DependencyProperty.Register( {\cf22 "IsEditable"}, typeof({\cf18 bool}), typeof(EditableTextBlock), {\cf17 new} PropertyMetadata({\cf17 true}));\par
00060 \par
00061         {\cf17 public} {\cf18 bool} IsInEditMode\par
00062         \{\par
00063             {\cf17 get}\par
00064             \{   {\cf19 return} ({\cf18 bool})GetValue(IsInEditModeProperty); \}\par
00065             {\cf17 set}\par
00066             \{ SetValue(IsInEditModeProperty, value); \}\par
00067         \}\par
00068 \par
00069         {\cf17 public} {\cf17 static} readonly DependencyProperty IsInEditModeProperty = DependencyProperty.Register( {\cf22 "IsInEditMode"}, typeof({\cf18 bool}), typeof(EditableTextBlock), {\cf17 new} PropertyMetadata({\cf17 false}));\par
00070 \par
00071         {\cf17 public} {\cf18 string} TextFormat\par
00072         \{\par
00073             {\cf17 get} \{ {\cf19 return} ({\cf18 string})GetValue(TextFormatProperty); \}\par
00074             {\cf17 set}\par
00075             \{\par
00076                 {\cf19 if} (value == {\cf22 ""}) value = {\cf22 "\{0\}"};\par
00077                 SetValue(TextFormatProperty, value);\par
00078             \}\par
00079         \}\par
00080 \par
00081         {\cf17 public} {\cf17 static} readonly DependencyProperty TextFormatProperty = DependencyProperty.Register( {\cf22 "TextFormat"}, typeof({\cf18 string}), typeof(EditableTextBlock), {\cf17 new} PropertyMetadata({\cf22 "\{0\}"}));\par
00082 \par
00083         {\cf17 public} {\cf18 string} FormattedText\par
00084         \{\par
00085             {\cf17 get} \{ {\cf19 return} String.Format(TextFormat, Text); \}\par
00086         \}\par
00087 \par
00088         {\cf17 public} {\cf17 static} readonly DependencyProperty   IsShortcutProperty = DependencyProperty.Register({\cf22 "IsShortcut"}, typeof({\cf18 bool}), typeof(EditableTextBlock), {\cf17 new} PropertyMetadata({\cf17 false}));\par
00089 \par
00090         {\cf17 public} {\cf18 bool} IsShortcut\par
00091         \{\par
00092             {\cf17 get} \{ {\cf19 return} ({\cf18 bool})GetValue(FontStyleProperty); \}\par
00093             {\cf17 set}\par
00094             \{\par
00095                 SetValue(FontStyleProperty, value);\par
00096             \}\par
00097         \}\par
00098 {\cf21         #endregion Properties}\par
00099 \par
00100 {\cf21         #region Event Handlers}\par
00101 \par
00102         {\cf20 // Invoked when we enter edit mode.}\par
00103         {\cf18 void} TextBox_Loaded({\cf18 object} sender, RoutedEventArgs e)\par
00104         \{\par
00105             TextBox txt = sender as TextBox;\par
00106 \par
00107             {\cf20 // Give the TextBox input focus}\par
00108             txt.Focus();\par
00109 \par
00110             txt.SelectAll();\par
00111         \}\par
00112 \par
00113         {\cf20 // Invoked when we exit edit mode.}\par
00114         {\cf18 void} TextBox_LostFocus({\cf18 object} sender, RoutedEventArgs e)\par
00115         \{\par
00116             this.IsInEditMode = {\cf17 false};\par
00117         \}\par
00118 \par
00119         {\cf20 // Invoked when the user edits the annotation.}\par
00120         {\cf18 void} TextBox_KeyDown({\cf18 object} sender, KeyEventArgs e)\par
00121         \{\par
00122             {\cf19 if} (e.Key == Key.Enter)\par
00123             \{\par
00124                 {\cf19 if} (Text != {\cf22 ""})\par
00125                 \{\par
00126                     this.IsInEditMode = {\cf17 false};\par
00127                     NotifyTextEditionCompleted.Invoke({\cf17 this}, {\cf17 new} EventArgs());\par
00128                     e.Handled = {\cf17 true};\par
00129                 \}\par
00130                 {\cf19 else}\par
00131                 \{\par
00132                     this.IsInEditMode = {\cf17 false};\par
00133                     Text = oldText;\par
00134                     e.Handled = {\cf17 true};\par
00135                 \}\par
00136             \}\par
00137             {\cf19 else} {\cf19 if} (e.Key == Key.Escape)\par
00138             \{\par
00139                 this.IsInEditMode = {\cf17 false};\par
00140                 Text = oldText;\par
00141                 e.Handled = {\cf17 true};\par
00142             \}\par
00143         \}\par
00144 \par
00145 {\cf21         #endregion Event Handlers}\par
00146 \par
00147     \}\par
00148 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/EntityVisibility.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 \par
00007 {\cf17 namespace }TagManager\par
00008 \{\par
00009     {\cf17 public} {\cf17 enum} EntityVisibility\par
00010     \{\par
00011         Vsible,\par
00012         Hidden,\par
00013         Mixed\par
00014     \}\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/EnumHelper.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Reflection;\par
00006 {\cf17 using }System.ComponentModel;\par
00007 \par
00008 {\cf17 namespace }TagManager\par
00009 \{\par
00010     {\cf17 public} {\cf17 static} {\cf17 class }EnumHelper\par
00011     \{\par
00012         {\cf17 public} {\cf17 static} {\cf18 string} GetEnumDescription({\cf17 this} Enum value)\par
00013         \{\par
00014             FieldInfo fi = value.GetType().GetField(value.ToString());\par
00015 \par
00016             DescriptionAttribute[] attributes =\par
00017                 (DescriptionAttribute[])fi.GetCustomAttributes(typeof(DescriptionAttribute), {\cf17 false});\par
00018 \par
00019             {\cf19 if} (attributes != {\cf17 null} && attributes.Length > 0)\par
00020                 {\cf19 return} attributes[0].Description;\par
00021             {\cf19 else}\par
00022                 {\cf19 return} value.ToString();\par
00023         \}\par
00024         {\cf17 public} {\cf17 static} IEnumerable<T> EnumToList<T>()\par
00025         \{\par
00026             Type enumType = typeof(T);\par
00027 \par
00028             {\cf20 // Can't use generic type constraints on value types,}\par
00029             {\cf20 // so have to do check like this}\par
00030             {\cf19 if} (enumType.BaseType != typeof(Enum))\par
00031                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "T must be of type System.Enum"});\par
00032 \par
00033             Array enumValArray = Enum.GetValues(enumType);\par
00034             List<T> enumValList = {\cf17 new} List<T>(enumValArray.Length);\par
00035 \par
00036             {\cf19 foreach} ({\cf18 int} val {\cf19 in} enumValArray)\par
00037             \{\par
00038                 enumValList.Add((T)Enum.Parse(enumType, val.ToString()));\par
00039             \}\par
00040 \par
00041             {\cf19 return} enumValList;\par
00042         \}\par
00043     \}\par
00044 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ExtensionObservableCollection.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.ObjectModel;\par
00003 {\cf17 using }System.Collections.Specialized;\par
00004 {\cf17 using }System.Collections.Generic;\par
00005 \par
00006 {\cf17 namespace }TagPan\par
00007 \{\par
00012     {\cf17 public} {\cf17 class }ObservableCollection<T> : System.Collections.ObjectModel.ObservableCollection<T>\par
00013     \{\par
00014 \par
00018         {\cf17 public} {\cf18 void} AddRange(IEnumerable<T> collection)\par
00019         \{\par
00020             {\cf19 foreach} (var i {\cf19 in} collection) Items.Add(i);\par
00021             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, collection));\par
00022         \}\par
00023 \par
00027         {\cf17 public} {\cf18 void} RemoveRange(IEnumerable<T> collection)\par
00028         \{\par
00029             {\cf19 foreach} (var i {\cf19 in} collection) Items.Remove(i);\par
00030             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, collection));\par
00031         \}\par
00032 \par
00036         {\cf17 public} {\cf18 void} Replace(T item)\par
00037         \{\par
00038             ReplaceRange({\cf17 new} T[] \{ item \});\par
00039         \}\par
00043         {\cf17 public} {\cf18 void} ReplaceRange(IEnumerable<T> collection)\par
00044         \{\par
00045             List<T> old = {\cf17 new} List<T>(Items);\par
00046             Items.Clear();\par
00047             {\cf19 foreach} (var i {\cf19 in} collection) Items.Add(i);\par
00048             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace, collection, old, 0));\par
00049         \}\par
00050         {\cf17 public} {\cf18 void} RaiseCollectionChanged()\par
00051         \{\par
00052             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset));\par
00053         \}\par
00054 \par
00058         {\cf17 public} ObservableCollection()\par
00059             : base() \{ \}\par
00060 \par
00066         {\cf17 public} ObservableCollection(IEnumerable<T> collection)\par
00067             : base(collection) \{ \}\par
00068     \}\par
00069 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/FastHost.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.ComponentModel;\par
00003 {\cf17 using }System.Drawing;\par
00004 {\cf17 using }System.Windows.Forms;\par
00005 {\cf17 using }System.Windows.Forms.Integration;\par
00006 {\cf17 namespace }TagPan\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }FastHost : UserControl\par
00009     \{\par
00010         {\cf17 private} IContainer components = {\cf17 null};\par
00011         {\cf17 private} ElementHost elementHost;\par
00012         {\cf17 private} FastWPFTag fastWPFTag_obj;\par
00013         {\cf17 public} {\cf17 event} System.EventHandler ForceRedraw;\par
00014         {\cf17 public} FastHost()\par
00015         \{\par
00016             this.InitializeComponent();\par
00017         \}\par
00018         {\cf17 private} {\cf18 void} fastWPFTag_obj_ForceRedraw({\cf18 object} sender, System.EventArgs e)\par
00019         \{\par
00020             this.ForceRedraw({\cf17 null}, {\cf17 null});\par
00021         \}\par
00022         {\cf17 public} {\cf18 void} CreateAutoCompleteSource(TagPanel _tagPan)\par
00023         \{\par
00024             this.fastWPFTag_obj.CreateAutoCompleteSource(_tagPan);\par
00025         \}\par
00026         {\cf17 public} {\cf18 void} LinkParent()\par
00027         \{\par
00028             this.fastWPFTag_obj.winParent = (Form)base.Parent;\par
00029         \}\par
00030         {\cf17 protected} {\cf17 override} {\cf18 void} Dispose({\cf18 bool} disposing)\par
00031         \{\par
00032             {\cf19 if} (disposing && this.components != {\cf17 null})\par
00033             \{\par
00034                 this.components.Dispose();\par
00035             \}\par
00036             base.Dispose(disposing);\par
00037         \}\par
00038         {\cf17 private} {\cf18 void} InitializeComponent()\par
00039         \{\par
00040             this.elementHost = {\cf17 new} ElementHost();\par
00041             this.fastWPFTag_obj = {\cf17 new} FastWPFTag();\par
00042             base.SuspendLayout();\par
00043             this.elementHost.Dock = DockStyle.Fill;\par
00044             this.elementHost.Location = {\cf17 new} Point(0, 0);\par
00045             this.elementHost.MaximumSize = {\cf17 new} Size(320, 30);\par
00046             this.elementHost.MinimumSize = {\cf17 new} Size(320, 30);\par
00047             this.elementHost.Name = {\cf22 "elementHost"};\par
00048             this.elementHost.Size = {\cf17 new} Size(320, 30);\par
00049             this.elementHost.TabIndex = 0;\par
00050             this.elementHost.Text = {\cf22 "elementHost1"};\par
00051             this.elementHost.Child = this.fastWPFTag_obj;\par
00052             base.AutoScaleDimensions = {\cf17 new} SizeF(6f, 13f);\par
00053             base.AutoScaleMode = AutoScaleMode.Font;\par
00054             base.Controls.Add(this.elementHost);\par
00055             this.MaximumSize = {\cf17 new} Size(320, 30);\par
00056             this.MinimumSize = {\cf17 new} Size(320, 30);\par
00057             base.Name = {\cf22 "FastHost"};\par
00058             base.Size = {\cf17 new} Size(320, 30);\par
00059             base.ResumeLayout({\cf17 false});\par
00060         \}\par
00061     \}\par
00062 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/FastWPFTag.xaml.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.CodeDom.Compiler;\par
00003 {\cf17 using }System.Collections.Generic;\par
00004 {\cf17 using }System.ComponentModel;\par
00005 {\cf17 using }System.Diagnostics;\par
00006 {\cf17 using }System.Linq;\par
00007 {\cf17 using }System.Windows;\par
00008 {\cf17 using }System.Windows.Controls;\par
00009 {\cf17 using }System.Windows.Controls.Primitives;\par
00010 {\cf17 using }System.Windows.Forms;\par
00011 {\cf17 using }System.Windows.Input;\par
00012 {\cf17 using }System.Windows.Markup;\par
00013 {\cf17 using }dragonz.actb.core;\par
00014 {\cf17 using }dragonz.actb.provider;\par
00015 \par
00016 {\cf17 namespace }TagManager\par
00017 \{\par
00018     {\cf17 public} {\cf17 partial class }FastWPFTag : System.Windows.Controls.UserControl, IComponentConnector\par
00019     \{\par
00020         {\cf17 private} List<TagNode> nodesList;\par
00021         {\cf17 private} List<string> branchNames;\par
00022         {\cf17 private} TagNode projectEntity;\par
00023         {\cf17 private} {\cf18 bool} consoleMode = {\cf17 false};\par
00024         {\cf17 private} {\cf18 bool} shortcutMode = {\cf17 false};\par
00025         {\cf17 private} ConsoleContainerElement _consoleRoot;\par
00026         {\cf17 private} ConsoleContainerElement _currentContainer;\par
00027         {\cf17 public} Window winParent;\par
00028 \par
00029         {\cf17 public} FastWPFTag()\par
00030         \{\par
00031             this.InitializeComponent();\par
00032             \par
00033         \}\par
00034 \par
00035 \par
00036         {\cf17 public} {\cf18 void} CreateAutoCompleteSource()\par
00037         \{\par
00038             projectEntity = TagGlobals.root.GetNodeList().First(x => x.Name == {\cf22 "Project"});\par
00039             branchNames = {\cf17 new} List<string>();\par
00040             {\cf19 if} (projectEntity.Children.Count > 0)\par
00041             \{\par
00042                 nodesList = projectEntity.Children.ToList().GetNodeList();\par
00043                 {\cf19 foreach} (TagNode _entity {\cf19 in} nodesList)\par
00044                 \{\par
00045                     {\cf18 string} _branchName = _entity.GetNodeBranchName(TagGlobals.delimiter, TagGlobals.baseNames);\par
00046                     branchNames.Add(_branchName);\par
00047                 \}\par
00048                 \par
00049             \}\par
00050             actbFastBox.AutoCompleteManager.DataProvider = {\cf17 new} DataProviderContains(branchNames);\par
00051             actbFastBox.AutoCompleteManager.AutoAppend = {\cf17 false};\par
00052             _consoleRoot = {\cf17 new} ConsoleContainerElement();\par
00053             _currentContainer = _consoleRoot;\par
00054         \}\par
00055 \par
00056         {\cf17 private} {\cf18 void} FastBox_PreviewKeyDown({\cf18 object} sender, System.Windows.Input.KeyEventArgs e)\par
00057         \{\par
00058             dragonz.actb.control.AutoCompleteTextBox autoCompleteBox = (dragonz.actb.control.AutoCompleteTextBox)sender;\par
00059 \par
00060             {\cf20 // open bracket [}\par
00061             {\cf19 if} (e.Key == Key.Oem4)\par
00062             \{\par
00063                 FastPop.IsOpen = {\cf17 true};\par
00064                 ConsoleContainerElement consoleContainerElement = {\cf17 new} ConsoleContainerElement(_currentContainer);\par
00065                 _currentContainer.content.Add(consoleContainerElement);\par
00066                 _currentContainer = consoleContainerElement;\par
00067                 e.Handled = {\cf17 true};\par
00068             \}\par
00069 \par
00070             {\cf20 // close bracket ]}\par
00071             {\cf19 if} (e.Key == Key.Oem6)\par
00072             \{\par
00073                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00074                 {\cf19 if} (entity != {\cf17 null})\par
00075                 \{\par
00076                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00077                 \}\par
00078                 autoCompleteBox.Text = {\cf22 ""};\par
00079                 _currentContainer = _currentContainer.parent;\par
00080                 e.Handled = {\cf17 true};\par
00081             \}\par
00082 \par
00083             {\cf20 // + key}\par
00084             {\cf19 if} (e.Key == Key.Add)\par
00085             \{\par
00086                 FastPop.IsOpen = {\cf17 true};\par
00087                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00088                 {\cf19 if} (entity != {\cf17 null})\par
00089                 \{\par
00090                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00091                     _currentContainer.ops.Add(concat.addition);\par
00092                 \}\par
00093                 {\cf19 else}\par
00094                 \{\par
00095                     _currentContainer.ops.Add(concat.addition);\par
00096                 \}\par
00097                 autoCompleteBox.Text = {\cf22 ""};\par
00098                 e.Handled = {\cf17 true};\par
00099             \}\par
00100 \par
00101             {\cf20 // - key}\par
00102             {\cf19 if} (e.Key == Key.Subtract)\par
00103             \{\par
00104                 FastPop.IsOpen = {\cf17 true};\par
00105                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00106                 {\cf19 if} (entity != {\cf17 null} && autoCompleteBox.Text != {\cf22 ""})\par
00107                 \{\par
00108                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00109                     _currentContainer.ops.Add(concat.substraction);\par
00110                 \}\par
00111                 {\cf19 else}\par
00112                 \{\par
00113                     _currentContainer.ops.Add(concat.substraction);\par
00114                 \}\par
00115                 autoCompleteBox.Text = {\cf22 ""};\par
00116                 e.Handled = {\cf17 true};\par
00117             \}\par
00118 \par
00119             {\cf20 // slash key /}\par
00120             {\cf19 if} (e.Key == Key.Oem2)\par
00121             \{\par
00122                 FastPop.IsOpen = {\cf17 true};\par
00123                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00124                 {\cf19 if} (entity == {\cf17 null})\par
00125                 \{\par
00126                     entity = TagHelperMethods.GetLonguestMatchingTag(autoCompleteBox.Text, {\cf17 true}, {\cf17 null});\par
00127                 \}\par
00128                 {\cf19 if} (!entity.IsShortcut)\par
00129                 \{\par
00130                     TagMethods.ApplyEntities({\cf17 new} List<TagNode>() \{ entity \}, MaxPluginUtilities.Selection.ToListHandles());\par
00131                     {\cf19 if} (TagGlobals.autoRename && entity.IsNameable)\par
00132                     \{\par
00133                         TagMethods.RenameUsingStructure();\par
00134                     \}\par
00135                 \}\par
00136                 winParent.Close();\par
00137             \}\par
00138 \par
00139             {\cf20 // backslash key \\}\par
00140 {\cf20             if (e.Key == Key.Oem5)}\par
00141             \{\par
00142                 FastPop.IsOpen = {\cf17 true};\par
00143                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00144                 {\cf19 if} (entity == {\cf17 null})\par
00145                 \{\par
00146                     entity = TagHelperMethods.GetLonguestMatchingTag(autoCompleteBox.Text, {\cf17 true}, {\cf17 false});\par
00147                 \}\par
00148                 {\cf19 if} (!entity.IsShortcut)\par
00149                 \{\par
00150                     TagMethods.ApplyEntities({\cf17 new} List<TagNode>() \{ entity \}, MaxPluginUtilities.Selection.ToListHandles());\par
00151                 \}\par
00152                 winParent.Close();\par
00153             \}\par
00154 \par
00155             {\cf20 // enter key }\par
00156             {\cf19 if} (e.Key == Key.Return)\par
00157             \{\par
00158                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00159                 {\cf19 if} (shortcutMode)\par
00160                 \{\par
00161                     entity = TagHelperMethods.GetLonguestMatchingTag(autoCompleteBox.Text, {\cf17 false}, {\cf17 null});\par
00162                     TagNode _shortcut = {\cf17 new} TagNode(autoCompleteBox.Text, _consoleRoot);\par
00163                     entity.Children.Add(_shortcut);\par
00164                 \}\par
00165                 {\cf19 if} (entity != {\cf17 null})\par
00166                 \{\par
00167                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00168                 \}\par
00169 \par
00170                 List<uint> _nodeHandles = _currentContainer.getCorrespondingSel();\par
00171 \par
00172                 TagGlobals.selectionChain.Push(TagMethods.GetEntitiesContainingObjects(_nodeHandles).ToList());\par
00173 \par
00174                 MaxPluginUtilities.SetSelection(_nodeHandles);\par
00175                 autoCompleteBox.FontStyle = FontStyles.Normal;\par
00176                 this.winParent.Close();\par
00177             \}\par
00178 \par
00179             {\cf20 // * key}\par
00180             {\cf19 if} (e.Key == Key.Multiply)\par
00181             \{\par
00182                 FastPop.IsOpen = {\cf17 true};\par
00183                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00184                 {\cf19 if} (entity != {\cf17 null})\par
00185                 \{\par
00186                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00187                     _currentContainer.ops.Add(concat.intersection);\par
00188                 \}\par
00189                 {\cf19 else}\par
00190                 \{\par
00191                     _currentContainer.ops.Add(concat.intersection);\par
00192                 \}\par
00193                 autoCompleteBox.Text = {\cf22 ""};\par
00194                 e.Handled = {\cf17 true};\par
00195             \}\par
00196             {\cf20 // %}\par
00197             {\cf19 if} (e.Key == Key.D5 && (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift)))\par
00198             \{\par
00199                 FastPop.IsOpen = {\cf17 true};\par
00200                 _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.Containing));\par
00201                 autoCompleteBox.Text = {\cf22 ""};\par
00202                 e.Handled = {\cf17 true};\par
00203             \}\par
00204             {\cf20 // $}\par
00205             {\cf19 if} (e.Key == Key.D4 && (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift)))\par
00206             \{\par
00207                 FastPop.IsOpen = {\cf17 true};\par
00208                 _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement({\cf22 "$"}, ConsoleElementModifier.Selection));\par
00209                 autoCompleteBox.Text = {\cf22 ""};\par
00210                 e.Handled = {\cf17 true};\par
00211             \}\par
00212             {\cf20 // #}\par
00213             {\cf19 if} (e.Key == Key.D3 && (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift)))\par
00214             \{\par
00215                 FastPop.IsOpen = {\cf17 true};\par
00216                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00217                 {\cf19 if} (entity != {\cf17 null})\par
00218                 \{\par
00219                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.Children));\par
00220                 \}\par
00221                 autoCompleteBox.Text = {\cf22 ""};\par
00222                 e.Handled = {\cf17 true};\par
00223             \}\par
00224             {\cf20 // @}\par
00225             {\cf19 if} (e.Key == Key.D2 && (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift)))\par
00226             \{\par
00227                 FastPop.IsOpen = {\cf17 true};\par
00228                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00229                 {\cf19 if} (entity != {\cf17 null})\par
00230                 \{\par
00231                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.Visible));\par
00232                 \}\par
00233                 autoCompleteBox.Text = {\cf22 ""};\par
00234                 e.Handled = {\cf17 true};\par
00235             \}\par
00236             {\cf20 // !}\par
00237             {\cf19 if} (e.Key == Key.D1 && (Keyboard.IsKeyDown(Key.LeftShift) || Keyboard.IsKeyDown(Key.RightShift)))\par
00238             \{\par
00239                 FastPop.IsOpen = {\cf17 true};\par
00240                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(autoCompleteBox.Text);\par
00241                 {\cf19 if} (entity != {\cf17 null})\par
00242                 \{\par
00243                     _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.Not));\par
00244                 \}\par
00245                 autoCompleteBox.Text = {\cf22 ""};\par
00246                 e.Handled = {\cf17 true};\par
00247             \}\par
00248             {\cf19 if} (e.Key == Key.OemPlus)\par
00249             \{\par
00250                 FastPop.IsOpen = {\cf17 true};\par
00251                 _currentContainer.content.Add({\cf17 new} ConsoleStringSelElement(autoCompleteBox.Text, ConsoleElementModifier.None));\par
00252                 shortcutMode = {\cf17 true};\par
00253                 autoCompleteBox.FontStyle = FontStyles.Italic;\par
00254                 autoCompleteBox.Text = {\cf22 ""};\par
00255                 e.Handled = {\cf17 true};\par
00256             \}\par
00257             {\cf19 if} (e.Key == Key.Back)\par
00258             \{\par
00259                 {\cf19 if} (consoleMode && autoCompleteBox.Text == {\cf22 ""})\par
00260                 \{\par
00261                     {\cf19 if} (_currentContainer.content.Count > 0 || _currentContainer.ops.Count > 0)\par
00262                     \{\par
00263                         {\cf19 if} (_currentContainer.content.Count > _currentContainer.ops.Count)\par
00264                         \{\par
00265                             _currentContainer.content.RemoveAt(_currentContainer.content.Count - 1);\par
00266                         \}\par
00267                         {\cf19 else}\par
00268                         \{\par
00269                             _currentContainer.ops.RemoveAt(_currentContainer.ops.Count - 1);\par
00270                         \}\par
00271                     \}\par
00272                     {\cf19 else}\par
00273                     \{\par
00274                         {\cf19 if} (_currentContainer.parent != {\cf17 null})\par
00275                         \{\par
00276                             _currentContainer = _currentContainer.parent;\par
00277                         \}\par
00278                     \}\par
00279                 \}\par
00280             \}\par
00281             {\cf19 if} (e.Key == Key.Escape)\par
00282             \{\par
00283                 winParent.Close();\par
00284             \}\par
00285             fastTip.Text = _consoleRoot.getCorrespondingStr();\par
00286         \}\par
00287 \par
00288     \}\par
00289 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/IConsoleSelElement.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 \par
00006 {\cf17 namespace }TagManager\par
00007 \{\par
00008     {\cf17 interface }IConsoleSelElement\par
00009     \{\par
00010         List<uint> getCorrespondingSel();\par
00011         {\cf18 string} getCorrespondingStr();\par
00012     \}\par
00013 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ItemToContextMenuConverter.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Globalization;\par
00003 {\cf17 using }System.Windows;\par
00004 {\cf17 using }System.Windows.Controls;\par
00005 {\cf17 using }System.Windows.Data;\par
00006 {\cf17 using }System.Collections.Generic;\par
00007 {\cf17 using }System.Linq;\par
00008 {\cf17 using }System.Text;\par
00009 {\cf17 using }System.Threading.Tasks;\par
00010 \par
00011 {\cf17 namespace }TagManager\par
00012 \{\par
00013     [ValueConversion(typeof(TagNode), typeof(ContextMenu))]\par
00014     {\cf17 public} {\cf17 class }ItemToContextMenuConverter : IValueConverter\par
00015     \{\par
00016         {\cf17 public} {\cf17 static} ContextMenu StdContextMenu;\par
00017         {\cf17 public} {\cf17 static} ContextMenu RootContextMenu;\par
00018 \par
00019         {\cf17 public} {\cf18 object} Convert({\cf18 object} value, Type targetType, {\cf18 object} parameter, CultureInfo culture)\par
00020         \{\par
00021             TagNode item = (TagNode)value;\par
00022             {\cf19 if} (item == {\cf17 null}) {\cf19 return} {\cf17 null};\par
00023             {\cf19 if} (item.Name == {\cf22 "Root"} || item.Name == {\cf22 "Project"})\par
00024             \{\par
00025                 {\cf19 return} RootContextMenu;\par
00026             \}\par
00027             {\cf19 else}\par
00028             \{\par
00029                 {\cf19 return} StdContextMenu;\par
00030             \}\par
00031         \}\par
00032 \par
00033         {\cf17 public} {\cf18 object} ConvertBack({\cf18 object} value, Type targetType, {\cf18 object} parameter, CultureInfo culture)\par
00034         \{\par
00035             {\cf19 throw} {\cf17 new} Exception({\cf22 "The method or operation is not implemented."});\par
00036         \}\par
00037     \}\par
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/Layer.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }Autodesk.Max;\par
00007 {\cf17 using }System.ComponentModel;\par
00008 {\cf17 using }System.Runtime.CompilerServices;\par
00009 \par
00010 {\cf17 namespace }TagManager\par
00011 \{\par
00012     {\cf17 public} {\cf17 static} {\cf17 class }LayerManager\par
00013     \{\par
00014         {\cf17 public} {\cf17 static} IILayerManager manager = MaxPluginUtilities.LayerManager;\par
00015         {\cf17 public} {\cf17 static} IILayer rootLayer = manager.RootLayer;\par
00016 \par
00017         {\cf17 public} {\cf17 static} {\cf18 void} CreateLayer({\cf18 string} _layerName)\par
00018         \{\par
00019             manager.CreateLayer(_layerName);\par
00020         \}\par
00021     \}\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/MaxPluginUtilities.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }Autodesk.Max;\par
00002 {\cf17 using }System;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Collections.Generic;\par
00005 {\cf17 using }System.IO;\par
00006 {\cf17 using }System.Runtime.Serialization;\par
00007 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00008 \par
00009 {\cf17 namespace }TagManager\par
00010 \{\par
00011     {\cf17 public} {\cf17 static} {\cf17 class }MaxPluginUtilities\par
00012     \{\par
00013         {\cf17 public} {\cf17 static} IInterface14 Interface\par
00014         \{\par
00015             {\cf17 get}\par
00016             \{\par
00017                 {\cf19 return} MaxPluginUtilities.Global.COREInterface14;\par
00018             \}\par
00019         \}\par
00020         {\cf17 public} {\cf17 static} IGlobal Global\par
00021         \{\par
00022             {\cf17 get}\par
00023             \{\par
00024                 {\cf19 return} GlobalInterface.Instance;\par
00025             \}\par
00026         \}\par
00027         {\cf17 public} {\cf17 static} IILayerManager LayerManager\par
00028         \{\par
00029             {\cf17 get}\par
00030             \{\par
00031                 {\cf19 return} MaxPluginUtilities.Interface.LayerManager;\par
00032             \}\par
00033         \}\par
00034 \par
00035         {\cf17 public} {\cf17 static} List<IINode> Selection\par
00036         \{\par
00037             {\cf17 get}\par
00038             \{\par
00039                 {\cf19 return} GetSelection();\par
00040             \}\par
00041             {\cf17 set}\par
00042             \{\par
00043                 SetSelection(value);\par
00044             \}\par
00045         \}\par
00046         {\cf17 public} {\cf17 static} {\cf18 string} GetMaxDir(MaxDirectory dir)\par
00047         \{\par
00048             {\cf18 string} path = Global.IPathConfigMgr.PathConfigMgr.GetDir(dir);\par
00049             {\cf19 return} path;\par
00050         \}\par
00051         {\cf17 private} {\cf17 static} List<IINode> GetSelection()\par
00052         \{\par
00053             List<IINode> selectedNodes = {\cf17 new} List<IINode>();\par
00054             {\cf19 for} ({\cf18 int} i = 0; i < Interface.SelNodeCount; i++)\par
00055             \{\par
00056                 selectedNodes.Add(Interface.GetSelNode(i));\par
00057             \}\par
00058             {\cf19 return} selectedNodes;\par
00059         \}\par
00060         {\cf17 private} {\cf17 static} {\cf18 void} SetSelection(List<IINode> _nodes)\par
00061         \{\par
00062             {\cf19 try}\par
00063             \{\par
00064                 _nodes = _nodes.Distinct().ToList();\par
00065                 IINodeTab selectedNodes = Global.INodeTab.Create();\par
00066                 selectedNodes.Resize(_nodes.Count);\par
00067                 {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00068                 \{\par
00069                     {\cf19 if} (_node != {\cf17 null})\par
00070                     \{\par
00071                         selectedNodes.AppendNode(_node, {\cf17 false}, 1);\par
00072                     \}\par
00073                     {\cf20 //Interface.SelectNode(_node, false);}\par
00074                 \}\par
00075                 Interface.SelectNodeTab(selectedNodes, {\cf17 true}, {\cf17 true});\par
00076             \}\par
00077             {\cf19 catch}\par
00078             \{\par
00079             \}\par
00080         \}\par
00081         {\cf17 public} {\cf17 static} {\cf18 void} SetSelection(List<uint> _nodesHandles)\par
00082         \{\par
00083             {\cf19 if} (!TagGlobals.addToSelection)\par
00084             \{\par
00085                 Interface.ClearNodeSelection({\cf17 false});\par
00086             \}\par
00087             Selection = _nodesHandles.GetNodesByHandles();\par
00088         \}\par
00089         {\cf17 private} {\cf17 static} {\cf18 void} SetSelection(SortableObservableCollection<IINode> _nodes)\par
00090         \{\par
00091             Selection = _nodes.ToList();\par
00092         \}\par
00093         {\cf17 public} {\cf17 static} IINodeTab ToNodeTab({\cf17 this} List<IINode> _nodes)\par
00094         \{\par
00095             IINodeTab nodeTab = Global.INodeTab.Create();\par
00096             {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00097             \{\par
00098                 nodeTab.AppendNode(_node, {\cf17 false}, 1);\par
00099                 Interface.SelectNode(_node, {\cf17 false});\par
00100             \}\par
00101             {\cf19 return} nodeTab;\par
00102         \}\par
00103         {\cf17 public} {\cf17 static} ITab<IINode> ToITab({\cf17 this} List<IINode> _nodes)\par
00104         \{\par
00105             \par
00106             ITab<IINode> _Itab = _nodes.ToNodeTab() as ITab<IINode>;\par
00107 \par
00108             {\cf19 return} _Itab;\par
00109         \}\par
00110         {\cf17 public} {\cf17 static} IINode GetNodeByHandle(uint _handle)\par
00111         \{\par
00112             {\cf19 return} Interface.GetINodeByHandle(_handle);\par
00113         \}\par
00114         {\cf17 public} {\cf17 static} List<IINode> GetNodesByHandles({\cf17 this} IEnumerable<uint> _handles)\par
00115         \{\par
00116             List<IINode> nodes = {\cf17 new} List<IINode>();\par
00117             {\cf19 foreach}(uint _handle {\cf19 in} _handles)\par
00118             \{\par
00119                 nodes.Add(GetNodeByHandle(_handle));\par
00120             \}\par
00121             {\cf19 return} nodes;\par
00122         \}\par
00123         {\cf17 public} {\cf17 static} List<IINode> ToListNode({\cf17 this} IINodeTab _nodes)\par
00124         \{\par
00125             List<IINode> listNodes = {\cf17 new} List<IINode>();\par
00126             {\cf19 for} ({\cf18 int} i = 0; i < _nodes.Count; i++ )\par
00127             \{\par
00128                 IntPtr pointer = (IntPtr)i;\par
00129                 listNodes.Add(_nodes[i]);\par
00130             \}\par
00131             {\cf19 return} listNodes;\par
00132         \}\par
00133         {\cf17 public} {\cf17 static} List<uint> ToListHandles({\cf17 this} List<IINode> _nodes)\par
00134         \{\par
00135             List<uint> listHandles = {\cf17 new} List<uint>();\par
00136             {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00137             \{\par
00138                 listHandles.Add(_node.Handle);\par
00139             \}\par
00140             {\cf19 return} listHandles;\par
00141         \}\par
00142         {\cf17 public} {\cf17 static} SortableObservableCollection<uint> ToSOC({\cf17 this} List<IINode> _nodes)\par
00143         \{\par
00144             SortableObservableCollection<uint> listHandles = {\cf17 new} SortableObservableCollection<uint>();\par
00145             {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00146             \{\par
00147                 listHandles.Add(_node.Handle);\par
00148             \}\par
00149             {\cf19 return} listHandles;\par
00150         \}\par
00151 \par
00152         {\cf17 public} {\cf17 static} {\cf18 void} Write({\cf18 string} s, params {\cf18 string}[] args)\par
00153         \{\par
00154             MaxPluginUtilities.Write({\cf18 string}.Format(s, args));\par
00155         \}\par
00156         {\cf17 public} {\cf17 static} {\cf18 void} Write({\cf18 string} s)\par
00157         \{\par
00158             MaxPluginUtilities.Global.TheListener.EditStream.Wputs(s);\par
00159             MaxPluginUtilities.Global.TheListener.EditStream.Wflush();\par
00160         \}\par
00161         {\cf17 public} {\cf17 static} {\cf18 void} WriteLine({\cf18 string} s)\par
00162         \{\par
00163             MaxPluginUtilities.Write(s);\par
00164             MaxPluginUtilities.Write({\cf22 "\\n"});\par
00165         \}\par
00166         {\cf17 public} {\cf17 static} {\cf18 void} WriteLine({\cf18 string} s, params {\cf18 string}[] args)\par
00167         \{\par
00168             MaxPluginUtilities.WriteLine({\cf18 string}.Format(s, args));\par
00169         \}\par
00170         {\cf17 public} {\cf17 static} IOResult Save({\cf17 this} IISave isave, {\cf18 object} obj)\par
00171         \{\par
00172             {\cf17 using} (MemoryStream memoryStream = {\cf17 new} MemoryStream())\par
00173             \{\par
00174                 {\cf17 new} BinaryFormatter().Serialize(memoryStream, obj);\par
00175                 uint num = 0u;\par
00176                 {\cf18 byte}[] array = memoryStream.ToArray();\par
00177                 isave.WriteVoid(BitConverter.GetBytes(array.Length), ref num);\par
00178                 {\cf19 if} (array.Length > 0)\par
00179                 \{\par
00180                     isave.WriteVoid(array, ref num);\par
00181                 \}\par
00182             \}\par
00183             {\cf19 return} IOResult.Ok;\par
00184         \}\par
00185         {\cf17 public} {\cf17 static} {\cf18 object} LoadObject({\cf17 this} IILoad iload)\par
00186         \{\par
00187             uint num = 0u;\par
00188             {\cf19 if} (iload.CurChunkLength < 4uL)\par
00189             \{\par
00190                 {\cf19 return} {\cf17 null};\par
00191             \}\par
00192             ulong arg_17_0 = iload.CurChunkLengthRemaining;\par
00193             {\cf18 byte}[] array = {\cf17 new} {\cf18 byte}[4];\par
00194             iload.ReadVoid(array, ref num);\par
00195             {\cf18 int} num2 = BitConverter.ToInt32(array, 0);\par
00196             ulong arg_37_0 = iload.CurChunkLengthRemaining;\par
00197             {\cf19 if} (num == 4u && num2 > 0 && num2 == ({\cf18 int})iload.CurChunkLengthRemaining)\par
00198             \{\par
00199                 array = {\cf17 new} {\cf18 byte}[num2];\par
00200                 iload.ReadVoid(array, ref num);\par
00201                 {\cf17 using} (MemoryStream memoryStream = {\cf17 new} MemoryStream(array))\par
00202                 \{\par
00203                     {\cf19 try}\par
00204                     \{\par
00205                         {\cf18 object} result = {\cf17 new} BinaryFormatter().Deserialize(memoryStream);\par
00206                         {\cf19 return} result;\par
00207                     \}\par
00208                     {\cf19 catch} (SerializationException)\par
00209                     \{\par
00210                         {\cf18 object} result = {\cf17 null};\par
00211                         {\cf19 return} result;\par
00212                     \}\par
00213                 \}\par
00214             \}\par
00215             {\cf19 return} {\cf17 null};\par
00216         \}\par
00217         {\cf17 public} {\cf17 static} {\cf18 bool} GetNodeHidden(uint _nodeHandle)\par
00218         \{\par
00219             {\cf19 return} GetNodeByHandle(_nodeHandle).IsHidden(NodeHideFlags.All, {\cf17 false});\par
00220         \}\par
00221         {\cf17 public} {\cf17 static} {\cf18 string} MakeNameUnique({\cf18 string} _namePrefix)\par
00222         \{\par
00223             Interface.MakeNameUnique(ref _namePrefix);\par
00224             {\cf19 return} _namePrefix;\par
00225         \}\par
00226         {\cf17 public} {\cf17 static} {\cf18 void} RenameNode({\cf17 this} IINode _node, {\cf18 string} _newName)\par
00227         \{\par
00228             {\cf18 string} finalName = MakeNameUnique(_newName+TagGlobals.delimiter);\par
00229             _node.Name = finalName;\par
00230             _node.NotifyNameChanged();\par
00231         \}\par
00232         {\cf17 public} {\cf17 static} {\cf18 void} RenameNode({\cf17 this} uint _nodeHandle, {\cf18 string} _newName)\par
00233         \{\par
00234             IINode _node = GetNodeByHandle(_nodeHandle);\par
00235             RenameNode(_node, _newName);\par
00236         \}\par
00237         {\cf17 public} {\cf17 static} {\cf18 void} NotifyNameChanged({\cf17 this} IINode _node)\par
00238         \{\par
00239             {\cf20 // this part is only to refresh the node's name in the UI}\par
00240             IInterval interval = MaxPluginUtilities.Global.Interval.Create();\par
00241             interval.SetInfinite();\par
00242             UIntPtr partID = (UIntPtr)RefMessage.NodeNamechange;\par
00243             SClass_ID[] classes = Autodesk.Max.Utilities.SClass_IDs.AllSuperClassIDs;\par
00244             {\cf19 for} ({\cf18 int} i = 0; i < classes.Length; i++)\par
00245             \{\par
00246                 {\cf20 //_node.NotifyDependents(interval, partID, RefMessage.NodeNamechange, classes[i], true, null);}\par
00247                 {\cf20 // max 2016}\par
00248                 {\cf20 //_node.NotifyDependents_(interval, partID, RefMessage.NodeNamechange, classes[i], true, null);}\par
00249                 _node.NotifyDependents(interval, partID, RefMessage.NodeNamechange, classes[i], {\cf17 true}, {\cf17 null}, NotifyDependentsOption.AllowOptimizations);\par
00250             \}\par
00251         \}\par
00252         {\cf17 public} {\cf17 static} IILayer GetObjectLayer(IINode _node)\par
00253         \{\par
00254             {\cf19 return} (IILayer)_node.GetReference(6);\par
00255         \}\par
00256         {\cf17 public} {\cf17 static} {\cf18 void} SetObjectLayer(IINode _node, {\cf18 string} LayerName)\par
00257         \{\par
00258             IILayer _layer = LayerManager.GetLayer(LayerName);\par
00259             _layer.AddToLayer(_node);\par
00260         \}\par
00261         {\cf17 public} {\cf17 static} {\cf18 void} SetObjectsLayer(List<IINode> _nodes, {\cf18 string} LayerName)\par
00262         \{\par
00263             IILayer _layer = LayerManager.GetLayer(LayerName);\par
00264             {\cf19 foreach}(IINode _node {\cf19 in} _nodes)\par
00265             \{\par
00266                 _layer.AddToLayer(_node);\par
00267             \}\par
00268         \}\par
00269 \par
00270         {\cf17 public} {\cf17 static} {\cf18 bool} IsLayerExisting({\cf18 string} _layerName)\par
00271         \{\par
00272             IILayer _layer = LayerManager.GetLayer(_layerName);\par
00273             {\cf19 return} (_layer != {\cf17 null});\par
00274         \}\par
00275         {\cf17 public} {\cf17 static} IILayer CreateLayer(IILayer _parent, {\cf18 string} _layerName)\par
00276         \{\par
00277             IILayer _newLayer = LayerManager.CreateLayer(_layerName);\par
00278             _newLayer.SetParentLayer(_parent);\par
00279             {\cf19 return} _newLayer;\par
00280         \}\par
00281         {\cf17 public} {\cf17 static} IILayer CreateLayer({\cf18 string} _layerName)\par
00282         \{\par
00283             IILayer _newLayer = LayerManager.CreateLayer(_layerName);\par
00284             {\cf19 return} _newLayer;\par
00285         \}\par
00286         {\cf17 public} {\cf17 static} IILayer CreateLayerBranch(TagNode _leaf)\par
00287         \{\par
00288             IILayer _selectedLayer=LayerManager.RootLayer;\par
00289             {\cf19 for} ({\cf18 int} i=0; i< _leaf.GetNodeBranch({\cf17 false}).Count; i++)\par
00290             \{\par
00291                 TagNode _entity = _leaf.GetNodeBranch({\cf17 false})[i];\par
00292                 {\cf19 if} (!IsLayerExisting(_entity.LongName))\par
00293                 \{\par
00294                     {\cf19 if} (i != 0)\par
00295                     \{\par
00296                         _selectedLayer = CreateLayer(_selectedLayer, _entity.LongName);\par
00297                     \}\par
00298                     {\cf19 else}\par
00299                     \{\par
00300                         _selectedLayer = CreateLayer(_entity.LongName);\par
00301                     \}\par
00302                 \}\par
00303                 {\cf19 else}\par
00304                 \{\par
00305                     _selectedLayer = LayerManager.GetLayer(_entity.LongName);\par
00306                 \}\par
00307             \}\par
00308             {\cf19 return} _selectedLayer;\par
00309         \}\par
00310         {\cf17 public} {\cf17 static} List<IINode> GetAllSceneNodes()\par
00311         \{\par
00312             IINode _root = Interface.RootNode;\par
00313             {\cf18 int} _nodesNb = _root.NumberOfChildren;\par
00314             List<IINode> _allNodes = {\cf17 new} List<IINode>();\par
00315             {\cf19 for}({\cf18 int} i=0; i<_nodesNb; i++)\par
00316             \{\par
00317                 _allNodes.Add(_root.GetChildNode(i));\par
00318             \}\par
00319             {\cf19 return} _allNodes;\par
00320         \}\par
00321         {\cf17 public} {\cf17 static} List<IINode> GetVisibleNodes(List<IINode> _nodes)\par
00322         \{\par
00323             List<IINode> _visibleNodes = {\cf17 new} List<IINode>();\par
00324             {\cf19 foreach}(IINode _node {\cf19 in} _nodes)\par
00325             \{\par
00326                 IILayer _layer = GetObjectLayer(_node);\par
00327                 {\cf18 bool} _layerHidden = _layer.IsHidden({\cf17 true});\par
00328                 {\cf19 if} (!_node.IsObjectHidden && !_layerHidden)\par
00329                 \{\par
00330                     _visibleNodes.Add(_node);\par
00331                 \}\par
00332             \}\par
00333             {\cf19 return} _visibleNodes;\par
00334         \}\par
00335         {\cf17 public} {\cf17 static} List<uint> GetVisibleNodes(List<uint> _nodeHandles)\par
00336         \{\par
00337             List<IINode> _nodes = _nodeHandles.GetNodesByHandles();\par
00338             List<IINode> _visibleNodes = {\cf17 new} List<IINode>();\par
00339             {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00340             \{\par
00341                 IILayer _layer = GetObjectLayer(_node);\par
00342                 {\cf18 bool} _layerHidden = _layer.IsHidden({\cf17 true});\par
00343                 {\cf19 if} (!_node.IsObjectHidden && !_layerHidden)\par
00344                 \{\par
00345                     _visibleNodes.Add(_node);\par
00346                 \}\par
00347             \}\par
00348             {\cf19 return} _visibleNodes.ToListHandles();\par
00349         \}\par
00350         {\cf17 public} {\cf17 static} List<IINode> GetVsibileNodesInScene()\par
00351         \{\par
00352             {\cf19 return} GetVisibleNodes(GetAllSceneNodes());\par
00353         \}\par
00354     \}\par
00355 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/NodesToBoolConverter.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Globalization;\par
00003 {\cf17 using }System.Windows;\par
00004 {\cf17 using }System.Windows.Controls;\par
00005 {\cf17 using }System.Windows.Data;\par
00006 {\cf17 using }System.Collections.Generic;\par
00007 {\cf17 using }System.Linq;\par
00008 {\cf17 using }System.Text;\par
00009 {\cf17 using }System.Threading.Tasks;\par
00010 {\cf17 using }System.Windows.Markup;\par
00011 \par
00012 {\cf17 namespace }TagManager\par
00013 \{\par
00014     {\cf17 public} {\cf17 class }NodesToBoolConverter :MarkupExtension, IMultiValueConverter\par
00015     \{\par
00016         {\cf17 private} {\cf17 static} NodesToBoolConverter _converter = {\cf17 null};\par
00017 \par
00018         {\cf17 public} {\cf17 override} {\cf18 object} ProvideValue(IServiceProvider serviceProvider)\par
00019         \{\par
00020             {\cf19 if} (_converter == {\cf17 null})\par
00021             \{\par
00022                 _converter = {\cf17 new} NodesToBoolConverter();\par
00023             \}\par
00024             {\cf19 return} _converter;\par
00025         \}\par
00026 \par
00027         {\cf17 public} {\cf18 object} Convert({\cf18 object}[] values, Type targetType, {\cf18 object} parameter, CultureInfo culture)\par
00028         \{\par
00029             SortableObservableCollection<uint> NodesInEntity = (SortableObservableCollection<uint>)values[0];\par
00030             SortableObservableCollection<uint> NodesInSelection = (SortableObservableCollection<uint>)values[1];\par
00031             {\cf19 if} (NodesInEntity == {\cf17 null}) {\cf19 return} {\cf17 null};\par
00032             {\cf19 if} (NodesInEntity.Intersect(MaxPluginUtilities.Selection.ToListHandles()).Count() > 0)\par
00033             \{\par
00034                 {\cf19 return} {\cf17 true};\par
00035             \}\par
00036             {\cf19 else}\par
00037             \{\par
00038                 {\cf19 return} {\cf17 false};\par
00039             \}\par
00040         \}\par
00041 \par
00042         {\cf17 public} {\cf18 object}[] ConvertBack({\cf18 object} value, Type[] targetTypes, {\cf18 object} parameter, System.Globalization.CultureInfo culture)\par
00043         \{\par
00044             {\cf19 throw} {\cf17 new} NotImplementedException();\par
00045         \}\par
00046     \}\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/ObjectDataChunk.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.IO;\par
00006 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00007 \par
00008 {\cf17 namespace }TagManager\par
00009 \{\par
00010     [Serializable]\par
00011     {\cf17 public} {\cf17 class }ObjectDataChunk\par
00012     \{\par
00013         {\cf17 public} List<string> entitiesIDs;\par
00014 \par
00015         {\cf17 public} ObjectDataChunk(List<TagNode> _entities)\par
00016         \{\par
00017             entitiesIDs = {\cf17 new} List<string>();\par
00018             {\cf19 foreach} (TagNode _entity {\cf19 in} _entities)\par
00019             \{\par
00020                 entitiesIDs.Add(_entity.ID.ToString());\par
00021             \}\par
00022         \}\par
00023 \par
00024         {\cf17 public} ObjectDataChunk(List<Guid> list)\par
00025         \{\par
00026             List<string> _hold = list.Select(x=> x.ToString()).ToList();\par
00027             entitiesIDs = _hold;\par
00028         \}\par
00029         \par
00030         {\cf17 public} {\cf17 static} ObjectDataChunk ByteArrayToObjectDataChunk({\cf18 byte}[] arrBytes)\par
00031         \{\par
00032             MemoryStream memStream = {\cf17 new} MemoryStream();\par
00033             BinaryFormatter binForm = {\cf17 new} BinaryFormatter();\par
00034             memStream.Write(arrBytes, 0, arrBytes.Length);\par
00035             memStream.Seek(0, SeekOrigin.Begin);\par
00036             ObjectDataChunk _data;\par
00037             {\cf19 try}\par
00038             \{\par
00039                 _data = (ObjectDataChunk)binForm.Deserialize(memStream);\par
00040             \}\par
00041             {\cf19 catch}\par
00042             \{\par
00043                 _data = {\cf17 null};\par
00044             \}\par
00045             {\cf19 return} _data;\par
00046         \}\par
00047     \}\par
00048     {\cf17 public} {\cf17 static} {\cf17 class }ObjectDataChunkExtensions\par
00049     \{\par
00050         {\cf17 public} {\cf17 static} {\cf18 byte}[] ToByteArray({\cf17 this} ObjectDataChunk _data)\par
00051         \{\par
00052             BinaryFormatter bf = {\cf17 new} BinaryFormatter();\par
00053             MemoryStream ms = {\cf17 new} MemoryStream();\par
00054             bf.Serialize(ms, _data);\par
00055             {\cf19 return} ms.ToArray();\par
00056         \}\par
00057     \}\par
00058 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/SortableObservableCollection.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Collections.ObjectModel;\par
00006 {\cf17 using }System.Collections.Specialized;\par
00007 \par
00008 {\cf17 namespace }TagManager\par
00009 \{\par
00014     [Serializable]\par
00015     {\cf17 public} {\cf17 class }SortableObservableCollection<T> : ObservableCollection<T>\par
00016     \{\par
00017         {\cf17 public} {\cf17 new} {\cf18 void} Add(T _val)\par
00018         \{\par
00019             Items.Add(_val);\par
00020             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, _val));\par
00021         \}\par
00022 \par
00023         {\cf17 public} {\cf18 void} AddRange(IEnumerable<T> collection)\par
00024         \{\par
00025             {\cf19 foreach} (var i {\cf19 in} collection)\par
00026             \{\par
00027                 Items.Add(i);\par
00028             \}\par
00029             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, collection.ToList()));\par
00030         \}\par
00031         {\cf17 public} {\cf18 void} AddRange(IEnumerable<T> collection, {\cf18 bool} _unique)\par
00032         \{\par
00033             IEnumerable<T> uniqueColl;\par
00034             {\cf19 if} (_unique)\par
00035             \{\par
00036                 uniqueColl = collection.Distinct();\par
00037                 uniqueColl = uniqueColl.Except(uniqueColl.Intersect(Items));\par
00038             \}\par
00039             {\cf19 else}\par
00040             \{\par
00041                 uniqueColl = collection;\par
00042             \}\par
00043             {\cf19 foreach} (var i {\cf19 in} uniqueColl)\par
00044             \{\par
00045                 Items.Add(i);\par
00046             \}\par
00047             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, collection.ToList()));\par
00048         \}\par
00049         {\cf17 public} {\cf18 void} RemoveRange(IEnumerable<T> collection)\par
00050         \{\par
00051             {\cf19 foreach} (var i {\cf19 in} collection)\par
00052             \{\par
00053                 {\cf19 if} (Items.Contains(i))\par
00054                 \{\par
00055                     Items.Remove(i);\par
00056                 \}\par
00057             \}\par
00058             OnCollectionChanged({\cf17 new} NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, collection.ToList()));\par
00059         \}\par
00065         {\cf17 public} {\cf18 void} Sort<TKey>(Func<T, TKey> keySelector)\par
00066         \{\par
00067             InternalSort(Items.OrderBy(keySelector));\par
00068         \}\par
00069 \par
00076         {\cf17 public} {\cf18 void} Sort<TKey>(Func<T, TKey> keySelector, IComparer<TKey> comparer)\par
00077         \{\par
00078             InternalSort(Items.OrderBy(keySelector, comparer));\par
00079         \}\par
00080 \par
00085         {\cf17 private} {\cf18 void} InternalSort(IEnumerable<T> sortedItems)\par
00086         \{\par
00087             var sortedItemsList = sortedItems.ToList();\par
00088 \par
00089             {\cf19 foreach} (var item {\cf19 in} sortedItemsList)\par
00090             \{\par
00091                 Move(IndexOf(item), sortedItemsList.IndexOf(item));\par
00092             \}\par
00093         \}\par
00094     \}\par
00095     {\cf17 public} {\cf17 static} {\cf17 class }SortableObservableCollectionExtension\par
00096     \{\par
00097         {\cf17 public} {\cf17 static} SortableObservableCollection<TSource> ToSortableObservableCollection<TSource>({\cf17 this} IEnumerable<TSource> _collection)\par
00098         \{\par
00099             SortableObservableCollection<TSource> res = {\cf17 new} SortableObservableCollection<TSource>();\par
00100             res.AddRange(_collection);\par
00101             {\cf19 return} res;\par
00102         \}\par
00103         {\cf17 public} {\cf17 static} List<TSource> ToList<TSource>({\cf17 this} IEnumerable<TSource> _collection)\par
00104         \{\par
00105             List<TSource> res = {\cf17 new} List<TSource>();\par
00106             res.AddRange(_collection);\par
00107             {\cf19 return} res;\par
00108         \}\par
00109     \}\par
00110 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagCenter.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }Autodesk.Max;\par
00007 {\cf17 using }Autodesk.Max.Plugins;\par
00008 {\cf17 using }System.Reflection;\par
00009 {\cf17 using }System.Windows.Forms;\par
00010 {\cf17 using }System.Xml;\par
00011 {\cf17 using }System.Xml.Linq;\par
00012 {\cf17 using }System.IO;\par
00013 {\cf17 using }System.Diagnostics;\par
00014 {\cf17 using }System.ComponentModel;\par
00015 \par
00016 {\cf17 namespace }TagManager\par
00017 \{\par
00018     {\cf17 public} {\cf17 static} {\cf17 class }AssemblyFunctions\par
00019     \{\par
00020         {\cf17 public} {\cf17 static} {\cf18 void} AssemblyMain()\par
00021         \{\par
00022             Autodesk.Max.IGlobal _global = Autodesk.Max.GlobalInterface.Instance;\par
00023             IInterface14 _interface = _global.COREInterface14;\par
00024             _interface.AddClass({\cf17 new} TagCenter.Descriptor(_global));\par
00025         \}\par
00026 \par
00027         {\cf17 public} {\cf17 static} {\cf18 void} AssemblyShutdown()\par
00028         \{\par
00029 \par
00030         \}\par
00031     \}\par
00032 \par
00033     \par
00034 \par
00035     {\cf17 public} {\cf17 class }TagCenter : ReferenceMaker,IPlugin\par
00036     \{\par
00037 \par
00038         {\cf17 private} EntityPan _fastPan;\par
00039 \par
00040         {\cf17 public} EntityPan fastPan\par
00041         \{\par
00042             {\cf17 get} \{ {\cf19 return} _fastPan; \}\par
00043             {\cf17 set} \{ _fastPan = value; \}\par
00044         \}\par
00045 \par
00046         {\cf17 private} FastWPFTag _fastTag;\par
00047 \par
00048         {\cf17 public} FastWPFTag fastTag\par
00049         \{\par
00050             {\cf17 get} \{ {\cf19 return} _fastTag; \}\par
00051             {\cf17 set} \{ _fastTag = value; \}\par
00052         \}\par
00053 \par
00054         {\cf17 public} {\cf17 class }Descriptor : Autodesk.Max.Plugins.ClassDesc2\par
00055         \{\par
00056 \par
00057             {\cf17 internal} {\cf17 class }PostLoadCallback : Autodesk.Max.Plugins.PostLoadCallback\par
00058             \{\par
00059                 {\cf17 public} PostLoadCallback()\par
00060                 \{\par
00061                 \}\par
00062                 {\cf17 public} {\cf17 override} {\cf18 int} Priority\par
00063                 \{\par
00064                     {\cf17 get}\par
00065                     \{\par
00066                         {\cf19 return} 1;\par
00067                     \}\par
00068                 \}\par
00069                 {\cf17 public} {\cf17 override} {\cf18 void} Proc(IILoad iload)\par
00070                 \{\par
00071                     {\cf19 if} (iload != {\cf17 null})\par
00072                     \{\par
00073                         {\cf19 for} ({\cf18 int} i = 0; i < iload.RootNode.NumChildren; i++)\par
00074                         \{\par
00075                             IINode _node = iload.RootNode.GetChildNode(i);\par
00076                             uint handle = _node.Handle;\par
00077                             IAppDataChunk chunk = _node.GetAppDataChunk(TagGlobals.tagCenter._descriptor.ClassID, TagGlobals.tagCenter._descriptor.SuperClassID, 0);\par
00078                             {\cf19 if} (chunk != {\cf17 null})\par
00079                             \{\par
00080                                 ObjectDataChunk odc = ObjectDataChunk.ByteArrayToObjectDataChunk(chunk.Data);\par
00081                                 {\cf19 foreach} ({\cf18 string} ID {\cf19 in} odc.entitiesIDs)\par
00082                                 \{\par
00083                                     {\cf19 if} (TagGlobals.mergedRoot != {\cf17 null})\par
00084                                     \{\par
00085                                         TagNode _nodeMerged = TagGlobals.mergedRoot.GetNodeList().FirstOrDefault(x => x.ID == Guid.Parse(ID));\par
00086                                         {\cf19 if} (_nodeMerged != {\cf17 null})\par
00087                                         \{\par
00088                                             TagNode entity = TagHelperMethods.GetLonguestMatchingTag(_nodeMerged.GetNodeBranchName(TagGlobals.delimiter, TagGlobals.baseNames), {\cf17 true}, _nodeMerged.IsNameable);\par
00089                                             {\cf19 if} (entity.Name != {\cf22 "Project"})\par
00090                                             \{\par
00091                                                 TagMethods.ApplyEntities({\cf17 new} List<TagNode>() \{ entity \}, {\cf17 new} List<uint>() \{ _node.Handle \});\par
00092                                             \}\par
00093                                         \}\par
00094                                     \}\par
00095                                 \}\par
00096                             \}\par
00097                         \}\par
00098                     \}\par
00099                 \}\par
00100             \}\par
00101             {\cf17 protected} IGlobal _global;\par
00102             {\cf17 public} {\cf17 static} IClass_ID _classID;\par
00103             {\cf17 public} {\cf18 bool} saveIsNeeded = {\cf17 true};\par
00104 \par
00105             {\cf17 public} IGlobal Global\par
00106             \{\par
00107                 {\cf17 get} \{ {\cf19 return} _global; \}\par
00108             \}\par
00109             {\cf17 public} Descriptor(IGlobal global)\par
00110             \{\par
00111                 TagGlobals.tagCenter._descriptor = {\cf17 this};\par
00112                 _global = global;\par
00113                 _classID = _global.Class_ID.Create(0x8962d7, 0x285b3ff9);\par
00114             \}\par
00115             \par
00116 \par
00117             {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00118             \{\par
00119                 {\cf17 get} \{ {\cf19 return} {\cf22 "Robin plugins"}; \}\par
00120             \}\par
00121 \par
00122             {\cf17 public} {\cf17 override} IClass_ID ClassID\par
00123             \{\par
00124                 {\cf17 get} \{ {\cf19 return} _classID; \}\par
00125             \}\par
00126 \par
00127             {\cf17 public} {\cf17 override} {\cf18 string} ClassName\par
00128             \{\par
00129                 {\cf17 get} \{ {\cf19 return} {\cf22 "TagManager"}; \}\par
00130             \}\par
00131 \par
00132             {\cf17 public} {\cf17 override} {\cf18 object} Create({\cf18 bool} loading)\par
00133             \{\par
00134                 {\cf19 return} {\cf17 new} TagCenter({\cf17 this});\par
00135             \}\par
00136 \par
00137             {\cf17 public} {\cf17 override} {\cf18 bool} IsPublic\par
00138             \{\par
00139                 {\cf17 get} \{ {\cf19 return} {\cf17 true}; \}\par
00140             \}\par
00141 \par
00142             {\cf17 public} {\cf17 override} SClass_ID SuperClassID\par
00143             \{\par
00144                 {\cf17 get} \{ {\cf19 return} SClass_ID.Utility; \}\par
00145             \}\par
00146             {\cf17 public} {\cf17 override} {\cf18 bool} NeedsToSave\par
00147             \{\par
00148                 {\cf17 get}\par
00149                 \{\par
00150                     {\cf19 return} saveIsNeeded;\par
00151                 \}\par
00152             \}\par
00153 \par
00154             {\cf17 public} {\cf17 override} {\cf18 string} NonLocalizedClassName => {\cf22 "TagManager"};\par
00155 \par
00156             {\cf17 public} {\cf17 override} IOResult Save(IISave isave)\par
00157             \{\par
00158                 IOResult result = isave.Save(TagGlobals.root);\par
00159                 {\cf19 return} result;\par
00160             \}\par
00161             {\cf17 public} {\cf17 override} IOResult Load(IILoad iload)\par
00162             \{\par
00163                 {\cf19 if} (!TagGlobals.isMerging)\par
00164                 \{\par
00165                     TagNode openingRoot = (TagNode)iload.LoadObject();\par
00166                     openingRoot.ReParent({\cf17 false});\par
00167                     TagGlobals.root = openingRoot;\par
00168                     {\cf19 if} (TagGlobals.root.Children.Where(x => x.Name == {\cf22 "Project"}).FirstOrDefault() == {\cf17 null})\par
00169                     \{\par
00170                         TagGlobals.root = {\cf17 new} TagNode({\cf22 "Root"});\par
00171                         TagNode firstchild = {\cf17 new} TagNode({\cf22 "Project"});\par
00172                         TagGlobals.root.Children.Add(firstchild);\par
00173                     \}\par
00174                         {\cf20 // created to remove objects getting tagged with projects because of merging longuest match returns project in case of null}\par
00175                     {\cf19 else}\par
00176                     \{\par
00177                         TagGlobals.root.Children.Where(x => x.Name == {\cf22 "Project"}).FirstOrDefault().Nodes= {\cf17 new} SortableObservableCollection<uint>();\par
00178                     \}\par
00179                     TagGlobals.tagCenter.fastPan.DataContext = TagGlobals.root.Children[0];\par
00180                     {\cf19 return} base.Load(iload);\par
00181                 \}\par
00182                 {\cf19 else}\par
00183                 \{\par
00184                     Descriptor.PostLoadCallback cb = {\cf17 new} Descriptor.PostLoadCallback();\par
00185                     TagNode openingRoot = (TagNode)iload.LoadObject();\par
00186                     {\cf18 bool} actualValue = TagGlobals.autoRename;\par
00187                     TagGlobals.autoRename = {\cf17 false};\par
00188                     openingRoot.ReParent({\cf17 true});\par
00189                     TagGlobals.autoRename = actualValue;\par
00190                     TagGlobals.mergedRoot = openingRoot;\par
00191                     iload.RegisterPostLoadCallback(cb);\par
00192                     {\cf19 return} IOResult.Ok;\par
00193                 \}\par
00194             \}\par
00195         \}\par
00196         {\cf17 public} Descriptor _descriptor;\par
00197         {\cf17 public} TagCenter()\par
00198         \{\par
00199         \}\par
00200         {\cf17 public} TagCenter(Descriptor descriptor) \par
00201         \{ \par
00202             _descriptor = descriptor;\par
00203         \}\par
00204         {\cf17 public} System.ComponentModel.ISynchronizeInvoke Sync\par
00205         \{\par
00206             {\cf17 get};\par
00207             {\cf17 private} {\cf17 set};\par
00208         \}\par
00209         {\cf17 public} {\cf17 static} TagCenter Instance\par
00210         \{\par
00211             {\cf17 get};\par
00212             {\cf17 private} {\cf17 set};\par
00213         \}\par
00214         {\cf17 internal} {\cf18 bool} InitialLaunch\par
00215         \{\par
00216             {\cf17 get};\par
00217             {\cf17 set};\par
00218         \}\par
00219 \par
00220 \par
00228         {\cf17 private} {\cf17 static} Assembly CurrentDomain_AssemblyResolve({\cf18 object} sender, ResolveEventArgs args)\par
00229         \{\par
00230             {\cf19 if} (args.Name.Contains({\cf22 "Autodesk.Max.StateSetsDeploy"}))\par
00231             \{\par
00232                 {\cf19 return} Assembly.GetExecutingAssembly();\par
00233             \}\par
00234             {\cf19 return} {\cf17 null};\par
00235         \}\par
00236 \par
00237         {\cf17 public} {\cf18 void} Cleanup()\par
00238         \{\par
00239             AppDomain.CurrentDomain.AssemblyResolve -= {\cf17 new} ResolveEventHandler(TagCenter.CurrentDomain_AssemblyResolve);\par
00240         \}\par
00241 \par
00242         {\cf17 public} {\cf18 void} Initialize(IGlobal global, System.ComponentModel.ISynchronizeInvoke sync)\par
00243         \{\par
00244             {\cf19 if} ({\cf17 null} == System.Windows.Application.Current)\par
00245             \{\par
00246                 {\cf17 new} System.Windows.Application();\par
00247             \}\par
00248             TagCenter.Instance = {\cf17 this};\par
00249             this.Sync = sync;\par
00250             fastPan = {\cf17 new} EntityPan();\par
00251             TagGlobals.tagCenter = {\cf17 this};\par
00252             TagGlobals.selectionChain = {\cf17 new} Stack<List<TagNode>>();\par
00253             InitializeTree();\par
00254             TagGlobals.addToSelection = {\cf17 false};\par
00255             AppDomain.CurrentDomain.AssemblyResolve += {\cf17 new} ResolveEventHandler(TagCenter.CurrentDomain_AssemblyResolve);\par
00256             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(MaxStartup)), {\cf17 null}, (SystemNotificationCode)80);\par
00257             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(SelChanged)), {\cf17 null}, SystemNotificationCode.SelectionsetChanged);\par
00258             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(NodeCreated)), {\cf17 null}, SystemNotificationCode.NodeCreated);\par
00259             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(PostNodeCloned)), {\cf17 null}, SystemNotificationCode.PostNodesCloned);\par
00260             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(SelChanged)), {\cf17 null}, SystemNotificationCode.NodeRenamed);\par
00261             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(NodeDeleted)), {\cf17 null}, SystemNotificationCode.ScenePreDeletedNode);\par
00262             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileReset)), {\cf17 null}, SystemNotificationCode.SystemPostReset);\par
00263             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileReset)), {\cf17 null}, SystemNotificationCode.SystemPostNew);\par
00264             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileSaving)), {\cf17 null}, SystemNotificationCode.FilePreSave);\par
00265             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileSaved)), {\cf17 null}, SystemNotificationCode.FilePostSave);\par
00266             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FilePreMerging)), {\cf17 null}, SystemNotificationCode.FilePreMerge);\par
00267             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileMerged)), {\cf17 null}, SystemNotificationCode.FilePostMerge);\par
00268             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(SceneAddedNode)), {\cf17 null}, SystemNotificationCode.SceneAddedNode);\par
00269             GlobalInterface.Instance.RegisterNotification(({\cf17 new} GlobalDelegates.Delegate5(FileReset)), {\cf17 null}, SystemNotificationCode.FilePreOpen);\par
00270             {\cf20 //GlobalInterface.Instance.RegisterNotification((new GlobalDelegates.Delegate5(ViewportChanged)), null, SystemNotificationCode.ViewportChange);}\par
00271         \}\par
00272         {\cf17 public} {\cf18 void} InitializeTree()\par
00273         \{\par
00274             TagGlobals.root = {\cf17 new} TagNode({\cf22 "Root"});\par
00275             TagNode firstchild = {\cf17 new} TagNode({\cf22 "Project"});\par
00276             TagGlobals.project = firstchild;\par
00277             TagGlobals.root.Children.Add(firstchild);\par
00278             \par
00279         \}\par
00280 \par
00286         {\cf17 private} {\cf18 void} MaxStartup(IntPtr obj, INotifyInfo param)\par
00287         \{\par
00288             GlobalInterface.Instance.UnRegisterNotification({\cf17 new} GlobalDelegates.Delegate5({\cf17 this}.MaxStartup), {\cf17 null});\par
00289         \}\par
00290         {\cf17 private} {\cf18 void} SelChanged(IntPtr obj, INotifyInfo param)\par
00291         \{\par
00292             fastPan.Selection = MaxPluginUtilities.Selection.ToSOC();\par
00293             {\cf19 if}(!TagGlobals.internalSelectionSwitch)\par
00294             \{\par
00295                 TagGlobals.selectionChain = {\cf17 new} Stack<List<TagNode>>();\par
00296             \}\par
00297             {\cf19 else} {\cf19 if}(TagGlobals.internalSelectionSwitch && TagGlobals.internalSelectionCounter==0)\par
00298             \{\par
00299                 TagGlobals.internalSelectionCounter = 1;\par
00300             \}\par
00301             {\cf19 else} {\cf19 if} (TagGlobals.internalSelectionSwitch && TagGlobals.internalSelectionCounter == 1)\par
00302             \{\par
00303                 TagGlobals.internalSelectionSwitch = !TagGlobals.internalSelectionSwitch;\par
00304                 TagGlobals.internalSelectionCounter = 0;\par
00305             \}\par
00306         \}\par
00307         {\cf17 private} {\cf18 void} PostNodeCloned(IntPtr obj, INotifyInfo param)\par
00308         \{\par
00309             SortableObservableCollection<uint> _originalNodes = ((param.CallParam as IPostNodesClonedParams).OriginalNodes).ToListNode().ToSOC();\par
00310             SortableObservableCollection<uint> _clonedNodes = ((param.CallParam as IPostNodesClonedParams).ClonedNodes).ToListNode().ToSOC();\par
00311             {\cf19 for}({\cf18 int} i = 0; i < _originalNodes.Count; i++)\par
00312             \{\par
00313                 uint _originalNodeID = _originalNodes[i];\par
00314                 uint _clonedNodeID = _clonedNodes[i];\par
00315                 SortableObservableCollection<TagNode> _tags = TagMethods.GetEntitiesContainingObjects(_originalNodeID);\par
00316                 {\cf19 foreach}(TagNode _tag {\cf19 in} _tags)\par
00317                 \{\par
00318                     _tag.Nodes.Add(_clonedNodeID);\par
00319                 \}\par
00320             \}\par
00321         \}\par
00322         {\cf17 private} {\cf18 void} NodeCreated(IntPtr obj, INotifyInfo param)\par
00323         \{\par
00324             {\cf19 if} (TagGlobals.autoCloneTag)\par
00325             \{\par
00326                 fastPan.Selection = MaxPluginUtilities.Selection.ToSOC();\par
00327                 IINode _node = param.CallParam as IINode;\par
00328             \}\par
00329         \}\par
00330         {\cf17 private} {\cf18 void} SceneAddedNode(IntPtr obj, INotifyInfo param)\par
00331         \{\par
00332             {\cf19 if} (TagGlobals.autoCloneTag)\par
00333             \{\par
00334                 IINode _node = param.CallParam as IINode;\par
00335             \}\par
00336         \}\par
00337         {\cf17 private} {\cf18 void} FileReset(IntPtr obj, INotifyInfo param)\par
00338         \{\par
00339             InitializeTree();\par
00340             fastPan.UpdateSource();\par
00341             {\cf19 if} (fastTag != {\cf17 null})\par
00342             \{\par
00343                 fastTag.CreateAutoCompleteSource();\par
00344             \}\par
00345         \}\par
00346         {\cf17 private} {\cf18 void} FileSaving(IntPtr obj, INotifyInfo param)\par
00347         \{\par
00348             var _nodes = (from node in TagGlobals.root.GetNodeList() from objet in node.Nodes group node.ID by objet).ToDictionary();\par
00349             {\cf19 foreach} (KeyValuePair<uint,List<Guid>> _nodeHandle {\cf19 in} _nodes)\par
00350             \{\par
00351                 IINode _node = MaxPluginUtilities.GetNodeByHandle(_nodeHandle.Key);\par
00352                 {\cf19 if} (_node != {\cf17 null})\par
00353                 \{\par
00354                     ObjectDataChunk odc = {\cf17 new} ObjectDataChunk(_nodeHandle.Value);\par
00355                     _node.AddAppDataChunk(TagGlobals.tagCenter._descriptor.ClassID, TagGlobals.tagCenter._descriptor.SuperClassID, 0, odc.ToByteArray());\par
00356                 \}\par
00357             \}\par
00358         \}\par
00359         {\cf17 private} {\cf18 void} FileSaved(IntPtr obj, INotifyInfo param)\par
00360         \{\par
00361             var _nodes = (from node in TagGlobals.root.GetNodeList() from objet in node.Nodes group node.ID by objet).ToDictionary();\par
00362             {\cf19 foreach} (KeyValuePair<uint, List<Guid>> _nodeHandle {\cf19 in} _nodes)\par
00363             \{\par
00364                 IINode _node = MaxPluginUtilities.GetNodeByHandle(_nodeHandle.Key);\par
00365                 {\cf19 if} (_node != {\cf17 null})\par
00366                 \{\par
00367                     _node.ClearAllAppData();\par
00368                 \}\par
00369             \}\par
00370         \}\par
00371         {\cf17 private} {\cf18 void} FilePreMerging(IntPtr obj, INotifyInfo param)\par
00372         \{ \par
00373             {\cf20 // if it is not an Xref}\par
00374             {\cf19 if} (param.CallParam != {\cf17 null})\par
00375             \{\par
00376                 var _nodes = (from node in TagGlobals.root.GetNodeList() from objet in node.Nodes group node.ID by objet).ToDictionary();\par
00377                 {\cf19 foreach} (KeyValuePair<uint, List<Guid>> _nodeHandle {\cf19 in} _nodes)\par
00378                 \{\par
00379                     IINode _node = MaxPluginUtilities.GetNodeByHandle(_nodeHandle.Key);\par
00380                     {\cf19 if} (_node != {\cf17 null})\par
00381                     \{\par
00382                         _node.ClearAllAppData();\par
00383                     \}\par
00384                 \}\par
00385                 TagGlobals.isMerging = {\cf17 true};\par
00386             \}\par
00387              \par
00388         \}\par
00389         {\cf17 private} {\cf18 void} FileMerged(IntPtr obj, INotifyInfo param)\par
00390         \{\par
00391             TagGlobals.isMerging = {\cf17 false};\par
00392         \}\par
00393         {\cf17 private} {\cf18 void} NodeDeleted(IntPtr obj, INotifyInfo param)\par
00394         \{\par
00395             IINode _node = param.CallParam as IINode;\par
00396             TagMethods.RemoveObjects(TagGlobals.root.GetNodeList(), {\cf17 new} List<uint>() \{ _node.Handle\});\par
00397         \}\par
00398 \par
00399         {\cf17 private} {\cf18 void} FilePreOpen(IntPtr obj, INotifyInfo param)\par
00400         \{\par
00401 \par
00402         \}\par
00403 \par
00404         {\cf17 public} {\cf18 void} CreateTagManagerWin()\par
00405         \{\par
00406             {\cf20 // Create a new managed window to contain the WPF control}\par
00407             System.Windows.Window dialog = {\cf17 new} System.Windows.Window();\par
00408 \par
00409             {\cf20 // Name the window}\par
00410             dialog.Title = {\cf22 "Entity Manager v1.1"};\par
00411 \par
00412             {\cf20 // Example of setup size and location}\par
00413             {\cf20 // ...}\par
00414             {\cf20 //dialog.SizeToContent = System.Windows.SizeToContent.WidthAndHeight;}\par
00415             dialog.Width = 220;\par
00416             dialog.Height = 650;\par
00417             dialog.WindowStartupLocation = System.Windows.WindowStartupLocation.CenterOwner;\par
00418             dialog.ResizeMode = System.Windows.ResizeMode.CanResizeWithGrip;\par
00419 \par
00420             {\cf20 // Assign the window's content to be the WPF control}\par
00421             dialog.Content = fastPan;\par
00422             dialog.ShowInTaskbar = {\cf17 false};\par
00423 \par
00424             {\cf20 // Create an interop helper}\par
00425             System.Windows.Interop.WindowInteropHelper windowHandle = {\cf17 new} System.Windows.Interop.WindowInteropHelper(dialog);\par
00426             {\cf20 // Assign the 3ds Max HWnd handle to the interop helper}\par
00427             windowHandle.Owner = ManagedServices.AppSDK.GetMaxHWND(); \par
00428             \par
00429             {\cf20 // Setup 3ds Max to handle the WPF dialog correctly}\par
00430             ManagedServices.AppSDK.ConfigureWindowForMax(dialog);\par
00431 \par
00432             TagGlobals.tagCenter.fastPan.UpdateSource();\par
00433 \par
00434             dialog.Loaded += dialog_Loaded;\par
00435             dialog.Closing += dialog_Closing;\par
00436             {\cf20 // Show the dialog box}\par
00437             dialog.Show();\par
00438         \}\par
00439 \par
00440         {\cf18 void} dialog_Loaded({\cf18 object} sender, System.Windows.RoutedEventArgs e)\par
00441         \{\par
00442             System.Windows.Window dialog = (System.Windows.Window)sender;\par
00443             {\cf18 string} path = MaxPluginUtilities.GetMaxDir(MaxDirectory.Plugcfg);\par
00444             {\cf19 if} (File.Exists(path + {\cf22 "\\\\Entities_ini.xml"}))\par
00445             \{\par
00446                 {\cf19 try}\par
00447                 \{\par
00448                     XElement documentBase = XElement.Load(path + {\cf22 "\\\\Entities_ini.xml"});\par
00449                     XElement documentSize = documentBase.Element({\cf22 "size"});\par
00450 \par
00451                     {\cf18 int} width = Int32.Parse(documentSize.Element({\cf22 "width"}).Value);\par
00452                     {\cf18 int} height = Int32.Parse(documentSize.Element({\cf22 "height"}).Value);\par
00453 \par
00454                     XElement documentPosition = documentBase.Element({\cf22 "position"});\par
00455                     {\cf18 int} X = Int32.Parse(documentPosition.Element({\cf22 "X"}).Value);\par
00456                     {\cf18 int} Y = Int32.Parse(documentPosition.Element({\cf22 "Y"}).Value);\par
00457 \par
00458                     dialog.Width = width;\par
00459                     dialog.Height = height;\par
00460                     dialog.Left = X;\par
00461                     dialog.Top = Y;\par
00462                 \}\par
00463                 {\cf19 catch} (System.Exception ex)\par
00464                 \{\par
00465                     {\cf19 throw} {\cf17 new} System.InvalidOperationException(ex.Message);\par
00466                 \}\par
00467             \}\par
00468             System.Windows.Interop.WindowInteropHelper windowHandle = {\cf17 new} System.Windows.Interop.WindowInteropHelper(dialog);\par
00469             WindowExtensions.HideMinimizeAndMaximizeButtons(windowHandle);\par
00470             WindowExtensions.RemoveIcon(windowHandle);\par
00471         \}\par
00472 \par
00473         {\cf20 // function to save window size and position before closing}\par
00474         {\cf17 private} {\cf18 void} dialog_Closing({\cf18 object} sender, System.ComponentModel.CancelEventArgs e)\par
00475         \{ \par
00476             System.Windows.Window dialog = (System.Windows.Window)sender;\par
00477             {\cf18 string} path = MaxPluginUtilities.GetMaxDir(MaxDirectory.Plugcfg);\par
00478             {\cf17 using} (XmlTextWriter writer = {\cf17 new} XmlTextWriter(path + {\cf22 "\\\\Entities_ini.xml"}, Encoding.UTF8))\par
00479             \{\par
00480                 writer.Formatting = Formatting.Indented;\par
00481                 writer.Indentation = 4;\par
00482                 writer.WriteStartDocument();\par
00483                 writer.WriteStartElement({\cf22 "display"}); {\cf20 // <-- Important root element}\par
00484                 writer.WriteStartElement({\cf22 "size"});\par
00485                 writer.WriteElementString({\cf22 "width"}, dialog.Width.ToString());\par
00486                 writer.WriteElementString({\cf22 "height"}, dialog.Height.ToString());\par
00487                 writer.WriteEndElement();\par
00488                 writer.WriteStartElement({\cf22 "position"});\par
00489                 writer.WriteElementString({\cf22 "X"}, dialog.Left.ToString());\par
00490                 writer.WriteElementString({\cf22 "Y"}, dialog.Top.ToString());\par
00491                 writer.WriteEndElement();\par
00492                 writer.WriteEndElement();              {\cf20 // <-- Closes it}\par
00493                 writer.WriteEndDocument();\par
00494             \}\par
00495             e.Cancel = {\cf17 false};\par
00496         \}\par
00497         {\cf17 public} {\cf18 void} CreateFastTagWin()\par
00498         \{\par
00499             {\cf20 // Create a new managed window to contain the WPF control}\par
00500             System.Windows.Window dialog = {\cf17 new} System.Windows.Window();\par
00501 \par
00502             {\cf20 // Name the window}\par
00503             dialog.Title = {\cf22 ""};\par
00504             dialog.Background = {\cf17 new} System.Windows.Media.SolidColorBrush(System.Windows.Media.Color.FromRgb(64, 64, 64));\par
00505             {\cf20 // Example of setup size and location}\par
00506             {\cf20 // ...}\par
00507             {\cf20 //dialog.SizeToContent = System.Windows.SizeToContent.WidthAndHeight;}\par
00508             dialog.Width = 320;\par
00509             dialog.Height = 30;\par
00510             dialog.WindowStyle = System.Windows.WindowStyle.None;\par
00511             dialog.WindowStartupLocation = System.Windows.WindowStartupLocation.CenterScreen;\par
00512             dialog.ResizeMode = System.Windows.ResizeMode.NoResize;\par
00513 \par
00514             {\cf20 // Assign the window's content to be the WPF control}\par
00515             fastTag = {\cf17 new} FastWPFTag();\par
00516             fastTag.actbFastBox.Focusable = {\cf17 true};\par
00517             \par
00518             fastTag.CreateAutoCompleteSource();\par
00519             fastTag.winParent = dialog;\par
00520             dialog.Content = fastTag;\par
00521             dialog.ShowInTaskbar = {\cf17 false};\par
00522 \par
00523             {\cf20 // Create an interop helper}\par
00524             System.Windows.Interop.WindowInteropHelper windowHandle = {\cf17 new} System.Windows.Interop.WindowInteropHelper(dialog);\par
00525             {\cf20 // Assign the 3ds Max HWnd handle to the interop helper}\par
00526             windowHandle.Owner = ManagedServices.AppSDK.GetMaxHWND();\par
00527 \par
00528             {\cf20 // Setup 3ds Max to handle the WPF dialog correctly}\par
00529             ManagedServices.AppSDK.ConfigureWindowForMax(dialog);\par
00530 \par
00531             {\cf20 // Show the dialog box}\par
00532             dialog.Show();\par
00533             System.Windows.Input.FocusManager.SetFocusedElement(dialog, fastTag.actbFastBox);\par
00534             var result = System.Windows.Input.Keyboard.Focus(fastTag.actbFastBox);\par
00535             fastTag.actbFastBox.Focus();\par
00536 \par
00537         \}\par
00538 \par
00539         {\cf17 public} {\cf17 override} RefResult NotifyRefChanged(IInterval changeInt, IReferenceTarget hTarget, ref UIntPtr partID, RefMessage message, {\cf18 bool} propagate)\par
00540         \{\par
00541             {\cf19 return} RefResult.Succeed;\par
00542         \}\par
00543     \}\par
00544 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagCenterAction.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Windows.Forms;\par
00003 {\cf17 using }UiViewModels.Actions;\par
00004 \par
00005 {\cf17 namespace }TagManager.Actions\par
00006 \{\par
00007     {\cf17 public} {\cf17 class }OpenClose : CuiActionCommandAdapter\par
00008     \{\par
00009         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00010         \{\par
00011             {\cf17 get}\par
00012             \{\par
00013                 {\cf19 return} {\cf22 "TagManager"};\par
00014             \}\par
00015         \}\par
00016         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00017         \{\par
00018             {\cf17 get}\par
00019             \{\par
00020                 {\cf19 return} {\cf22 "Robin plugins"};\par
00021             \}\par
00022         \}\par
00023         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00024         \{\par
00025             {\cf17 get}\par
00026             \{\par
00027                 {\cf19 return} this.ActionText;\par
00028             \}\par
00029         \}\par
00030         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00031         \{\par
00032             {\cf17 get}\par
00033             \{\par
00034                 {\cf19 return} this.Category;\par
00035             \}\par
00036         \}\par
00037         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00038         \{\par
00039             {\cf19 try}\par
00040             \{\par
00041                 TagCenter.Instance.CreateTagManagerWin();\par
00042             \}\par
00043             {\cf19 catch} (Exception ex)\par
00044             \{\par
00045                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00046             \}\par
00047         \}\par
00048     \}\par
00049     {\cf17 public} {\cf17 class }FastTag : CuiActionCommandAdapter\par
00050     \{\par
00051         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00052         \{\par
00053             {\cf17 get}\par
00054             \{\par
00055                 {\cf19 return} {\cf22 "FastTag"};\par
00056             \}\par
00057         \}\par
00058         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00059         \{\par
00060             {\cf17 get}\par
00061             \{\par
00062                 {\cf19 return} {\cf22 "Robin plugins"};\par
00063             \}\par
00064         \}\par
00065         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00066         \{\par
00067             {\cf17 get}\par
00068             \{\par
00069                 {\cf19 return} this.ActionText;\par
00070             \}\par
00071         \}\par
00072         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00073         \{\par
00074             {\cf17 get}\par
00075             \{\par
00076                 {\cf19 return} this.Category;\par
00077             \}\par
00078         \}\par
00079         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00080         \{\par
00081             {\cf19 try}\par
00082             \{\par
00083                 TagCenter.Instance.CreateFastTagWin();\par
00084             \}\par
00085             {\cf19 catch} (Exception ex)\par
00086             \{\par
00087                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00088             \}\par
00089         \}\par
00090     \}\par
00091     {\cf17 public} {\cf17 class }ContainingEntity : CuiActionCommandAdapter\par
00092     \{\par
00093         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00094         \{\par
00095             {\cf17 get}\par
00096             \{\par
00097                 {\cf19 return} {\cf22 "Containing Entity"};\par
00098             \}\par
00099         \}\par
00100         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00101         \{\par
00102             {\cf17 get}\par
00103             \{\par
00104                 {\cf19 return} {\cf22 "Robin plugins"};\par
00105             \}\par
00106         \}\par
00107         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00108         \{\par
00109             {\cf17 get}\par
00110             \{\par
00111                 {\cf19 return} this.ActionText;\par
00112             \}\par
00113         \}\par
00114         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00115         \{\par
00116             {\cf17 get}\par
00117             \{\par
00118                 {\cf19 return} this.Category;\par
00119             \}\par
00120         \}\par
00121         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00122         \{\par
00123             {\cf19 try}\par
00124             \{\par
00125                 TagMethods.SelectEntityHoldingObject();\par
00126             \}\par
00127             {\cf19 catch} (Exception ex)\par
00128             \{\par
00129                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00130             \}\par
00131         \}\par
00132     \}\par
00133     {\cf17 public} {\cf17 class }ContainingEntityGrow : CuiActionCommandAdapter\par
00134     \{\par
00135         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00136         \{\par
00137             {\cf17 get}\par
00138             \{\par
00139                 {\cf19 return} {\cf22 "Containing Entity Grow"};\par
00140             \}\par
00141         \}\par
00142         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00143         \{\par
00144             {\cf17 get}\par
00145             \{\par
00146                 {\cf19 return} {\cf22 "Robin plugins"};\par
00147             \}\par
00148         \}\par
00149         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00150         \{\par
00151             {\cf17 get}\par
00152             \{\par
00153                 {\cf19 return} this.ActionText;\par
00154             \}\par
00155         \}\par
00156         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00157         \{\par
00158             {\cf17 get}\par
00159             \{\par
00160                 {\cf19 return} this.Category;\par
00161             \}\par
00162         \}\par
00163         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00164         \{\par
00165             {\cf19 try}\par
00166             \{\par
00167                 TagMethods.GrowEntity();\par
00168             \}\par
00169             {\cf19 catch} (Exception ex)\par
00170             \{\par
00171                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00172             \}\par
00173         \}\par
00174     \}\par
00175     {\cf17 public} {\cf17 class }ContainingEntityShrink : CuiActionCommandAdapter\par
00176     \{\par
00177         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00178         \{\par
00179             {\cf17 get}\par
00180             \{\par
00181                 {\cf19 return} {\cf22 "Containing Entity Shrink"};\par
00182             \}\par
00183         \}\par
00184         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00185         \{\par
00186             {\cf17 get}\par
00187             \{\par
00188                 {\cf19 return} {\cf22 "Robin plugins"};\par
00189             \}\par
00190         \}\par
00191         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00192         \{\par
00193             {\cf17 get}\par
00194             \{\par
00195                 {\cf19 return} this.ActionText;\par
00196             \}\par
00197         \}\par
00198         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00199         \{\par
00200             {\cf17 get}\par
00201             \{\par
00202                 {\cf19 return} this.Category;\par
00203             \}\par
00204         \}\par
00205         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00206         \{\par
00207             {\cf19 try}\par
00208             \{\par
00209                 TagMethods.ShrinkEntity();\par
00210             \}\par
00211             {\cf19 catch} (Exception ex)\par
00212             \{\par
00213                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00214             \}\par
00215         \}\par
00216     \}\par
00217     {\cf17 public} {\cf17 class }RemoveObjectsFromEntities : CuiActionCommandAdapter\par
00218     \{\par
00219         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00220         \{\par
00221             {\cf17 get}\par
00222             \{\par
00223                 {\cf19 return} {\cf22 "Remove objects from entities"};\par
00224             \}\par
00225         \}\par
00226         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00227         \{\par
00228             {\cf17 get}\par
00229             \{\par
00230                 {\cf19 return} {\cf22 "Robin plugins"};\par
00231             \}\par
00232         \}\par
00233         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00234         \{\par
00235             {\cf17 get}\par
00236             \{\par
00237                 {\cf19 return} this.ActionText;\par
00238             \}\par
00239         \}\par
00240         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00241         \{\par
00242             {\cf17 get}\par
00243             \{\par
00244                 {\cf19 return} this.Category;\par
00245             \}\par
00246         \}\par
00247         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00248         \{\par
00249             {\cf19 try}\par
00250             \{\par
00251                 TagMethods.RemoveObjectsFromEntities();\par
00252             \}\par
00253             {\cf19 catch} (Exception ex)\par
00254             \{\par
00255                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00256             \}\par
00257         \}\par
00258     \}\par
00259     {\cf17 public} {\cf17 class }ToggleAutoCloneTag : CuiActionCommandAdapter\par
00260     \{\par
00261         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00262         \{\par
00263             {\cf17 get}\par
00264             \{\par
00265                 {\cf19 return} {\cf22 "Toggle AutoClone Tag"};\par
00266             \}\par
00267         \}\par
00268         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00269         \{\par
00270             {\cf17 get}\par
00271             \{\par
00272                 {\cf19 return} {\cf22 "Robin plugins"};\par
00273             \}\par
00274         \}\par
00275         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00276         \{\par
00277             {\cf17 get}\par
00278             \{\par
00279                 {\cf19 return} this.ActionText;\par
00280             \}\par
00281         \}\par
00282         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00283         \{\par
00284             {\cf17 get}\par
00285             \{\par
00286                 {\cf19 return} this.Category;\par
00287             \}\par
00288         \}\par
00289         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00290         \{\par
00291             {\cf19 try}\par
00292             \{\par
00293                 TagGlobals.autoCloneTag = !TagGlobals.autoCloneTag;\par
00294             \}\par
00295             {\cf19 catch} (Exception ex)\par
00296             \{\par
00297                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00298             \}\par
00299         \}\par
00300     \}\par
00301     {\cf17 public} {\cf17 class }CreateSelectionSet : CuiActionCommandAdapter\par
00302     \{\par
00303         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00304         \{\par
00305             {\cf17 get}\par
00306             \{\par
00307                 {\cf19 return} {\cf22 "To Selection Set"};\par
00308             \}\par
00309         \}\par
00310         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00311         \{\par
00312             {\cf17 get}\par
00313             \{\par
00314                 {\cf19 return} {\cf22 "Robin plugins"};\par
00315             \}\par
00316         \}\par
00317         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00318         \{\par
00319             {\cf17 get}\par
00320             \{\par
00321                 {\cf19 return} this.ActionText;\par
00322             \}\par
00323         \}\par
00324         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00325         \{\par
00326             {\cf17 get}\par
00327             \{\par
00328                 {\cf19 return} this.Category;\par
00329             \}\par
00330         \}\par
00331         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00332         \{\par
00333             {\cf19 try}\par
00334             \{\par
00335                 TagMethods.CreateSelectionSetFromEntities(TagGlobals.root, {\cf17 true});\par
00336             \}\par
00337             {\cf19 catch} (Exception ex)\par
00338             \{\par
00339                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00340             \}\par
00341         \}\par
00342     \}\par
00343     {\cf17 public} {\cf17 class }ApplyEntityFromLayer : CuiActionCommandAdapter\par
00344     \{\par
00345         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00346         \{\par
00347             {\cf17 get}\par
00348             \{\par
00349                 {\cf19 return} {\cf22 "Entity from layer"};\par
00350             \}\par
00351         \}\par
00352         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00353         \{\par
00354             {\cf17 get}\par
00355             \{\par
00356                 {\cf19 return} {\cf22 "Robin plugins"};\par
00357             \}\par
00358         \}\par
00359         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00360         \{\par
00361             {\cf17 get}\par
00362             \{\par
00363                 {\cf19 return} this.ActionText;\par
00364             \}\par
00365         \}\par
00366         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00367         \{\par
00368             {\cf17 get}\par
00369             \{\par
00370                 {\cf19 return} this.Category;\par
00371             \}\par
00372         \}\par
00373         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00374         \{\par
00375             {\cf19 try}\par
00376             \{\par
00377                 TagMethods.ApplyEntityFromLayer();\par
00378             \}\par
00379             {\cf19 catch} (Exception ex)\par
00380             \{\par
00381                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00382             \}\par
00383         \}\par
00384     \}\par
00385 \par
00386     {\cf17 public} {\cf17 class }ApplyLastEntity : CuiActionCommandAdapter\par
00387     \{\par
00388         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00389         \{\par
00390             {\cf17 get}\par
00391             \{\par
00392                 {\cf19 return} {\cf22 "Apply the last Entity"};\par
00393             \}\par
00394         \}\par
00395         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00396         \{\par
00397             {\cf17 get}\par
00398             \{\par
00399                 {\cf19 return} {\cf22 "Robin plugins"};\par
00400             \}\par
00401         \}\par
00402         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00403         \{\par
00404             {\cf17 get}\par
00405             \{\par
00406                 {\cf19 return} this.ActionText;\par
00407             \}\par
00408         \}\par
00409         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00410         \{\par
00411             {\cf17 get}\par
00412             \{\par
00413                 {\cf19 return} this.Category;\par
00414             \}\par
00415         \}\par
00416         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00417         \{\par
00418             {\cf19 try}\par
00419             \{\par
00420                 TagMethods.ApplyLastEntity();\par
00421             \}\par
00422             {\cf19 catch} (Exception ex)\par
00423             \{\par
00424                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00425             \}\par
00426         \}\par
00427     \}\par
00428 \par
00429     {\cf17 public} {\cf17 class }CopyEntity : CuiActionCommandAdapter\par
00430     \{\par
00431         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00432         \{\par
00433             {\cf17 get}\par
00434             \{\par
00435                 {\cf19 return} {\cf22 "Get the selected Object Entities"};\par
00436             \}\par
00437         \}\par
00438         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00439         \{\par
00440             {\cf17 get}\par
00441             \{\par
00442                 {\cf19 return} {\cf22 "Robin plugins"};\par
00443             \}\par
00444         \}\par
00445         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00446         \{\par
00447             {\cf17 get}\par
00448             \{\par
00449                 {\cf19 return} this.ActionText;\par
00450             \}\par
00451         \}\par
00452         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00453         \{\par
00454             {\cf17 get}\par
00455             \{\par
00456                 {\cf19 return} this.Category;\par
00457             \}\par
00458         \}\par
00459         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00460         \{\par
00461             {\cf19 try}\par
00462             \{\par
00463                 TagMethods.CopyEntities();\par
00464             \}\par
00465             {\cf19 catch} (Exception ex)\par
00466             \{\par
00467                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00468             \}\par
00469         \}\par
00470     \}\par
00471     {\cf17 public} {\cf17 class }ToggleAutoRename : CuiActionCommandAdapter\par
00472     \{\par
00473         {\cf17 public} {\cf17 override} {\cf18 string} ActionText\par
00474         \{\par
00475             {\cf17 get}\par
00476             \{\par
00477                 {\cf19 return} {\cf22 "Toggle AutoRename"};\par
00478             \}\par
00479         \}\par
00480         {\cf17 public} {\cf17 override} {\cf18 string} Category\par
00481         \{\par
00482             {\cf17 get}\par
00483             \{\par
00484                 {\cf19 return} {\cf22 "Robin plugins"};\par
00485             \}\par
00486         \}\par
00487         {\cf17 public} {\cf17 override} {\cf18 string} InternalActionText\par
00488         \{\par
00489             {\cf17 get}\par
00490             \{\par
00491                 {\cf19 return} this.ActionText;\par
00492             \}\par
00493         \}\par
00494         {\cf17 public} {\cf17 override} {\cf18 string} InternalCategory\par
00495         \{\par
00496             {\cf17 get}\par
00497             \{\par
00498                 {\cf19 return} this.Category;\par
00499             \}\par
00500         \}\par
00501         {\cf17 public} {\cf17 override} {\cf18 void} Execute({\cf18 object} parameter)\par
00502         \{\par
00503             {\cf19 try}\par
00504             \{\par
00505                 TagGlobals.autoRename = !TagGlobals.autoRename;\par
00506                 {\cf18 string} _s = {\cf22 "AutoRename is "} + TagGlobals.autoRename.ToString();\par
00507                 MaxPluginUtilities.Interface.DisplayTempPrompt(_s, 5000);\par
00508             \}\par
00509             {\cf19 catch} (Exception ex)\par
00510             \{\par
00511                 MessageBox.Show(ex.ToString(), {\cf22 "error"});\par
00512             \}\par
00513         \}\par
00514     \}\par
00515 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagGlobals.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 \par
00007 {\cf17 namespace }TagManager\par
00008 \{\par
00009     {\cf17 public} {\cf17 static} {\cf17 class }TagGlobals\par
00010     \{\par
00011         {\cf17 public} {\cf17 static} TagCenter tagCenter;\par
00012         {\cf17 public} {\cf17 static} TagNode root;\par
00013         {\cf17 public} {\cf17 static} TagNode project;\par
00014         {\cf17 public} {\cf17 static} TagNode mergedRoot;\par
00015         {\cf17 public} {\cf17 static} {\cf18 bool} autoCloneTag = {\cf17 true};\par
00016         {\cf17 public} {\cf17 static} {\cf18 bool} internalSelectionSwitch = {\cf17 false};\par
00017         {\cf17 public} {\cf17 static} {\cf18 int} internalSelectionCounter = 0;\par
00018         {\cf17 public} {\cf17 static} {\cf18 bool} isMerging = {\cf17 false};\par
00019         {\cf17 public} {\cf17 static} {\cf18 string} delimiter = {\cf22 "_"};\par
00020         {\cf17 public} {\cf17 static} {\cf18 bool} addToSelection = {\cf17 false};\par
00021         {\cf17 public} {\cf17 static} {\cf18 bool} autoRename = {\cf17 true};\par
00022         {\cf17 public} {\cf17 static} {\cf18 bool} childrenAutoSelect = {\cf17 false};\par
00023         {\cf17 public} {\cf17 static} List<string> baseNames = {\cf17 new} List<string>() \{ {\cf22 "Root"}, {\cf22 "Project"} \};\par
00024         {\cf17 public} {\cf17 static} Stack<List<TagNode>> selectionChain;\par
00025         {\cf17 public} {\cf17 static} {\cf18 bool} displayEntities = {\cf17 false};\par
00026         {\cf17 public} {\cf17 static} {\cf18 bool} autoLayer = {\cf17 true};\par
00027         {\cf17 public} {\cf17 static} {\cf18 int} autoLayerDepth = 0;\par
00028         {\cf17 public} {\cf17 static} List<TagNode> lastUsedNode;\par
00029     \}\par
00030 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagHelperMethods.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 \par
00007 {\cf17 namespace }TagManager\par
00008 \{\par
00009     {\cf17 public} {\cf17 static} {\cf17 class }TagHelperMethods\par
00010     \{\par
00011         {\cf17 public} {\cf17 static} List<string> EntityNamesFromBranch({\cf18 string} _branchName)\par
00012         \{\par
00013             List<string> _result = _branchName.Split({\cf17 new} {\cf18 char}[] \{ {\cf23 '_'} \}).ToList();\par
00014             {\cf19 return} _result;\par
00015         \}\par
00016         {\cf17 public} {\cf17 static} {\cf18 string} ConcateneNameFromElements(IEnumerable<string> _branchElements)\par
00017         \{\par
00018             {\cf18 string} result = {\cf22 ""};\par
00019             {\cf19 foreach} ({\cf18 string} _element {\cf19 in} _branchElements)\par
00020             \{\par
00021                 \par
00022                 {\cf19 if} (result != {\cf22 ""})\par
00023                 \{\par
00024                     result += TagGlobals.delimiter;\par
00025                 \}\par
00026                 result += _element;\par
00027             \}\par
00028             {\cf19 return} result;\par
00029         \}\par
00030         {\cf17 public} {\cf17 static} {\cf18 int} GetEntityDepth({\cf17 this} TagNode _entity)\par
00031         \{\par
00032             {\cf18 int} i = 0;\par
00033             {\cf19 while} (_entity.Parent != {\cf17 null})\par
00034             \{\par
00035                 i++;\par
00036                 _entity = _entity.Parent;\par
00037             \}\par
00038             {\cf19 return} i;\par
00039         \}\par
00040         {\cf17 public} {\cf17 static} List<uint> GetBranchObjects(TagNode _entity)\par
00041         \{\par
00042             List<TagNode> _entities = _entity.GetNodeList();\par
00043             List <uint> sel = _entities.SelectMany(x => x.Nodes).ToList<uint>();\par
00044             {\cf19 return} sel;\par
00045         \}\par
00046         {\cf17 public} {\cf17 static} List<TagNode> FindLeavesEntities(TagNode _root)\par
00047         \{\par
00048             List<TagNode> allEntities = _root.GetNodeList();\par
00049             List<TagNode> _leavesEntites = allEntities.Where(x => x.Parent == {\cf17 null}).ToList();\par
00050             {\cf19 return} _leavesEntites;\par
00051         \}\par
00052         {\cf17 public} {\cf17 static} {\cf18 int} CompareBranches(List<TagNode> _toCompare, List<TagNode> _possibility)\par
00053         \{\par
00054             {\cf18 int} _shortestBranchCount = _toCompare.Count < _possibility.Count ? _possibility.Count : _toCompare.Count;\par
00055             {\cf18 int} _identical = 0;\par
00056             {\cf19 for} ({\cf18 int} i = 0; i < _shortestBranchCount; i++)\par
00057             \{\par
00058                 {\cf19 if} (_toCompare[i] == _possibility[i])\par
00059                 \{\par
00060                     _identical = i;\par
00061                 \}\par
00062             \}\par
00063             {\cf19 return} _identical;\par
00064         \}\par
00065         {\cf17 public} {\cf17 static} IEnumerable<string> GetAllBranchNames()\par
00066         \{\par
00067             TagNode projectEntity = TagGlobals.root.GetNodeList().First(x => x.Name == {\cf22 "Project"});\par
00068             List<TagNode> nodesList = projectEntity.Children.ToList().GetNodeList();\par
00069             {\cf19 return} nodesList.Select(x=> x.LongName);\par
00070         \}\par
00071         {\cf17 public} {\cf17 static} TagNode RetrieveEntityFromTag({\cf18 string} _tag)\par
00072         \{\par
00073             List<TagNode> nodeList = TagGlobals.root.GetNodeList().Where(x=> !TagGlobals.baseNames.Contains(x.Name)).ToList();\par
00074             {\cf19 return} nodeList.Where(x=> x.LongName== _tag).FirstOrDefault();\par
00075         \}\par
00076         {\cf17 public} {\cf17 static} List<TagNode> RetrieveEntitiesContainsTag({\cf18 string} _tag)\par
00077         \{\par
00078             TagNode projectEntity = TagGlobals.root.GetNodeList().First(x => x.Name == {\cf22 "Project"});\par
00079             List<TagNode> nodesList = projectEntity.Children.ToList().GetNodeList();\par
00080             List<TagNode> result = nodesList.Where(x => x.Name.Contains(_tag)).ToList();\par
00081             {\cf19 return} result;\par
00082         \}\par
00083         {\cf17 public} {\cf17 static} TagNode GetLonguestMatchingTag({\cf18 string} _tag, {\cf18 bool} _appendMissingTags, {\cf18 bool}? _nameable)\par
00084         \{\par
00085             List<string> tagElements = EntityNamesFromBranch(_tag);\par
00086             Queue<string> queuedElements = {\cf17 new} Queue<string>(tagElements);\par
00087             List<string> matchingList = {\cf17 new} List<string>();\par
00088             TagNode matchingEntity = {\cf17 null};\par
00089             {\cf18 bool} unexisting = {\cf17 false};\par
00090             {\cf19 while} (queuedElements.Count > 0 && unexisting=={\cf17 false})\par
00091             \{\par
00092                 matchingList.Add(queuedElements.Peek());\par
00093                 {\cf18 string} tagToCheck = ConcateneNameFromElements(matchingList);\par
00094                 TagNode retrievedEntity = RetrieveEntityFromTag(tagToCheck);\par
00095                 {\cf19 if} (retrievedEntity != {\cf17 null})\par
00096                 \{\par
00097                     matchingEntity = retrievedEntity;\par
00098                     queuedElements.Dequeue();\par
00099                 \}\par
00100                 {\cf19 else}\par
00101                 \{\par
00102                     unexisting = {\cf17 true};\par
00103                 \}\par
00104             \}\par
00105             {\cf19 if} (matchingEntity == {\cf17 null})\par
00106             \{\par
00107                 matchingEntity = TagGlobals.root.GetNodeList().First(x => x.Name == {\cf22 "Project"});\par
00108             \}\par
00109             {\cf19 if} (_appendMissingTags)\par
00110             \{\par
00111                 {\cf19 while} (queuedElements.Count > 0)\par
00112                 \{\par
00113                     TagNode _newlyCreated;\par
00114                     {\cf19 if} (_nameable != {\cf17 null})\par
00115                     \{\par
00116                         {\cf18 bool} _nameableNN = _nameable ?? {\cf19 default}({\cf18 bool});\par
00117                         _newlyCreated = {\cf17 new} TagNode(queuedElements.Dequeue(), _nameableNN);\par
00118                     \}\par
00119                     {\cf19 else}\par
00120                     \{\par
00121                         _newlyCreated = {\cf17 new} TagNode(queuedElements.Dequeue(), matchingEntity.IsNameable);\par
00122                     \}\par
00123                     matchingEntity.Children.Add(_newlyCreated);\par
00124                     matchingEntity.Children.Sort(x => x.Name);\par
00125                     matchingEntity = _newlyCreated;\par
00126                 \}\par
00127             \}\par
00128             \par
00129             TagGlobals.tagCenter.fastPan.SortSource();\par
00130 \par
00131             {\cf19 return} matchingEntity;\par
00132         \}\par
00133         {\cf17 public} {\cf17 static} EntityVisibility GetEntityVisibility({\cf17 this} TagNode _tagNode)\par
00134         \{\par
00135             List<bool> nodesHidden = _tagNode.Nodes.Select(x => MaxPluginUtilities.GetNodeHidden(x)).ToList();\par
00136             List<bool> entityHidden = nodesHidden.Distinct().ToList();\par
00137             {\cf19 if} (entityHidden.Count < 2)\par
00138             \{\par
00139                 {\cf19 return} entityHidden[0] == {\cf17 true} ? EntityVisibility.Hidden : EntityVisibility.Vsible;\par
00140             \}\par
00141             {\cf19 else}\par
00142             \{\par
00143                 {\cf19 return} EntityVisibility.Mixed;\par
00144             \}\par
00145         \}\par
00146         {\cf17 public} {\cf17 static} {\cf18 void} MergeEntities(TagNode _toMerge, TagNode _target)\par
00147         \{\par
00148             {\cf19 if} (_toMerge != _target && _toMerge.Name == _target.Name)\par
00149             \{\par
00150                 _target.Nodes.AddRange(_toMerge.Nodes);\par
00151                 {\cf19 if} (_target.IsNameable)\par
00152                 \{\par
00153                     {\cf19 foreach} (uint _nodeHandle {\cf19 in} _toMerge.Nodes)\par
00154                     \{\par
00155                         Autodesk.Max.IINode _object = MaxPluginUtilities.GetNodeByHandle(_nodeHandle);\par
00156                         _object.RenameNode(_target.LongName);\par
00157                     \}\par
00158                 \}\par
00159                 List<List<TagNode>> _matchToMerge = {\cf17 new} List<List<TagNode>>();\par
00160                 {\cf19 foreach} (TagNode _potentialMerge {\cf19 in} _toMerge.Children)\par
00161                 \{\par
00162                     TagNode _potentialTarget = _target.Children.Where(x => x.Name == _potentialMerge.Name).FirstOrDefault();\par
00163                     {\cf19 if} (_potentialTarget != {\cf17 null})\par
00164                     \{\par
00165                         _matchToMerge.Add({\cf17 new} List<TagNode>() \{ _potentialMerge, _potentialTarget \});\par
00166                         \par
00167                     \}\par
00168                 \}\par
00169                 {\cf20 // needed to be able to delete nodes children without disturbing the loop}\par
00170                 {\cf19 foreach} (List<TagNode> _match {\cf19 in} _matchToMerge)\par
00171                 \{\par
00172                     MergeEntities(_match[0], _match[1]);\par
00173                 \}\par
00174             \}\par
00175             {\cf19 if} (_toMerge.Children.Count > 0)\par
00176             \{\par
00177                 _target.Children.AddRange(_toMerge.Children);\par
00178             \}\par
00179             _toMerge.Parent.Children.Remove(_toMerge);\par
00180         \}\par
00181     \}\par
00182 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagMethods.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }Autodesk.Max;\par
00007 \par
00008 {\cf17 namespace }TagManager\par
00009 \{\par
00010 \par
00011     {\cf17 public} {\cf17 static} {\cf17 class }TagMethods\par
00012     \{\par
00013         {\cf17 public} {\cf17 static} {\cf18 void} ApplyEntityFromLayer()\par
00014         \{\par
00015             List<IINode> _nodes = MaxPluginUtilities.Selection;\par
00016             {\cf19 foreach}(IINode _node {\cf19 in} _nodes)\par
00017             \{\par
00018                 IILayer _layer = MaxPluginUtilities.GetObjectLayer(_node);\par
00019                 {\cf18 string} _longName = _layer.Name;\par
00020                 TagNode entity = TagHelperMethods.RetrieveEntityFromTag(_longName);\par
00021                 {\cf19 if} (entity == {\cf17 null})\par
00022                 \{\par
00023                     entity = TagHelperMethods.GetLonguestMatchingTag(_longName, {\cf17 true}, {\cf17 null});\par
00024                 \}\par
00025                 {\cf19 if} (!entity.IsShortcut)\par
00026                 \{\par
00027                     TagMethods.ApplyEntities({\cf17 new} List<TagNode>() \{ entity \}, {\cf17 new} List<uint> \{ _node.Handle \});\par
00028                     {\cf19 if} (TagGlobals.autoRename && entity.IsNameable)\par
00029                     \{\par
00030                         TagMethods.RenameUsingStructure();\par
00031                     \}\par
00032                 \}\par
00033             \}\par
00034         \}\par
00035 \par
00036         {\cf17 public} {\cf17 static} {\cf18 void} LayOutEntity(TagNode _entity)\par
00037         \{\par
00038             IILayer _layer;\par
00039             {\cf19 if}(TagGlobals.autoLayer)\par
00040             \{\par
00041                 _layer = MaxPluginUtilities.CreateLayerBranch(_entity);\par
00042             \}\par
00043             {\cf19 else}\par
00044             \{\par
00045                 _layer = MaxPluginUtilities.LayerManager.GetLayer(_entity.LongName);\par
00046             \}\par
00047             {\cf19 if} (_layer != {\cf17 null})\par
00048             \{\par
00049                 List<IINode> _nodes = _entity.Nodes.GetNodesByHandles();\par
00050 \par
00051                 {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00052                 \{\par
00053                     _layer.AddToLayer(_node);\par
00054                 \}\par
00055             \}\par
00056         \}\par
00057         {\cf17 public} {\cf17 static} {\cf18 void} LayOutObjects(TagNode _entity, List<uint> _objects)\par
00058         \{\par
00059             IILayer _layer;\par
00060             {\cf19 if} (TagGlobals.autoLayer)\par
00061             \{\par
00062                 _layer = MaxPluginUtilities.CreateLayerBranch(_entity);\par
00063             \}\par
00064             {\cf19 else}\par
00065             \{\par
00066                 _layer = MaxPluginUtilities.LayerManager.GetLayer(_entity.LongName);\par
00067             \}\par
00068             {\cf19 if} (_layer != {\cf17 null})\par
00069             \{\par
00070                 List<IINode> _nodes = _objects.GetNodesByHandles();\par
00071 \par
00072                 {\cf19 foreach} (IINode _node {\cf19 in} _nodes)\par
00073                 \{\par
00074                     _layer.AddToLayer(_node);\par
00075                 \}\par
00076             \}\par
00077         \}\par
00078         {\cf17 public} {\cf17 static} {\cf18 void} ApplyEntity(TagNode _node, List<uint> _objects)\par
00079         \{\par
00080             List<TagNode> _listEntities = {\cf17 new} List<TagNode>() \{ _node \};\par
00081             ApplyEntities(_listEntities, _objects);\par
00082         \}\par
00083         {\cf17 public} {\cf17 static} {\cf18 void} ApplyEntities(List<TagNode> _entities, List<uint> _objects)\par
00084         \{\par
00085             \par
00086             {\cf19 foreach} (TagNode _entity {\cf19 in} _entities)\par
00087             \{\par
00088                 {\cf20 // Check to make sure there is no double.}\par
00089                 _entity.Nodes.AddRange(_objects, {\cf17 true});\par
00090                 {\cf19 if}(TagGlobals.autoLayer)\par
00091                 \{\par
00092                     LayOutObjects(_entity, _objects);\par
00093                 \}\par
00094                 \par
00095             \}\par
00096             TagGlobals.lastUsedNode = _entities;\par
00097         \}\par
00098         {\cf17 public} {\cf17 static} {\cf18 void} SelectEntities(List<TagNode> _entities)\par
00099         \{\par
00100             TagGlobals.internalSelectionSwitch = {\cf17 true};\par
00101             List<uint> objectsToSelect = _entities.SelectMany(x => x.Nodes).ToList();\par
00102             MaxPluginUtilities.SetSelection(objectsToSelect);\par
00103         \}\par
00104         {\cf17 public} {\cf17 static} SortableObservableCollection<TagNode> GetEntitiesContainingObjects(uint _objectHandle)\par
00105         \{\par
00106             List<uint> objs = {\cf17 new} List<uint>();\par
00107             objs.Add(_objectHandle);\par
00108             {\cf19 return} GetEntitiesContainingObjects(objs);\par
00109         \}\par
00110         {\cf17 public} {\cf17 static} SortableObservableCollection<TagNode> GetEntitiesContainingObjects(List<uint> _objects)\par
00111         \{\par
00112             SortableObservableCollection<TagNode> nodes = {\cf17 new} SortableObservableCollection<TagNode>();\par
00113             nodes.AddRange(TagGlobals.root.GetNodeList().Where(x => x.Nodes.Intersect(_objects).ToList().Count>0));\par
00114             {\cf19 return} nodes;\par
00115         \}\par
00116         {\cf17 public} {\cf17 static} {\cf18 void} RemoveObjects(List<TagNode> _entities, List<uint> _objects)\par
00117         \{\par
00118             {\cf19 foreach} (TagNode _entity {\cf19 in} _entities)\par
00119             \{\par
00120                 _entity.Nodes.RemoveRange(_objects);\par
00121                 {\cf19 if} (TagGlobals.autoRename && _entity.IsNameable)\par
00122                 \{\par
00123                     RenameUsingStructure(_objects);\par
00124                 \}\par
00125             \}\par
00126         \}\par
00127         {\cf17 public} {\cf17 static} {\cf18 void} DeleteEntities(List<TagNode> _entities)\par
00128         \{\par
00129             List<uint> _objects = {\cf17 new} List<uint>();\par
00130             {\cf19 for} ({\cf18 int} i = 0; i < _entities.Count; i++)\par
00131             \{\par
00132                 _objects.AddRange(_entities[i].Nodes);\par
00133                 _entities[i].Parent.Children.Remove(_entities[i]);\par
00134                 {\cf19 if} (TagGlobals.autoRename)\par
00135                 \{\par
00136                     {\cf19 if} (_entities[i].IsNameable)\par
00137                     \{\par
00138                         RenameUsingStructure(_entities[i].Nodes.ToList());\par
00139                     \}\par
00140                 \}\par
00141             \}\par
00142             \par
00143         \}\par
00144         {\cf17 public} {\cf17 static} {\cf18 void} MergeEntities(TagNode _toMerge, TagNode _target)\par
00145         \{\par
00146             _toMerge.Nodes.AddRange(_target.Nodes);\par
00147             _target.Parent.Children.Remove(_target);\par
00148         \}\par
00149         {\cf17 public} {\cf17 static} {\cf18 void} RenameUsingStructure(List<uint> _objects)\par
00150         \{\par
00151             SortableObservableCollection<TagNode> entitiesContainingObjects = GetEntitiesContainingObjects(_objects);\par
00152 \par
00153             {\cf20 // !!!!!!! Retrieving The entities Of all the objects even if the particular object doesn't use the entity}\par
00154 \par
00155             SortableObservableCollection<TagNode> nameableEntitiesContainingObjects = entitiesContainingObjects.Where(x => x.IsNameable == {\cf17 true}).ToSortableObservableCollection();\par
00156             SortableObservableCollection<List<string>> branchesElementsNames = {\cf17 new} SortableObservableCollection<List<string>>();\par
00157             {\cf19 foreach} (TagNode _entity {\cf19 in} nameableEntitiesContainingObjects)\par
00158             \{\par
00159                 branchesElementsNames.Add(_entity.GetNodeBranchElementsNames({\cf17 true}));\par
00160             \}\par
00161             branchesElementsNames.Sort(x => x.Count);\par
00162             List<List<string>> _listBranchElements = branchesElementsNames.Reverse().ToList();\par
00163             {\cf18 string} _namePrefix = TagHelperMethods.ConcateneNameFromElements(_listBranchElements.SelectMany(x=> x).ToList());\par
00164             {\cf19 if} (_namePrefix != {\cf22 ""})\par
00165             \{\par
00166                 {\cf19 foreach} (uint _nodeHandle {\cf19 in} _objects)\par
00167                 \{\par
00168                     IINode _object = MaxPluginUtilities.GetNodeByHandle(_nodeHandle);\par
00169                     {\cf19 if} (_object.Name.Length > 4)\par
00170                     \{\par
00171                         {\cf18 string} _objectPrefix = _object.Name.Substring(0, _object.Name.Length - 4);\par
00172                         {\cf19 if} (_objectPrefix != _namePrefix)\par
00173                         \{\par
00174                             {\cf18 string} finalName = MaxPluginUtilities.MakeNameUnique(_namePrefix + TagGlobals.delimiter);\par
00175                             _object.Name = finalName;\par
00176                             _object.NotifyNameChanged();\par
00177                         \}\par
00178                     \}\par
00179                 \}\par
00180             \}\par
00181         \}\par
00182         {\cf17 public} {\cf17 static} {\cf18 void} RenameUsingStructure()\par
00183         \{\par
00184             RenameUsingStructure(MaxPluginUtilities.Selection.ToListHandles());\par
00185         \}\par
00186         {\cf17 public} {\cf17 static} {\cf18 void} SelectEntityHoldingObject()\par
00187         \{\par
00188             {\cf19 if} (TagGlobals.selectionChain.Count == 0)\par
00189             \{\par
00190                 SelectEntityHoldingObject(MaxPluginUtilities.Selection.ToListHandles());\par
00191             \}\par
00192             {\cf19 else}\par
00193             \{\par
00194                 GrowEntity();\par
00195             \}\par
00196         \}\par
00197         {\cf17 public} {\cf17 static} {\cf18 void} SelectEntityHoldingObject(List<uint> _nodeHandles)\par
00198         \{\par
00199             List<TagNode> _currentEntities = GetEntitiesContainingObjects(_nodeHandles).ToList();\par
00200             TagGlobals.selectionChain.Push(_currentEntities);\par
00201             SelectEntities(_currentEntities);\par
00202         \}\par
00203         {\cf17 public} {\cf17 static} {\cf18 void} SelectParentEntityHoldingObject()\par
00204         \{\par
00205             SelectParentEntityHoldingObject(MaxPluginUtilities.Selection.ToListHandles());\par
00206         \}\par
00207         {\cf17 public} {\cf17 static} {\cf18 void} SelectParentEntityHoldingObject(List<uint> _nodeHandles)\par
00208         \{\par
00209             List<TagNode> _parentNodeList = GetEntitiesContainingObjects(_nodeHandles).ToList().SelectMany(x => x.Parent.GetNodeList()).ToList();\par
00210             SelectEntities(_parentNodeList);\par
00211         \}\par
00212         {\cf17 public} {\cf17 static} {\cf18 void} GrowEntity()\par
00213         \{\par
00214             {\cf19 if} (TagGlobals.selectionChain.Count > 0)\par
00215             \{\par
00216                 List<TagNode> _currentEntities = TagGlobals.selectionChain.First();\par
00217                 List<TagNode> _parents = {\cf17 new} List<TagNode>();\par
00218                 {\cf19 foreach} (TagNode _node {\cf19 in} _currentEntities)\par
00219                 \{\par
00220                     {\cf19 if} (_node.IsNameable)\par
00221                     \{\par
00222                         {\cf19 if} (_node.Parent != {\cf17 null} && _node.Parent.IsNameable)\par
00223                         \{\par
00224                             _parents.Add(_node.Parent);\par
00225                             _parents.AddRange(_node.Parent.GetNodeList());\par
00226                         \}\par
00227                     \}\par
00228                 \}\par
00229                 _parents.AddRange(_currentEntities);\par
00230                 TagGlobals.selectionChain.Push(_parents.Distinct().ToList());\par
00231 \par
00232                 SelectEntities(TagGlobals.selectionChain.First());\par
00233             \}\par
00234         \}\par
00235         {\cf17 public} {\cf17 static} {\cf18 void} ShrinkEntity()\par
00236         \{\par
00237             {\cf19 if} (TagGlobals.selectionChain.Count>1)\par
00238             \{\par
00239                 List<TagNode> _toRemove = TagGlobals.selectionChain.Pop();\par
00240             \}\par
00241             SelectEntities(TagGlobals.selectionChain.First());\par
00242         \}\par
00243         {\cf17 public} {\cf17 static} {\cf18 void} RemoveObjectsFromEntities()\par
00244         \{\par
00245             List<TagNode> _currentEntities = GetEntitiesContainingObjects(MaxPluginUtilities.Selection.ToListHandles()).ToList();\par
00246             RemoveObjects(_currentEntities, MaxPluginUtilities.Selection.ToListHandles());\par
00247         \}\par
00248         {\cf17 public} {\cf17 static} {\cf18 void} CreateSelectionSetFromEntities(TagNode _node, {\cf18 bool} _children)\par
00249         \{\par
00250             List<TagNode> nodes = {\cf17 new} List<TagNode>();\par
00251             {\cf19 if} (_children == {\cf17 true})\par
00252             \{\par
00253                 nodes.AddRange(_node.GetNodeList());\par
00254             \}\par
00255             {\cf19 else}\par
00256             \{\par
00257                 nodes.Add(_node);\par
00258             \}\par
00259             CreateSelectionSetFromEntities(nodes);\par
00260         \}\par
00261 \par
00262         {\cf17 public} {\cf17 static} {\cf18 void} CreateSelectionSetFromEntities(List<TagNode> _nodes)\par
00263         \{\par
00264             Autodesk.Max.IINamedSelectionSetManager selSetManager = MaxPluginUtilities.Global.INamedSelectionSetManager.Instance;\par
00265             {\cf18 int} nbSelSet = selSetManager.NumNamedSelSets;\par
00266             SortedList<int, string> selSets = {\cf17 new} SortedList<int, string>();\par
00267             {\cf19 for} ({\cf18 int} i = 0; i < nbSelSet; i++)\par
00268             \{\par
00269                 {\cf20 //int sel_ObjectsCount = selSetManager.GetNamedSelSetItemCount(i);}\par
00270                 {\cf18 string} selSetName = selSetManager.GetNamedSelSetName(i);\par
00271                 selSets.Add(i, selSetName);\par
00272             \}\par
00273             \par
00274             {\cf19 foreach} (TagNode _node {\cf19 in} _nodes)\par
00275             \{\par
00276                 {\cf18 string} _nodeName = _node.LongName;\par
00277                 {\cf19 if}(selSets.ContainsValue(_nodeName))\par
00278                 \{\par
00279                     ITab<IINode> tabNode = TagHelperMethods.GetBranchObjects(_node).GetNodesByHandles().ToITab();\par
00280                     selSetManager.ReplaceNamedSelSet(tabNode, ref _nodeName);\par
00281                 \}\par
00282                 {\cf19 else}\par
00283                 \{\par
00284                     ITab<IINode> tabNode = TagHelperMethods.GetBranchObjects(_node).GetNodesByHandles().ToITab();\par
00285                     selSetManager.AddNewNamedSelSet(tabNode, ref _nodeName);\par
00286                 \}\par
00287             \}\par
00288         \}\par
00289 \par
00290         {\cf17 public} {\cf17 static} {\cf18 void} ApplyLastEntity()\par
00291         \{\par
00292             ApplyEntities(TagGlobals.lastUsedNode, MaxPluginUtilities.Selection.ToListHandles());\par
00293             {\cf19 if} (TagGlobals.autoRename)\par
00294             \{\par
00295                 RenameUsingStructure();\par
00296             \}\par
00297         \}\par
00298 \par
00299         {\cf17 public} {\cf17 static} {\cf18 void} CopyEntities()\par
00300         \{\par
00301             TagGlobals.lastUsedNode = GetEntitiesContainingObjects(MaxPluginUtilities.Selection.ToListHandles()).ToList();\par
00302             \par
00303         \}\par
00304 \par
00305         {\cf20 /*}\par
00306 {\cf20         public static void DisplayEntities()}\par
00307 {\cf20         \{}\par
00308 {\cf20             try}\par
00309 {\cf20             \{}\par
00310 {\cf20                 IViewExp view = MaxPluginUtilities.Interface.GetViewExp(0);}\par
00311 {\cf20                 IGraphicsWindow graphWindow = view.Gw;}\par
00312 {\cf20                 var res1 = view.IsActive;}\par
00313 {\cf20                 var res2 = view.IsAlive;}\par
00314 {\cf20                 var res3 = view.IsEnabled;}\par
00315 {\cf20                 var res4 = view.ViewType;}\par
00316 {\cf20                 foreach (IINode _node in MaxPluginUtilities.Selection)}\par
00317 {\cf20                 \{}\par
00318 {\cf20                     if(!_node.IsObjectHidden)}\par
00319 {\cf20                     \{}\par
00320 {\cf20                         List<string> _objectEntitiesName = GetEntitiesContainingObjects(_node.Handle).Select(x=> x.Name).ToList();}\par
00321 {\cf20                         IInterval interval = MaxPluginUtilities.Global.Interval.Create();}\par
00322 {\cf20                         interval.SetInfinite();}\par
00323 {\cf20                         IPoint3 pos = _node.GetNodeTM(0, interval).Trans;}\par
00324 {\cf20                         IBox3 wbb = _node.ObjectRef.GetWorldBoundBox(0, _node, view);}\par
00325 {\cf20                         IPoint3 wcenter = wbb.Max.Subtract(wbb.Min).DivideBy(2).Add(wbb.Min);}\par
00326 {\cf20                         graphWindow.Text(wcenter, "HERE");}\par
00327 {\cf20                         graphWindow.Transform = MaxPluginUtilities.Global.Matrix3.Identity;}\par
00328 {\cf20                         graphWindow.Text(wcenter, "HERE");}\par
00329 {\cf20                         }\par
00330 {\cf20                     \}}\par
00331 {\cf20                 \}}\par
00332 {\cf20                 graphWindow.ResetUpdateRect();}\par
00333 {\cf20                 graphWindow.UpdateScreen();}\par
00334 {\cf20             \}}\par
00335 {\cf20             catch}\par
00336 {\cf20             \{}\par
00337 {\cf20 }\par
00338 {\cf20             \}}\par
00339 {\cf20         \}}\par
00340 {\cf20         */}\par
00341     \}\par
00342 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagNode.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }Autodesk.Max;\par
00006 {\cf17 using }System.Runtime.Serialization;\par
00007 {\cf17 using }System.Runtime.Serialization.Formatters.Binary;\par
00008 {\cf17 using }System.IO;\par
00009 {\cf17 using }System.ComponentModel;\par
00010 {\cf17 using }System.Windows.Controls.DragNDrop;\par
00011 \par
00012 {\cf17 namespace }TagManager\par
00013 \{\par
00017     [Serializable]\par
00018     {\cf17 public} {\cf17 class }TagNode : DDNode<TagNode>, ISerializable, INotifyPropertyChanged\par
00019     \{\par
00020         {\cf17 private} Guid _ID;\par
00021 \par
00022         {\cf17 public} Guid ID\par
00023         \{\par
00024           {\cf17 get} \{ {\cf19 return} _ID; \}\par
00025           {\cf17 set} \{ _ID = value; \}\par
00026         \}\par
00027         {\cf17 private} {\cf18 bool} isInEditMode;\par
00028         {\cf17 public} {\cf18 bool} IsInEditMode\par
00029         \{\par
00030             {\cf17 get} \{ {\cf19 return} isInEditMode; \}\par
00031             {\cf17 set} \par
00032             \{ \par
00033                 isInEditMode = value;\par
00034                 NotifyPropertyChanged({\cf22 "Nodes"});\par
00035             \}\par
00036         \}\par
00037         {\cf17 private} SortableObservableCollection<uint> nodes;\par
00038         {\cf17 public} SortableObservableCollection<uint> Nodes\par
00039         \{\par
00040             {\cf17 get} \{ {\cf19 return} nodes; \}\par
00041             {\cf17 set} \{ nodes = value; \}\par
00042         \}\par
00043         {\cf17 private} EntityVisibility visible;\par
00044         {\cf17 public} EntityVisibility Visible\par
00045         \{\par
00046             {\cf17 get} \{ {\cf19 return} visible; \}\par
00047             {\cf17 set} \{ visible = value; \}\par
00048         \}\par
00049         {\cf17 private} {\cf18 bool} isNameable;\par
00050         {\cf17 public} {\cf18 bool} IsNameable\par
00051         \{\par
00052             {\cf17 get} \{ {\cf19 return} isNameable; \}\par
00053             {\cf17 set} \{ isNameable = value; \}\par
00054         \}\par
00055         {\cf17 private} {\cf18 bool} isShortcut;\par
00056         {\cf17 public} {\cf18 bool} IsShortcut\par
00057         \{\par
00058             {\cf17 get} \{ {\cf19 return} isShortcut; \}\par
00059             {\cf17 set} \{ isShortcut = value; \}\par
00060         \}\par
00061         {\cf17 private} ConsoleContainerElement shortcut;\par
00062         {\cf17 public} ConsoleContainerElement Shortcut\par
00063         \{\par
00064             {\cf17 get} \{ {\cf19 return} shortcut; \}\par
00065             {\cf17 set} \{ shortcut = value; \}\par
00066         \}\par
00067         {\cf17 public} System.Drawing.Color wireColor;\par
00068 \par
00069         {\cf17 public} TagNode()\par
00070         \{\par
00071         \}\par
00072         {\cf17 public} TagNode({\cf18 string} _label) : {\cf17 this}(Guid.NewGuid(), _label, {\cf17 new} List<uint>(), {\cf17 false}, {\cf17 new} ConsoleContainerElement())\par
00073         \{\par
00074         \}\par
00075         {\cf17 public} TagNode({\cf18 string} _label, {\cf18 bool} _nameable) : {\cf17 this}(Guid.NewGuid(), _label, {\cf17 new} List<uint>(), _nameable, {\cf17 false}, {\cf17 new} ConsoleContainerElement())\par
00076         \{\par
00077         \}\par
00078         {\cf17 public} TagNode({\cf18 string} _label, List<uint> _objects) : {\cf17 this}(Guid.NewGuid(), _label, _objects, {\cf17 false}, {\cf17 new} ConsoleContainerElement())\par
00079         \{\par
00080         \}\par
00081         {\cf17 public} TagNode({\cf18 string} _label, ConsoleContainerElement _shortcut) : {\cf17 this}(Guid.NewGuid(), _label, {\cf17 new} List<uint>(), {\cf17 false}, {\cf17 true}, _shortcut)\par
00082         \{\par
00083         \}\par
00084         {\cf17 public} TagNode(Guid _ID, {\cf18 string} _label, List<uint> _objects, {\cf18 bool} _isShortcut, ConsoleContainerElement _shortcut)\par
00085         \{\par
00086             {\cf19 if} (Parent != {\cf17 null})\par
00087             \{\par
00088                 Initialize(_ID, _label, _objects, Parent.IsNameable, _isShortcut, _shortcut);\par
00089             \}\par
00090             {\cf19 else}\par
00091             \{\par
00092                 Initialize(_ID, _label, _objects, {\cf17 true}, _isShortcut, _shortcut);\par
00093             \}\par
00094         \}\par
00095         {\cf17 public} TagNode(Guid _ID, {\cf18 string} _label, List<uint> _objects, {\cf18 bool} _isNameable, {\cf18 bool} _isShortcut, ConsoleContainerElement _shortcut)\par
00096         \{\par
00097             Initialize(_ID, _label, _objects, _isNameable, _isShortcut, _shortcut);\par
00098         \}\par
00099         {\cf17 private} {\cf18 void} Initialize(Guid _ID, {\cf18 string} _label, List<uint> _objects, {\cf18 bool} _isNameable, {\cf18 bool} _isShortcut, ConsoleContainerElement _shortcut)\par
00100         \{\par
00101             ID = _ID;\par
00102             Name = _label;\par
00103             Nodes = {\cf17 new} SortableObservableCollection<uint>();\par
00104             Nodes.CollectionChanged += Nodes_CollectionChanged;\par
00105             ChangedLongName += TagNode_ChangedLongName;\par
00106             Nodes.AddRange(_objects);\par
00107             IsInEditMode = {\cf17 false};\par
00108             IsNameable = _isNameable;\par
00109             IsShortcut = _isShortcut;\par
00110             Shortcut = _shortcut;\par
00111             AllowDrag = {\cf17 true};\par
00112             AllowDrop = {\cf17 true};\par
00113         \}\par
00114         {\cf17 public} {\cf18 void} Nodes_CollectionChanged({\cf18 object} sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)\par
00115         \{\par
00116             NotifyPropertyChanged({\cf22 "Nodes"});\par
00117         \}\par
00118         {\cf18 void} TagNode_ChangedLongName({\cf18 object} sender, EventArgs e)\par
00119         \{\par
00120             {\cf19 if} (TagGlobals.autoRename && IsNameable)\par
00121             \{\par
00122                 {\cf19 foreach} (uint _nodeHandle {\cf19 in} Nodes)\par
00123                 \{\par
00124                     Autodesk.Max.IINode _object = MaxPluginUtilities.GetNodeByHandle(_nodeHandle);\par
00125                     {\cf19 if} (_object != {\cf17 null})\par
00126                     \{\par
00127                         _object.RenameNode(LongName);\par
00128                     \}\par
00129                 \}\par
00130             \}\par
00131         \}\par
00132         {\cf17 public} {\cf17 override} {\cf18 void} OnDrop({\cf18 object} obj)\par
00133         \{\par
00134             DragContent content = obj as DragContent;\par
00135             {\cf19 if} (content != {\cf17 null})\par
00136             \{\par
00137                 {\cf19 foreach} (var item {\cf19 in} content.Items.Reverse())\par
00138                 \{\par
00139                     TagNode oldNode = (TagNode)item;\par
00140                     {\cf19 if} (!this.GetNodeBranch().Contains(oldNode))\par
00141                     \{\par
00142                         {\cf19 if} (oldNode != {\cf17 this} && oldNode.Name != {\cf17 this}.Name)\par
00143                         \{\par
00144                             oldNode.Parent.Children.Remove(oldNode);\par
00145                             Children.AddRange({\cf17 new} List<TagNode>() \{ oldNode \});\par
00146                         \}\par
00147                         {\cf19 if} (oldNode != {\cf17 this} && oldNode.Name == Name)\par
00148                         \{\par
00149                             TagHelperMethods.MergeEntities(oldNode, {\cf17 this});\par
00150                         \}\par
00151                     \}\par
00152                 \}\par
00153             \}\par
00154         \}\par
00155 \par
00156 {\cf21         #region Serialize     }\par
00157         {\cf17 protected} TagNode(SerializationInfo info, StreamingContext context)\par
00158         \{\par
00159             ID = (Guid)info.GetValue({\cf22 "ID"}, typeof(Guid));\par
00160             Name = (string)info.GetValue({\cf22 "Name"}, typeof({\cf18 string}));\par
00161             {\cf20 // there is two ways to do it either create a new Sortable collection and relink collection changed event or make a temporary collection and reset the existing one and add the temporary collection to the original one.}\par
00162             Children = (SortableObservableCollection<TagNode>)info.GetValue({\cf22 "Children"}, typeof(SortableObservableCollection<TagNode>));\par
00163             Children.CollectionChanged+= Children_CollectionChanged;\par
00164             Nodes = (SortableObservableCollection<uint>)info.GetValue({\cf22 "Nodes"}, typeof(SortableObservableCollection<uint>));\par
00165             Nodes.CollectionChanged += Nodes_CollectionChanged;\par
00166             ChangedLongName += TagNode_ChangedLongName;\par
00167             {\cf20 // sort of versioning control not really graceful}\par
00168             {\cf19 try}\par
00169             \{\par
00170                 IsNameable = (bool)info.GetValue({\cf22 "IsNameable"}, typeof({\cf18 bool}));\par
00171             \}\par
00172             {\cf19 catch}\par
00173             \{\par
00174                 IsNameable = {\cf17 true};\par
00175             \}\par
00176             IsShortcut = (bool)info.GetValue({\cf22 "IsShortcut"}, typeof({\cf18 bool}));\par
00177             Shortcut = (ConsoleContainerElement)info.GetValue({\cf22 "Shortcut"}, typeof(ConsoleContainerElement));\par
00178             wireColor = (System.Drawing.Color)info.GetValue({\cf22 "wireColor"}, typeof(System.Drawing.Color));\par
00179             IsInEditMode = {\cf17 false};\par
00180             AllowDrag = {\cf17 true};\par
00181             AllowDrop = {\cf17 true};\par
00182         \}\par
00183         {\cf18 void} ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)\par
00184         \{\par
00185             info.AddValue({\cf22 "ID"}, ID, typeof(Guid));\par
00186             info.AddValue({\cf22 "Name"}, Name, typeof({\cf18 string}));\par
00187             info.AddValue({\cf22 "Children"}, Children, typeof(SortableObservableCollection<TagNode>));\par
00188             info.AddValue({\cf22 "Nodes"}, Nodes, typeof(SortableObservableCollection<uint>));\par
00189             info.AddValue({\cf22 "IsNameable"}, IsNameable, typeof({\cf18 bool}));\par
00190             info.AddValue({\cf22 "IsShortcut"}, IsShortcut, typeof({\cf18 bool}));\par
00191             info.AddValue({\cf22 "Shortcut"}, Shortcut, typeof(ConsoleContainerElement));\par
00192             info.AddValue({\cf22 "wireColor"}, wireColor, typeof(System.Drawing.Color));\par
00193         \}\par
00194         {\cf17 internal} {\cf18 void} ReParent({\cf18 bool} clearObjects)\par
00195         \{\par
00196             {\cf19 for} ({\cf18 int} i = 0; i < Children.Count; i++)\par
00197             \{\par
00198                 {\cf19 if} (clearObjects)\par
00199                 \{\par
00200                     Children[i].nodes.Clear();\par
00201                 \}\par
00202                 Children[i].Parent = {\cf17 this};\par
00203                 Children[i].ReParent(clearObjects);\par
00204             \}\par
00205         \}\par
00206 {\cf21         #endregion}\par
00207     \}\par
00208 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/TagReferenceMaker.cs\par \pard\plain 
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }Autodesk.Max;\par
00007 {\cf17 using }Autodesk.Max.Plugins;\par
00008 \par
00009 {\cf17 namespace }TagManager\par
00010 \{\par
00011     {\cf17 public} {\cf17 class }TagReferenceMaker:ReferenceMaker\par
00012     \{\par
00013         {\cf17 public} {\cf18 string} remember = {\cf22 ""};\par
00014 \par
00015         {\cf17 public} TagReferenceMaker(TagCenter _parent)\par
00016         \{\par
00017 \par
00018         \}\par
00019 \par
00020         {\cf17 public} {\cf17 override} RefResult NotifyRefChanged(IInterval changeInt, IReferenceTarget hTarget, ref UIntPtr partID, RefMessage message)\par
00021         \{\par
00022             {\cf19 return} RefResult.Dontcare;\par
00023         \}\par
00024         {\cf17 public} {\cf17 override} IOResult Save(IISave isave)\par
00025         \{\par
00026             isave.Save({\cf22 "test"});\par
00027             {\cf19 return} IOResult.Ok;\par
00028         \}\par
00029         {\cf17 public} {\cf17 override} IOResult Load(IILoad iload)\par
00030         \{\par
00031             remember = iload.LoadObject() as string;\par
00032             {\cf19 return} IOResult.Ok;\par
00033         \}\par
00034     \}\par
00035 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/GitHub/TagManager/TagManager/WindowExtensions.cs\par \pard\plain 
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Text;\par
00005 {\cf17 using }System.Threading.Tasks;\par
00006 {\cf17 using }System.Runtime.InteropServices;\par
00007 {\cf17 using }System.Windows.Interop;\par
00008 {\cf17 using }System.Windows;\par
00009 \par
00010 {\cf17 namespace }TagManager\par
00011 \{\par
00012     {\cf17 internal} {\cf17 static} {\cf17 class }WindowExtensions\par
00013     \{\par
00014         [DllImport({\cf22 "user32.dll"})]\par
00015         {\cf17 static} {\cf17 extern} {\cf18 int} GetWindowLong(IntPtr hwnd, {\cf18 int} index);\par
00016 \par
00017         [DllImport({\cf22 "user32.dll"})]\par
00018         {\cf17 static} {\cf17 extern} {\cf18 int} SetWindowLong(IntPtr hwnd, {\cf18 int} index, {\cf18 int} newStyle);\par
00019 \par
00020         [DllImport({\cf22 "user32.dll"})]\par
00021         {\cf17 static} {\cf17 extern} {\cf18 bool} SetWindowPos(IntPtr hwnd, IntPtr hwndInsertAfter,\par
00022                    {\cf18 int} x, {\cf18 int} y, {\cf18 int} width, {\cf18 int} height, uint flags);\par
00023 \par
00024         [DllImport({\cf22 "user32.dll"})]\par
00025         {\cf17 static} {\cf17 extern} IntPtr SendMessage(IntPtr hwnd, uint msg,\par
00026                    IntPtr wParam, IntPtr lParam);\par
00027 \par
00028         {\cf17 public} {\cf17 const} {\cf18 int} GWL_EXSTYLE = -20;\par
00029         {\cf17 public} {\cf17 const} {\cf18 int} WS_EX_DLGMODALFRAME = 0x0001;\par
00030         {\cf17 public} {\cf17 const} {\cf18 int} SWP_NOSIZE = 0x0001;\par
00031         {\cf17 public} {\cf17 const} {\cf18 int} SWP_NOMOVE = 0x0002;\par
00032         {\cf17 public} {\cf17 const} {\cf18 int} SWP_NOZORDER = 0x0004;\par
00033         {\cf17 public} {\cf17 const} {\cf18 int} SWP_FRAMECHANGED = 0x0020;\par
00034         {\cf17 public} {\cf17 const} {\cf18 int} GWL_STYLE = -16;\par
00035         {\cf17 public} {\cf17 const} {\cf18 int} WS_MAXIMIZEBOX = 0x00010000;\par
00036         {\cf17 public} {\cf17 const} {\cf18 int} WS_MINIMIZEBOX = 0x00020000;\par
00037         {\cf17 public} {\cf17 const} {\cf18 int} WS_SYSMENU = 0x00080000;\par
00038         {\cf17 public} {\cf17 const} {\cf18 int} WS_EX_TOOLWINDOW = 0x00000080;\par
00039 \par
00040         {\cf17 public} {\cf17 static} {\cf18 void} RemoveIcon(System.Windows.Interop.WindowInteropHelper windowHandle)\par
00041         \{\par
00042             {\cf20 // Get this window's handle}\par
00043             IntPtr hwnd = windowHandle.Handle;\par
00044 \par
00045             {\cf20 // Change the extended window style to not show a window icon}\par
00046             {\cf18 int} extendedStyle = GetWindowLong(hwnd, GWL_EXSTYLE);\par
00047             SetWindowLong(hwnd, GWL_EXSTYLE, extendedStyle | WS_EX_TOOLWINDOW);\par
00048 \par
00049             {\cf20 // Update the window's non-client area to reflect the changes}\par
00050             SetWindowPos(hwnd, IntPtr.Zero, 0, 0, 0, 0, SWP_NOMOVE |\par
00051                   SWP_NOSIZE | SWP_NOZORDER | SWP_FRAMECHANGED);\par
00052         \}\par
00053 \par
00054         {\cf17 internal} {\cf17 static} {\cf18 void} HideMinimizeAndMaximizeButtons(System.Windows.Interop.WindowInteropHelper windowHandle)\par
00055         \{\par
00056             IntPtr hwnd = windowHandle.Handle;\par
00057             var currentStyle = GetWindowLong(hwnd, GWL_STYLE);\par
00058 \par
00059             SetWindowLong(hwnd, GWL_STYLE, (currentStyle & ~WS_MAXIMIZEBOX & ~WS_MINIMIZEBOX));\par
00060         \}\par
00061     \}\par
00062 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
